
                    Nyquest Technology Co., Ltd.

NYASM 2.50

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\app_tx.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_delay_40us
                                    1-   15     	extern	_delay_us
                                    1-   16     	extern	_delay_250ms
                                    1-   17     	extern	_delay_ms
                                    1-   18     	extern	_CS1630_Dump_RF_Register
                                    1-   19     	extern	_Enter_sleep
                                    1-   20     	extern	_CS1630_SendPack
                                    1-   21     	extern	_CS1630_wr_buffer
                                    1-   22     	extern	_CS1630_write_byte
                                    1-   23     	extern	_CS1630_read_byte
                                    1-   24     	extern	_CS1630_read_buffer
                                    1-   25     	extern	_CS1630_Bank_Switch
                                    1-   26     	extern	_CS1630_ModeSwitch
                                    1-   27     	extern	_CS1630_CE_Low
                                    1-   28     	extern	_CS1630_CE_High
                                    1-   29     	extern	_CS1630_Flush_Tx
                                    1-   30     	extern	_CS1630_Clear_All_Irq
                                    1-   31     	extern	_CS1630_Init
                                    1-   32     	extern	_CS1630_Soft_Rst
                                    1-   33     	extern	_SPI_ReadByte
                                    1-   34     	extern	_SPI_SendByte
                                    1-   35     	extern	_RF_softSPI_Init
                                    1-   36     	extern	_clear_ram
                                    1-   37     	extern	_multi_16b
                                    1-   38     	extern	_multi_8b
                                    1-   39     	extern	_RF_Init
                                    1-   40     	extern	_RF_wr_cmd
                                    1-   41     	extern	_RF_write_byte
                                    1-   42     	extern	_RF_wr_buffer
                                    1-   43     	extern	_RF_Write_Ack_Payload
                                    1-   44     	extern	_RF_spi_wrd
                                    1-   45     	extern	_RF_Soft_Rst
                                    1-   46     	extern	_RF_SendPack
                                    1-   47     	extern	_RF_ReceivePack
                                    1-   48     	extern	_RF_Read_Status
                                    1-   49     	extern	_RF_read_byte
                                    1-   50     	extern	_RF_read_buffer
                                    1-   51     	extern	_RF_Operation
                                    1-   52     	extern	_RF_ModeSwitch
                                    1-   53     	extern	_RF_Get_RSSI
                                    1-   54     	extern	_RF_Get_Chip_ID
                                    1-   55     	extern	_RF_Flush_Tx
                                    1-   56     	extern	_RF_Flush_Rx
                                    1-   57     	extern	_RF_Configure_Reg
                                    1-   58     	extern	_RF_Clear_All_Irq
                                    1-   59     	extern	_RF_Change_Pwr
                                    1-   60     	extern	_RF_Change_CH
                                    1-   61     	extern	_RF_ChangeAddr_Reg
                                    1-   62     	extern	_RF_CE_Low
                                    1-   63     	extern	_RF_CE_High_Pulse
                                    1-   64     	extern	_RF_CE_High
                                    1-   65     	extern	_RF_Bank_Switch
                                    1-   66     	extern	_T0MD
                                    1-   67     	extern	_PCON1
                                    1-   68     	extern	_CMPCR
                                    1-   69     	extern	_BODCON
                                    1-   70     	extern	_PS0CV
                                    1-   71     	extern	_APHCON
                                    1-   72     	extern	_IOSTB
                                    1-   73     	extern	_IOSTA
                                    1-   74     	extern	_PWM5RH
                                    1-   75     	extern	_PWM5DUTY
                                    1-   76     	extern	_P5CR1
                                    1-   77     	extern	_PWM4DUTY
                                    1-   78     	extern	_P4CR1
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_PWM3DUTY
                                    1-   81     	extern	_T3CR2
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_TMR3
                                    1-   84     	extern	_OSCCR
                                    1-   85     	extern	_PWM2DUTY
                                    1-   86     	extern	_P2CR1
                                    1-   87     	extern	_TBHD
                                    1-   88     	extern	_TBHP
                                    1-   89     	extern	_IRCR
                                    1-   90     	extern	_BZ1CR
                                    1-   91     	extern	_PS1CV
                                    1-   92     	extern	_PWM1DUTY
                                    1-   93     	extern	_T1CR2
                                    1-   94     	extern	_T1CR1
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_TM34RH
                                    1-   97     	extern	_TMRH
                                    1-   98     	extern	_PCHBUF
                                    1-   99     	extern	_STATUS
                                    1-  100     	extern	_PCL
                                    1-  101     	extern	_TMR0
                                    1-  102     	extern	_INTE2bits
                                    1-  103     	extern	_RFCbits
                                    1-  104     	extern	_INTEDGbits
                                    1-  105     	extern	_AWUCONbits
                                    1-  106     	extern	_INTFbits
                                    1-  107     	extern	_INTEbits
                                    1-  108     	extern	_BPHCONbits
                                    1-  109     	extern	_ABPLCONbits
                                    1-  110     	extern	_BWUCONbits
                                    1-  111     	extern	_PCONbits
                                    1-  112     	extern	_PORTBbits
                                    1-  113     	extern	_PORTAbits
                                    1-  114     	extern	__gptrget1
                                    1-  116     	extern PSAVE
                                    1-  117     	extern SSAVE
                                    1-  118     	extern WSAVE
                                    1-  119     	extern STK12
                                    1-  120     	extern ___STK12
                                    1-  121     	extern STK11
                                    1-  122     	extern ___STK11
                                    1-  123     	extern STK10
                                    1-  124     	extern ___STK10
                                    1-  125     	extern STK09
                                    1-  126     	extern ___STK09
                                    1-  127     	extern STK08
                                    1-  128     	extern ___STK08
                                    1-  129     	extern STK07
                                    1-  130     	extern ___STK07
                                    1-  131     	extern STK06
                                    1-  132     	extern ___STK06
                                    1-  133     	extern STK05
                                    1-  134     	extern ___STK05
                                    1-  135     	extern STK04
                                    1-  136     	extern ___STK04
                                    1-  137     	extern STK03
                                    1-  138     	extern ___STK03
                                    1-  139     	extern STK02
                                    1-  140     	extern ___STK02
                                    1-  141     	extern STK01
                                    1-  142     	extern ___STK01
                                    1-  143     	extern STK00
                                    1-  144     	extern ___STK00
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     ; global declarations
                                    1-  147     ;--------------------------------------------------------
                                    1-  148     	extern	_INTE2
                                    1-  149     	extern	_RFC
                                    1-  150     	extern	_INTEDG
                                    1-  151     	extern	_AWUCON
                                    1-  152     	extern	_INTF
                                    1-  153     	extern	_INTE
                                    1-  154     	extern	_BPHCON
                                    1-  155     	extern	_ABPLCON
                                    1-  156     	extern	_BWUCON
                                    1-  157     	extern	_PCON
                                    1-  158     	extern	_PORTB
                                    1-  159     	extern	_PORTA
                                    1-  160     	extern	_one_key_twice_dowm
                                    1-  161     	extern	_key_status_change
                                    1-  162     	extern	_send_ble_packet
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; global definitions
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; absolute symbol definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; compiler-defined variables
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1022:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1023:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1024:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1025:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1026:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1027:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x1028:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x1029:
                                    1-  196     	.res	1
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     ; initialized data
                                    1-  199     ;--------------------------------------------------------
                                    1-  201     .segment "idata"
     0000                           1-  202     _key_status_change:
     0000 0000                      1-  205     	dw	0x00	; 0
                                    1-  208     .segment "idata"
     0000                           1-  209     _one_key_twice_dowm:
     0000 0000                      1-  212     	dw	0x00	; 0
                                    1-  215     .segment "idata"
     0000                           1-  216     _CS1630_Tx_Payload:
     0000 0002                      1-  219     	dw	0x02	; 2
     0001 0001                      1-  220     	dw	0x01	; 1
     0002 0006                      1-  221     	dw	0x06	; 6
     0003 0010                      1-  222     	dw	0x10	; 16
     0004 00FF                      1-  223     	dw	0xff	; 255
     0005 0054                      1-  224     	dw	0x54	; 84	'T'
     0006 0045                      1-  225     	dw	0x45	; 69	'E'
     0007 0000                      1-  226     	dw	0x00	; 0
     0008 0000                      1-  227     	dw	0x00	; 0
     0009 00BF                      1-  228     	dw	0xbf	; 191
     000A 00AA                      1-  229     	dw	0xaa	; 170
     000B 00FF                      1-  230     	dw	0xff	; 255
     000C 00FF                      1-  231     	dw	0xff	; 255
     000D 00FF                      1-  232     	dw	0xff	; 255
     000E 00FF                      1-  233     	dw	0xff	; 255
     000F 00FF                      1-  234     	dw	0xff	; 255
     0010 00FF                      1-  235     	dw	0xff	; 255
     0011 00FF                      1-  236     	dw	0xff	; 255
     0012 00FF                      1-  237     	dw	0xff	; 255
     0013 00FF                      1-  238     	dw	0xff	; 255
     0014 0000 0000 0000 0000 0000  1-  239     	dw	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          0000 0000 0000 0000 0000 
          0000 0000                
                                    1-  242     .segment "code"
     0000                           1-  243     _channel_index:
     0000 2002                      1-  244     	retia 0x02	; 2
     0001 201A                      1-  245     	retia 0x1a	; 26
     0002 2050                      1-  246     	retia 0x50	; 80	'P'
                                    1-  247     ;--------------------------------------------------------
                                    1-  248     ; initialized absolute data
                                    1-  249     ;--------------------------------------------------------
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ; overlayable items in internal ram 
                                    1-  252     ;--------------------------------------------------------
                                    1-  253     ;	udata_ovr
                                    1-  254     ;--------------------------------------------------------
                                    1-  255     ; code
                                    1-  256     ;--------------------------------------------------------
                                    1-  257     ; code_app_tx	code
                                    1-  258     ;***
                                    1-  259     ;  pBlock Stats: dbName = C
                                    1-  260     ;***
                                    1-  261     ;has an exit
                                    1-  262     ;functions called:
                                    1-  263     ;   _CS1630_CE_Low
                                    1-  264     ;   _CS1630_Flush_Tx
                                    1-  265     ;   _CS1630_Clear_All_Irq
                                    1-  266     ;   _CS1630_write_byte
                                    1-  267     ;   _delay_ms
                                    1-  268     ;   __gptrget1
                                    1-  269     ;   _CS1630_write_byte
                                    1-  270     ;   _CS1630_SendPack
                                    1-  271     ;   _CS1630_CE_High
                                    1-  272     ;   _delay_40us
                                    1-  273     ;   _CS1630_CE_Low
                                    1-  274     ;   _CS1630_read_byte
                                    1-  275     ;   _CS1630_write_byte
                                    1-  276     ;   __gptrget1
                                    1-  277     ;   _CS1630_write_byte
                                    1-  278     ;   _CS1630_SendPack
                                    1-  279     ;   _CS1630_CE_High
                                    1-  280     ;   _delay_40us
                                    1-  281     ;   _CS1630_CE_Low
                                    1-  282     ;   _CS1630_read_byte
                                    1-  283     ;   _CS1630_write_byte
                                    1-  284     ;   _CS1630_write_byte
                                    1-  285     ;   _delay_ms
                                    1-  286     ;   _CS1630_write_byte
                                    1-  287     ;   _delay_ms
                                    1-  288     ;   _CS1630_CE_Low
                                    1-  289     ;   _CS1630_Flush_Tx
                                    1-  290     ;   _CS1630_Clear_All_Irq
                                    1-  291     ;   _CS1630_write_byte
                                    1-  292     ;   _delay_ms
                                    1-  293     ;   __gptrget1
                                    1-  294     ;   _CS1630_write_byte
                                    1-  295     ;   _CS1630_SendPack
                                    1-  296     ;   _CS1630_CE_High
                                    1-  297     ;   _delay_40us
                                    1-  298     ;   _CS1630_CE_Low
                                    1-  299     ;   _CS1630_read_byte
                                    1-  300     ;   _CS1630_write_byte
                                    1-  301     ;   __gptrget1
                                    1-  302     ;   _CS1630_write_byte
                                    1-  303     ;   _CS1630_SendPack
                                    1-  304     ;   _CS1630_CE_High
                                    1-  305     ;   _delay_40us
                                    1-  306     ;   _CS1630_CE_Low
                                    1-  307     ;   _CS1630_read_byte
                                    1-  308     ;   _CS1630_write_byte
                                    1-  309     ;   _CS1630_write_byte
                                    1-  310     ;   _delay_ms
                                    1-  311     ;   _CS1630_write_byte
                                    1-  312     ;   _delay_ms
                                    1-  313     ;12 compiler assigned registers:
                                    1-  314     ;   r0x1022
                                    1-  315     ;   STK00
                                    1-  316     ;   r0x1023
                                    1-  317     ;   STK01
                                    1-  318     ;   r0x1024
                                    1-  319     ;   r0x1025
                                    1-  320     ;   r0x1026
                                    1-  321     ;   r0x1027
                                    1-  322     ;   STK03
                                    1-  323     ;   STK02
                                    1-  324     ;   r0x1028
                                    1-  325     ;   r0x1029
                                    1-  326     ;; Starting pCode block
                                    1-  327     .segment "code"; module=app_tx, function=_send_ble_packet
                                    1-  329     ;local variable name mapping:
     0000                           1-  338     _send_ble_packet:
                                    1-  339     ; 2 exit points
                                    1-  340     	.line	37, "BSP\app_tx.c"; 	void send_ble_packet(unsigned char code_value, unsigned char send_times, unsigned char Serial_Number)
                                    1-  341     	BANKSEL	r0x1022
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  342     	MOVAR	r0x1022
     0002 01rr                      1-  343     	MOVR	STK00,W
                                    1-  344     	BANKSEL	r0x1023
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  345     	MOVAR	r0x1023
     0005 01rr                      1-  346     	MOVR	STK01,W
                                    1-  347     	BANKSEL	r0x1024
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  348     	MOVAR	r0x1024
                                    1-  349     	.line	39, "BSP\app_tx.c"; 	CLRWDT();
     0008 0002                      1-  350     	clrwdt
                                    1-  351     	.line	47, "BSP\app_tx.c"; 	AWUCON = 0xfc;
     0009 21FC                      1-  352     	MOVIA	0xfc
     000A 00rr                      1-  353     	MOVAR	_AWUCON
                                    1-  354     	.line	48, "BSP\app_tx.c"; 	BWUCON = 0x00;
     000B 02rr                      1-  355     	CLRR	_BWUCON
                                    1-  356     	.line	49, "BSP\app_tx.c"; 	IOSTA = C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input | C_PA6_Input | C_PA7_Input;  // 配置PA2、3、4、5、6、7为输入
     000C 21FC                      1-  357     	MOVIA	0xfc
     000D 000r                      1-  358     	IOST	_IOSTA
                                    1-  359     	.line	50, "BSP\app_tx.c"; 	APHCON = 0b00100011; // 设置2、3、4、6、7上拉
     000E 2123                      1-  360     	MOVIA	0x23
     000F 000r                      1-  361     	IOST	_APHCON
                                    1-  362     	.line	52, "BSP\app_tx.c"; 	INTE = C_INT_PABKey;
     0010 2102                      1-  363     	MOVIA	0x02
     0011 00rr                      1-  364     	MOVAR	_INTE
                                    1-  365     	.line	53, "BSP\app_tx.c"; 	INTF = 0x00;
     0012 02rr                      1-  366     	CLRR	_INTF
                                    1-  367     	.line	56, "BSP\app_tx.c"; 	CS1630_Tx_Payload[7] = Serial_Number; // 序号，用于区分不同数据包
                                    1-  368     	BANKSEL	r0x1024
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 01rr                      1-  369     	MOVR	r0x1024,W
                                    1-  370     	BANKSEL	_CS1630_Tx_Payload
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 00rr                      1-  371     	MOVAR	(_CS1630_Tx_Payload + 7)
                                    1-  372     	.line	57, "BSP\app_tx.c"; 	CS1630_Tx_Payload[8] = code_value; // 码值，用于指示功能
                                    1-  373     	BANKSEL	r0x1022
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 01rr                      1-  374     	MOVR	r0x1022,W
                                    1-  375     	BANKSEL	_CS1630_Tx_Payload
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1-  376     	MOVAR	(_CS1630_Tx_Payload + 8)
                                    1-  377     	.line	60, "BSP\app_tx.c"; 	CS1630_CE_Low();
                                    1-  378     	MCALL	_CS1630_CE_Low
     001B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  379     	.line	61, "BSP\app_tx.c"; 	CS1630_Flush_Tx();
                                    1-  380     	MCALL	_CS1630_Flush_Tx
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  381     	.line	62, "BSP\app_tx.c"; 	CS1630_Clear_All_Irq();
                                    1-  382     	MCALL	_CS1630_Clear_All_Irq
     001D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  383     	.line	65, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0f);
     001E 210F                      1-  384     	MOVIA	0x0f
     001F 00rr                      1-  385     	MOVAR	STK00
     0020 2100                      1-  386     	MOVIA	0x00
                                    1-  387     	MCALL	_CS1630_write_byte
     0021 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  388     	.line	66, "BSP\app_tx.c"; 	delay_ms(5);
     0022 2105                      1-  389     	MOVIA	0x05
                                    1-  390     	MCALL	_delay_ms
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  391     	.line	68, "BSP\app_tx.c"; 	CLRWDT();
     0024 0002                      1-  392     	clrwdt
                                    1-  393     	.line	69, "BSP\app_tx.c"; 	PB4 = 1;
                                    1-  394     	BANKSEL	_PORTB
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 1Arr                      1-  395     	BSR	_PORTB,4
                                    1-  396     	.line	71, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  397     	BANKSEL	r0x1022
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 02rr                      1-  398     	CLRR	r0x1022
     0029                           1-  399     _02028_DS_:
                                    1-  400     	.line	73, "BSP\app_tx.c"; 	CLRWDT();
     0029 0002                      1-  401     	clrwdt
                                    1-  402     	.line	74, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_RF_CH, channel_index[idx]); // 设置射频频道
                                    1-  403     	BANKSEL	r0x1022
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 01rr                      1-  404     	MOVR	r0x1022,W
     002C 25rr                      1-  405     	ADDIA	(_channel_index + 0)
                                    1-  406     	BANKSEL	r0x1024
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 00rr                      1-  407     	MOVAR	r0x1024
     002F 21rr                      1-  408     	MOVIA	((_channel_index + 0) >> 8) & 0xff
     0030 2600                      1-  409     	ADCIA	0x00
                                    1-  410     	BANKSEL	r0x1025
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1-  411     	MOVAR	r0x1025
                                    1-  412     	BANKSEL	r0x1024
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1-  413     	MOVR	r0x1024,W
     0035 00rr                      1-  414     	MOVAR	STK01
                                    1-  415     	BANKSEL	r0x1025
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 01rr                      1-  416     	MOVR	r0x1025,W
     0038 00rr                      1-  417     	MOVAR	STK00
     0039 2180                      1-  418     	MOVIA	0x80
                                    1-  419     	MCALL	__gptrget1
     003A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  420     	BANKSEL	r0x1026
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1-  421     	MOVAR	r0x1026
     003D 01rr                      1-  422     	MOVR	r0x1026,W
     003E 00rr                      1-  423     	MOVAR	STK00
     003F 2105                      1-  424     	MOVIA	0x05
                                    1-  425     	MCALL	_CS1630_write_byte
     0040 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  426     	.line	75, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  427     	BANKSEL	r0x1024
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 02rr                      1-  428     	CLRR	r0x1024
     0043                           1-  429     _02026_DS_:
                                    1-  430     	.line	77, "BSP\app_tx.c"; 	CS1630_SendPack(RF_W_TX_PAYLOAD, CS1630_Tx_Payload, 0x14); // 发送数据包
     0043 21rr                      1-  431     	MOVIA	(_CS1630_Tx_Payload + 0)
                                    1-  432     	BANKSEL	r0x1025
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 00rr                      1-  433     	MOVAR	r0x1025
                                    1-  434     	BANKSEL	r0x1026
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 02rr                      1-  435     	CLRR	r0x1026
                                    1-  436     	BANKSEL	r0x1027
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 02rr                      1-  437     	CLRR	r0x1027
     004A 2114                      1-  438     	MOVIA	0x14
     004B 00rr                      1-  439     	MOVAR	STK03
                                    1-  440     	BANKSEL	r0x1025
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 01rr                      1-  441     	MOVR	r0x1025,W
     004E 00rr                      1-  442     	MOVAR	STK02
                                    1-  443     	BANKSEL	r0x1026
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 01rr                      1-  444     	MOVR	r0x1026,W
     0051 00rr                      1-  445     	MOVAR	STK01
                                    1-  446     	BANKSEL	r0x1027
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1-  447     	MOVR	r0x1027,W
     0054 00rr                      1-  448     	MOVAR	STK00
     0055 21A0                      1-  449     	MOVIA	0xa0
                                    1-  450     	MCALL	_CS1630_SendPack
     0056 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  451     	.line	78, "BSP\app_tx.c"; 	CS1630_CE_High(); // 产生CE脉冲，开始发送
                                    1-  452     	MCALL	_CS1630_CE_High
     0057 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  453     	.line	79, "BSP\app_tx.c"; 	delay_40us(); // 等待脉冲稳定
                                    1-  454     	MCALL	_delay_40us
     0058 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  455     	.line	80, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 结束脉冲
                                    1-  456     	MCALL	_CS1630_CE_Low
     0059 2rrr                      3-   65 m1      LCALL rom_address
     005A                           1-  457     _02009_DS_:
                                    1-  458     	.line	84, "BSP\app_tx.c"; 	status = CS1630_read_byte(CS1630_BANK0_STATUS); // 读取状态寄存器
     005A 2107                      1-  459     	MOVIA	0x07
                                    1-  460     	MCALL	_CS1630_read_byte
     005B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  461     	BANKSEL	r0x1025
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 00rr                      1-  462     	MOVAR	r0x1025
                                    1-  463     	.line	85, "BSP\app_tx.c"; 	if ((TX_DS & status) || (MAX_RT & status)) // 检查发送完成或重传达到最大次数
     005E 0Err                      1-  464     	BTRSC	r0x1025,5
                                    1-  465     	MGOTO	_02005_DS_
     005F 3rrr                      3-   62 m1      LGOTO rom_address
     0060 0Arr                      1-  466     	BTRSS	r0x1025,4
                                    1-  467     	MGOTO	_02009_DS_
     0061 3rrr                      3-   62 m1      LGOTO rom_address
     0062                           1-  468     _02005_DS_:
                                    1-  469     	.line	87, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, status); // 清除状态
                                    1-  470     	BANKSEL	r0x1025
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 01rr                      1-  471     	MOVR	r0x1025,W
     0064 00rr                      1-  472     	MOVAR	STK00
     0065 2107                      1-  473     	MOVIA	0x07
                                    1-  474     	MCALL	_CS1630_write_byte
     0066 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  475     	.line	75, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  476     	BANKSEL	r0x1024
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 05rr                      1-  477     	INCR	r0x1024,F
                                    1-  478     ;;unsigned compare: left < lit(0x3=3), size=1
     0069 2103                      1-  479     	MOVIA	0x03
     006A 04rr                      1-  480     	SUBAR	r0x1024,W
     006B 0803                      1-  481     	BTRSS	STATUS,0
                                    1-  482     	MGOTO	_02026_DS_
     006C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  483     	.line	71, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  484     	BANKSEL	r0x1022
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 05rr                      1-  485     	INCR	r0x1022,F
                                    1-  486     ;;unsigned compare: left < lit(0x3=3), size=1
     006F 2103                      1-  487     	MOVIA	0x03
     0070 04rr                      1-  488     	SUBAR	r0x1022,W
     0071 0803                      1-  489     	BTRSS	STATUS,0
                                    1-  490     	MGOTO	_02028_DS_
     0072 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  491     	.line	93, "BSP\app_tx.c"; 	PB4 = 0;
                                    1-  492     	BANKSEL	_PORTB
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 1Err                      1-  493     	BCR	_PORTB,4
                                    1-  494     	.line	94, "BSP\app_tx.c"; 	key_status_change = 0;
                                    1-  495     	BANKSEL	_key_status_change
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 02rr                      1-  496     	CLRR	_key_status_change
                                    1-  497     	.line	96, "BSP\app_tx.c"; 	for(great_circle = 0; great_circle < send_times; great_circle++)
                                    1-  498     	BANKSEL	r0x1022
     0077 rrrr                      3-  109 m1      .banksel ram_address
     0078 02rr                      1-  499     	CLRR	r0x1022
                                    1-  500     	BANKSEL	r0x1024
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 02rr                      1-  501     	CLRR	r0x1024
     007B                           1-  502     _02035_DS_:
                                    1-  503     	BANKSEL	r0x1023
     007B rrrr                      3-  109 m1      .banksel ram_address
     007C 01rr                      1-  504     	MOVR	r0x1023,W
                                    1-  505     	BANKSEL	r0x1024
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 04rr                      1-  506     	SUBAR	r0x1024,W
     007F 0C03                      1-  507     	BTRSC	STATUS,0
                                    1-  508     	MGOTO	_02025_DS_
     0080 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  509     	.line	98, "BSP\app_tx.c"; 	CLRWDT();
     0081 0002                      1-  510     	clrwdt
                                    1-  511     	.line	100, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  512     	BANKSEL	r0x1025
     0082 rrrr                      3-  109 m1      .banksel ram_address
     0083 02rr                      1-  513     	CLRR	r0x1025
     0084                           1-  514     _02032_DS_:
                                    1-  515     	.line	102, "BSP\app_tx.c"; 	CLRWDT();
     0084 0002                      1-  516     	clrwdt
                                    1-  517     	.line	103, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_RF_CH, channel_index[idx]); // 设置射频频道
                                    1-  518     	BANKSEL	r0x1025
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 01rr                      1-  519     	MOVR	r0x1025,W
     0087 25rr                      1-  520     	ADDIA	(_channel_index + 0)
                                    1-  521     	BANKSEL	r0x1026
     0088 rrrr                      3-  109 m1      .banksel ram_address
     0089 00rr                      1-  522     	MOVAR	r0x1026
     008A 21rr                      1-  523     	MOVIA	((_channel_index + 0) >> 8) & 0xff
     008B 2600                      1-  524     	ADCIA	0x00
                                    1-  525     	BANKSEL	r0x1027
     008C rrrr                      3-  109 m1      .banksel ram_address
     008D 00rr                      1-  526     	MOVAR	r0x1027
                                    1-  527     	BANKSEL	r0x1026
     008E rrrr                      3-  109 m1      .banksel ram_address
     008F 01rr                      1-  528     	MOVR	r0x1026,W
     0090 00rr                      1-  529     	MOVAR	STK01
                                    1-  530     	BANKSEL	r0x1027
     0091 rrrr                      3-  109 m1      .banksel ram_address
     0092 01rr                      1-  531     	MOVR	r0x1027,W
     0093 00rr                      1-  532     	MOVAR	STK00
     0094 2180                      1-  533     	MOVIA	0x80
                                    1-  534     	MCALL	__gptrget1
     0095 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  535     	BANKSEL	r0x1028
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 00rr                      1-  536     	MOVAR	r0x1028
     0098 01rr                      1-  537     	MOVR	r0x1028,W
     0099 00rr                      1-  538     	MOVAR	STK00
     009A 2105                      1-  539     	MOVIA	0x05
                                    1-  540     	MCALL	_CS1630_write_byte
     009B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  541     	.line	104, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  542     	BANKSEL	r0x1026
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 02rr                      1-  543     	CLRR	r0x1026
     009E                           1-  544     _02030_DS_:
                                    1-  545     	.line	106, "BSP\app_tx.c"; 	CS1630_SendPack(RF_W_TX_PAYLOAD, CS1630_Tx_Payload, 0x14); // 发送数据包
     009E 21rr                      1-  546     	MOVIA	(_CS1630_Tx_Payload + 0)
                                    1-  547     	BANKSEL	r0x1027
     009F rrrr                      3-  109 m1      .banksel ram_address
     00A0 00rr                      1-  548     	MOVAR	r0x1027
                                    1-  549     	BANKSEL	r0x1028
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 02rr                      1-  550     	CLRR	r0x1028
                                    1-  551     	BANKSEL	r0x1029
     00A3 rrrr                      3-  109 m1      .banksel ram_address
     00A4 02rr                      1-  552     	CLRR	r0x1029
     00A5 2114                      1-  553     	MOVIA	0x14
     00A6 00rr                      1-  554     	MOVAR	STK03
                                    1-  555     	BANKSEL	r0x1027
     00A7 rrrr                      3-  109 m1      .banksel ram_address
     00A8 01rr                      1-  556     	MOVR	r0x1027,W
     00A9 00rr                      1-  557     	MOVAR	STK02
                                    1-  558     	BANKSEL	r0x1028
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 01rr                      1-  559     	MOVR	r0x1028,W
     00AC 00rr                      1-  560     	MOVAR	STK01
                                    1-  561     	BANKSEL	r0x1029
     00AD rrrr                      3-  109 m1      .banksel ram_address
     00AE 01rr                      1-  562     	MOVR	r0x1029,W
     00AF 00rr                      1-  563     	MOVAR	STK00
     00B0 21A0                      1-  564     	MOVIA	0xa0
                                    1-  565     	MCALL	_CS1630_SendPack
     00B1 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  566     	.line	107, "BSP\app_tx.c"; 	CS1630_CE_High(); // 产生CE脉冲，开始发送
                                    1-  567     	MCALL	_CS1630_CE_High
     00B2 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  568     	.line	108, "BSP\app_tx.c"; 	delay_40us(); // 等待脉冲稳定
                                    1-  569     	MCALL	_delay_40us
     00B3 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  570     	.line	109, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 结束脉冲
                                    1-  571     	MCALL	_CS1630_CE_Low
     00B4 2rrr                      3-   65 m1      LCALL rom_address
     00B5                           1-  572     _02017_DS_:
                                    1-  573     	.line	113, "BSP\app_tx.c"; 	status = CS1630_read_byte(CS1630_BANK0_STATUS); // 读取状态寄存器
     00B5 2107                      1-  574     	MOVIA	0x07
                                    1-  575     	MCALL	_CS1630_read_byte
     00B6 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  576     	BANKSEL	r0x1027
     00B7 rrrr                      3-  109 m1      .banksel ram_address
     00B8 00rr                      1-  577     	MOVAR	r0x1027
                                    1-  578     	.line	114, "BSP\app_tx.c"; 	if ((TX_DS & status) || (MAX_RT & status)) // 检查发送完成或重传达到最大次数
     00B9 0Err                      1-  579     	BTRSC	r0x1027,5
                                    1-  580     	MGOTO	_02013_DS_
     00BA 3rrr                      3-   62 m1      LGOTO rom_address
     00BB 0Arr                      1-  581     	BTRSS	r0x1027,4
                                    1-  582     	MGOTO	_02017_DS_
     00BC 3rrr                      3-   62 m1      LGOTO rom_address
     00BD                           1-  583     _02013_DS_:
                                    1-  584     	.line	116, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, status); // 清除状态
                                    1-  585     	BANKSEL	r0x1027
     00BD rrrr                      3-  109 m1      .banksel ram_address
     00BE 01rr                      1-  586     	MOVR	r0x1027,W
     00BF 00rr                      1-  587     	MOVAR	STK00
     00C0 2107                      1-  588     	MOVIA	0x07
                                    1-  589     	MCALL	_CS1630_write_byte
     00C1 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  590     	.line	104, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  591     	BANKSEL	r0x1026
     00C2 rrrr                      3-  109 m1      .banksel ram_address
     00C3 05rr                      1-  592     	INCR	r0x1026,F
                                    1-  593     ;;unsigned compare: left < lit(0x3=3), size=1
     00C4 2103                      1-  594     	MOVIA	0x03
     00C5 04rr                      1-  595     	SUBAR	r0x1026,W
     00C6 0803                      1-  596     	BTRSS	STATUS,0
                                    1-  597     	MGOTO	_02030_DS_
     00C7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  598     	.line	100, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  599     	BANKSEL	r0x1025
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 05rr                      1-  600     	INCR	r0x1025,F
                                    1-  601     ;;unsigned compare: left < lit(0x3=3), size=1
     00CA 2103                      1-  602     	MOVIA	0x03
     00CB 04rr                      1-  603     	SUBAR	r0x1025,W
     00CC 0803                      1-  604     	BTRSS	STATUS,0
                                    1-  605     	MGOTO	_02032_DS_
     00CD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  606     	.line	123, "BSP\app_tx.c"; 	if(key_status_change == 1)
                                    1-  607     	BANKSEL	_key_status_change
     00CE rrrr                      3-  109 m1      .banksel ram_address
     00CF 01rr                      1-  608     	MOVR	_key_status_change,W
     00D0 2401                      1-  609     	XORIA	0x01
     00D1 0903                      1-  610     	BTRSS	STATUS,2
                                    1-  611     	MGOTO	_02036_DS_
     00D2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  612     	.line	125, "BSP\app_tx.c"; 	key_status_change = 0;
     00D3 02rr                      1-  613     	CLRR	_key_status_change
                                    1-  614     	.line	126, "BSP\app_tx.c"; 	enter_interput_times++;
                                    1-  615     	BANKSEL	r0x1022
     00D4 rrrr                      3-  109 m1      .banksel ram_address
     00D5 05rr                      1-  616     	INCR	r0x1022,F
                                    1-  617     	.line	127, "BSP\app_tx.c"; 	if(enter_interput_times == 2)
     00D6 01rr                      1-  618     	MOVR	r0x1022,W
     00D7 2402                      1-  619     	XORIA	0x02
     00D8 0903                      1-  620     	BTRSS	STATUS,2
                                    1-  621     	MGOTO	_02036_DS_
     00D9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  622     	.line	129, "BSP\app_tx.c"; 	one_key_twice_dowm = 1;
     00DA 2101                      1-  623     	MOVIA	0x01
                                    1-  624     	BANKSEL	_one_key_twice_dowm
     00DB rrrr                      3-  109 m1      .banksel ram_address
     00DC 00rr                      1-  625     	MOVAR	_one_key_twice_dowm
                                    1-  626     	.line	131, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0d);
     00DD 210D                      1-  627     	MOVIA	0x0d
     00DE 00rr                      1-  628     	MOVAR	STK00
     00DF 2100                      1-  629     	MOVIA	0x00
                                    1-  630     	MCALL	_CS1630_write_byte
     00E0 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  631     	.line	132, "BSP\app_tx.c"; 	delay_ms(2);
     00E1 2102                      1-  632     	MOVIA	0x02
                                    1-  633     	MCALL	_delay_ms
     00E2 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  634     	.line	133, "BSP\app_tx.c"; 	return;
                                    1-  635     	MGOTO	_02037_DS_
     00E3 3rrr                      3-   62 m1      LGOTO rom_address
     00E4                           1-  636     _02036_DS_:
                                    1-  637     	.line	96, "BSP\app_tx.c"; 	for(great_circle = 0; great_circle < send_times; great_circle++)
                                    1-  638     	BANKSEL	r0x1024
     00E4 rrrr                      3-  109 m1      .banksel ram_address
     00E5 05rr                      1-  639     	INCR	r0x1024,F
                                    1-  640     	MGOTO	_02035_DS_
     00E6 3rrr                      3-   62 m1      LGOTO rom_address
     00E7                           1-  641     _02025_DS_:
                                    1-  642     	.line	139, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0d);
     00E7 210D                      1-  643     	MOVIA	0x0d
     00E8 00rr                      1-  644     	MOVAR	STK00
     00E9 2100                      1-  645     	MOVIA	0x00
                                    1-  646     	MCALL	_CS1630_write_byte
     00EA 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  647     	.line	140, "BSP\app_tx.c"; 	delay_ms(2);
     00EB 2102                      1-  648     	MOVIA	0x02
                                    1-  649     	MCALL	_delay_ms
     00EC 2rrr                      3-   65 m1      LCALL rom_address
     00ED                           1-  650     _02037_DS_:
                                    1-  651     	.line	141, "BSP\app_tx.c"; 	}
                                    1-  652     	RETURN	
     00ED 0010                      3-   39 m1      ret
                                    1-  653     ; exit point of _send_ble_packet
                                    1-  656     ;	code size estimation:
                                    1-  657     ;	  179+   54 =   233 instructions (  574 byte)
                                    1-  659     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\app_tx.s
002 ny8a054e.inc
003 common.inc
004 BSP\app_tx.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
SRAM / SFR   = 0x00000000 - 0x00000000
