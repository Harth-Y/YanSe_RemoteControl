
                    Nyquest Technology Co., Ltd.

NYASM 2.50

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\bsp_spi.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_usart_send_string
                                    1-   15     	extern	_usart_send_byte
                                    1-   16     	extern	_usart_init
                                    1-   17     	extern	_clear_ram
                                    1-   18     	extern	_multi_16b
                                    1-   19     	extern	_multi_8b
                                    1-   20     	extern	_T0MD
                                    1-   21     	extern	_PCON1
                                    1-   22     	extern	_CMPCR
                                    1-   23     	extern	_BODCON
                                    1-   24     	extern	_PS0CV
                                    1-   25     	extern	_APHCON
                                    1-   26     	extern	_IOSTB
                                    1-   27     	extern	_IOSTA
                                    1-   28     	extern	_PWM5RH
                                    1-   29     	extern	_PWM5DUTY
                                    1-   30     	extern	_P5CR1
                                    1-   31     	extern	_PWM4DUTY
                                    1-   32     	extern	_P4CR1
                                    1-   33     	extern	_PS3CV
                                    1-   34     	extern	_PWM3DUTY
                                    1-   35     	extern	_T3CR2
                                    1-   36     	extern	_T3CR1
                                    1-   37     	extern	_TMR3
                                    1-   38     	extern	_OSCCR
                                    1-   39     	extern	_PWM2DUTY
                                    1-   40     	extern	_P2CR1
                                    1-   41     	extern	_TBHD
                                    1-   42     	extern	_TBHP
                                    1-   43     	extern	_IRCR
                                    1-   44     	extern	_BZ1CR
                                    1-   45     	extern	_PS1CV
                                    1-   46     	extern	_PWM1DUTY
                                    1-   47     	extern	_T1CR2
                                    1-   48     	extern	_T1CR1
                                    1-   49     	extern	_TMR1
                                    1-   50     	extern	_TM34RH
                                    1-   51     	extern	_TMRH
                                    1-   52     	extern	_PCHBUF
                                    1-   53     	extern	_STATUS
                                    1-   54     	extern	_PCL
                                    1-   55     	extern	_TMR0
                                    1-   56     	extern	_INTE2bits
                                    1-   57     	extern	_RFCbits
                                    1-   58     	extern	_INTEDGbits
                                    1-   59     	extern	_AWUCONbits
                                    1-   60     	extern	_INTFbits
                                    1-   61     	extern	_INTEbits
                                    1-   62     	extern	_BPHCONbits
                                    1-   63     	extern	_ABPLCONbits
                                    1-   64     	extern	_BWUCONbits
                                    1-   65     	extern	_PCONbits
                                    1-   66     	extern	_PORTBbits
                                    1-   67     	extern	_PORTAbits
                                    1-   69     	extern PSAVE
                                    1-   70     	extern SSAVE
                                    1-   71     	extern WSAVE
                                    1-   72     	extern STK12
                                    1-   73     	extern ___STK12
                                    1-   74     	extern STK11
                                    1-   75     	extern ___STK11
                                    1-   76     	extern STK10
                                    1-   77     	extern ___STK10
                                    1-   78     	extern STK09
                                    1-   79     	extern ___STK09
                                    1-   80     	extern STK08
                                    1-   81     	extern ___STK08
                                    1-   82     	extern STK07
                                    1-   83     	extern ___STK07
                                    1-   84     	extern STK06
                                    1-   85     	extern ___STK06
                                    1-   86     	extern STK05
                                    1-   87     	extern ___STK05
                                    1-   88     	extern STK04
                                    1-   89     	extern ___STK04
                                    1-   90     	extern STK03
                                    1-   91     	extern ___STK03
                                    1-   92     	extern STK02
                                    1-   93     	extern ___STK02
                                    1-   94     	extern STK01
                                    1-   95     	extern ___STK01
                                    1-   96     	extern STK00
                                    1-   97     	extern ___STK00
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     ; global declarations
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     	extern	_RF_spi_wrd
                                    1-  102     	extern	_INTE2
                                    1-  103     	extern	_RFC
                                    1-  104     	extern	_INTEDG
                                    1-  105     	extern	_AWUCON
                                    1-  106     	extern	_INTF
                                    1-  107     	extern	_INTE
                                    1-  108     	extern	_BPHCON
                                    1-  109     	extern	_ABPLCON
                                    1-  110     	extern	_BWUCON
                                    1-  111     	extern	_PCON
                                    1-  112     	extern	_PORTB
                                    1-  113     	extern	_PORTA
                                    1-  114     	extern	_RF_softSPI_Init
                                    1-  115     	extern	_SPI_SendByte
                                    1-  116     	extern	_SPI_ReadByte
                                    1-  118     ;--------------------------------------------------------
                                    1-  119     ; global definitions
                                    1-  120     ;--------------------------------------------------------
                                    1-  121     ;--------------------------------------------------------
                                    1-  122     ; absolute symbol definitions
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     ;--------------------------------------------------------
                                    1-  125     ; compiler-defined variables
                                    1-  126     ;--------------------------------------------------------
                                    1-  127     .segment "uninit"
     0000                           1-  128     r0x1008:
                                    1-  129     	.res	1
                                    1-  130     .segment "uninit"
     0000                           1-  131     r0x1004:
                                    1-  132     	.res	1
                                    1-  133     .segment "uninit"
     0000                           1-  134     r0x1005:
                                    1-  135     	.res	1
                                    1-  136     .segment "uninit"
     0000                           1-  137     r0x1006:
                                    1-  138     	.res	1
                                    1-  139     .segment "uninit"
     0000                           1-  140     r0x1007:
                                    1-  141     	.res	1
                                    1-  142     .segment "uninit"
     0000                           1-  143     r0x1000:
                                    1-  144     	.res	1
                                    1-  145     .segment "uninit"
     0000                           1-  146     r0x1001:
                                    1-  147     	.res	1
                                    1-  148     .segment "uninit"
     0000                           1-  149     r0x1002:
                                    1-  150     	.res	1
                                    1-  151     .segment "uninit"
     0000                           1-  152     r0x1003:
                                    1-  153     	.res	1
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     ; initialized data
                                    1-  156     ;--------------------------------------------------------
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ; initialized absolute data
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ; overlayable items in internal ram 
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     ;	udata_ovr
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; code
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; code_bsp_spi	code
                                    1-  168     ;***
                                    1-  169     ;  pBlock Stats: dbName = C
                                    1-  170     ;***
                                    1-  171     ;has an exit
                                    1-  172     ;4 compiler assigned registers:
                                    1-  173     ;   r0x1000
                                    1-  174     ;   r0x1001
                                    1-  175     ;   r0x1002
                                    1-  176     ;   r0x1003
                                    1-  177     ;; Starting pCode block
                                    1-  178     .segment "code"; module=bsp_spi, function=_SPI_ReadByte
                                    1-  180     ;local variable name mapping:
     0000                           1-  184     _SPI_ReadByte:
                                    1-  185     ; 2 exit points
                                    1-  186     	.line	61, "BSP\bsp_spi.c"; 	unsigned char byte = 0;
                                    1-  187     	BANKSEL	r0x1000
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1-  188     	CLRR	r0x1000
                                    1-  189     	.line	64, "BSP\bsp_spi.c"; 	IOSTB = C_PB5_Input;
     0002 2120                      1-  190     	MOVIA	0x20
     0003 000r                      1-  191     	IOST	_IOSTB
                                    1-  192     	.line	66, "BSP\bsp_spi.c"; 	for(bit_ctr = 0;bit_ctr < 8;bit_ctr ++) // output 8-bit
                                    1-  193     	BANKSEL	r0x1001
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 02rr                      1-  194     	CLRR	r0x1001
     0006                           1-  195     _02070_DS_:
                                    1-  196     	.line	68, "BSP\bsp_spi.c"; 	byte = byte << 1;
     0006 1C03                      1-  197     	BCR	STATUS,0
                                    1-  198     	BANKSEL	r0x1000
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 14rr                      1-  199     	RLR	r0x1000,W
                                    1-  200     	BANKSEL	r0x1002
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1-  201     	MOVAR	r0x1002
                                    1-  202     	.line	69, "BSP\bsp_spi.c"; 	RF_SCK_H();
     000B 0000                      1-  203     	nop
     000C 0000                      1-  204     	nop
     000D 0000                      1-  205     	nop
     000E 18rr                      1-  206     	BSR	_PORTAbits,0
     000F 0000                      1-  207     	nop
     0010 0000                      1-  208     	nop
     0011 0000                      1-  209     	nop
                                    1-  210     	.line	70, "BSP\bsp_spi.c"; 	temp = RF_Reag_SDIO();
                                    1-  211     	BANKSEL	r0x1003
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 02rr                      1-  212     	CLRR	r0x1003
     0014 0Err                      1-  213     	BTRSC	_PORTBbits,5
     0015 05rr                      1-  214     	INCR	r0x1003,F
                                    1-  215     	.line	71, "BSP\bsp_spi.c"; 	byte |= temp;
     0016 01rr                      1-  216     	MOVR	r0x1003,W
                                    1-  217     	BANKSEL	r0x1002
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 11rr                      1-  218     	IORAR	r0x1002,W
                                    1-  219     	BANKSEL	r0x1000
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1-  220     	MOVAR	r0x1000
                                    1-  221     	.line	72, "BSP\bsp_spi.c"; 	RF_SCK_L();
     001B 0000                      1-  222     	nop
     001C 0000                      1-  223     	nop
     001D 0000                      1-  224     	nop
     001E 1Crr                      1-  225     	BCR	_PORTAbits,0
     001F 0000                      1-  226     	nop
     0020 0000                      1-  227     	nop
     0021 0000                      1-  228     	nop
                                    1-  229     	.line	73, "BSP\bsp_spi.c"; 	NOP();
     0022 0000                      1-  230     	nop
                                    1-  231     	.line	66, "BSP\bsp_spi.c"; 	for(bit_ctr = 0;bit_ctr < 8;bit_ctr ++) // output 8-bit
                                    1-  232     	BANKSEL	r0x1001
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 05rr                      1-  233     	INCR	r0x1001,F
                                    1-  234     ;;unsigned compare: left < lit(0x8=8), size=1
     0025 2108                      1-  235     	MOVIA	0x08
     0026 04rr                      1-  236     	SUBAR	r0x1001,W
     0027 0803                      1-  237     	BTRSS	STATUS,0
                                    1-  238     	MGOTO	_02070_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  239     	.line	76, "BSP\bsp_spi.c"; 	return (byte); // return read byte
                                    1-  240     	BANKSEL	r0x1000
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 01rr                      1-  241     	MOVR	r0x1000,W
                                    1-  242     	.line	77, "BSP\bsp_spi.c"; 	}
                                    1-  243     	RETURN	
     002B 0010                      3-   39 m1      ret
                                    1-  244     ; exit point of _SPI_ReadByte
                                    1-  246     ;***
                                    1-  247     ;  pBlock Stats: dbName = C
                                    1-  248     ;***
                                    1-  249     ;has an exit
                                    1-  250     ;4 compiler assigned registers:
                                    1-  251     ;   r0x1004
                                    1-  252     ;   r0x1005
                                    1-  253     ;   r0x1006
                                    1-  254     ;   r0x1007
                                    1-  255     ;; Starting pCode block
                                    1-  256     .segment "code"; module=bsp_spi, function=_SPI_SendByte
                                    1-  258     ;local variable name mapping:
     0000                           1-  262     _SPI_SendByte:
                                    1-  263     ; 2 exit points
                                    1-  264     	.line	29, "BSP\bsp_spi.c"; 	void SPI_SendByte(unsigned char TxData)
                                    1-  265     	BANKSEL	r0x1004
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  266     	MOVAR	r0x1004
                                    1-  267     	.line	33, "BSP\bsp_spi.c"; 	IOSTB = C_PB5_Output;
     0002 0200                      1-  268     	CLRA	
     0003 000r                      1-  269     	IOST	_IOSTB
                                    1-  270     	.line	35, "BSP\bsp_spi.c"; 	for(i = 0; i < 8; i ++)
                                    1-  271     	BANKSEL	r0x1005
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 02rr                      1-  272     	CLRR	r0x1005
                                    1-  273     	BANKSEL	r0x1006
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 02rr                      1-  274     	CLRR	r0x1006
     0008                           1-  275     _02035_DS_:
                                    1-  276     	.line	37, "BSP\bsp_spi.c"; 	data_output_bit = TxData & 0x80 ? 1 : 0;
                                    1-  277     	BANKSEL	r0x1004
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 0Brr                      1-  278     	BTRSS	r0x1004,7
                                    1-  279     	MGOTO	_02039_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
     000B 2101                      1-  280     	MOVIA	0x01
                                    1-  281     	BANKSEL	r0x1007
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1-  282     	MOVAR	r0x1007
                                    1-  283     	MGOTO	_02040_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
     000F                           1-  284     _02039_DS_:
                                    1-  285     	BANKSEL	r0x1007
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 02rr                      1-  286     	CLRR	r0x1007
     0011                           1-  287     _02040_DS_:
                                    1-  288     	.line	38, "BSP\bsp_spi.c"; 	RF_SCK_L();
     0011 0000                      1-  289     	nop
     0012 0000                      1-  290     	nop
     0013 0000                      1-  291     	nop
     0014 1Crr                      1-  292     	BCR	_PORTAbits,0
     0015 0000                      1-  293     	nop
     0016 0000                      1-  294     	nop
     0017 0000                      1-  295     	nop
                                    1-  296     	.line	39, "BSP\bsp_spi.c"; 	if(data_output_bit)
                                    1-  297     	BANKSEL	r0x1007
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 01rr                      1-  298     	MOVR	r0x1007,W
     001A 0D03                      1-  299     	BTRSC	STATUS,2
                                    1-  300     	MGOTO	_02019_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  301     	.line	41, "BSP\bsp_spi.c"; 	RF_SDIO_H();
     001C 0000                      1-  302     	nop
     001D 0000                      1-  303     	nop
     001E 0000                      1-  304     	nop
     001F 1Arr                      1-  305     	BSR	_PORTBbits,5
     0020 0000                      1-  306     	nop
     0021 0000                      1-  307     	nop
     0022 0000                      1-  308     	nop
                                    1-  309     	MGOTO	_02025_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
     0024                           1-  310     _02019_DS_:
                                    1-  311     	.line	45, "BSP\bsp_spi.c"; 	RF_SDIO_L();
     0024 0000                      1-  312     	nop
     0025 0000                      1-  313     	nop
     0026 0000                      1-  314     	nop
     0027 1Err                      1-  315     	BCR	_PORTBbits,5
     0028 0000                      1-  316     	nop
     0029 0000                      1-  317     	nop
     002A 0000                      1-  318     	nop
     002B                           1-  319     _02025_DS_:
                                    1-  320     	.line	47, "BSP\bsp_spi.c"; 	RF_SCK_H();
     002B 0000                      1-  321     	nop
     002C 0000                      1-  322     	nop
     002D 0000                      1-  323     	nop
     002E 18rr                      1-  324     	BSR	_PORTAbits,0
     002F 0000                      1-  325     	nop
     0030 0000                      1-  326     	nop
     0031 0000                      1-  327     	nop
                                    1-  328     	.line	48, "BSP\bsp_spi.c"; 	NOP_DELAY();
     0032 0000                      1-  329     	nop
     0033 0000                      1-  330     	nop
     0034 0000                      1-  331     	nop
                                    1-  332     	.line	49, "BSP\bsp_spi.c"; 	TxData = TxData << 1;
     0035 1C03                      1-  333     	BCR	STATUS,0
                                    1-  334     	BANKSEL	r0x1004
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 14rr                      1-  335     	RLR	r0x1004,F
                                    1-  336     	.line	35, "BSP\bsp_spi.c"; 	for(i = 0; i < 8; i ++)
                                    1-  337     	BANKSEL	r0x1005
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 05rr                      1-  338     	INCR	r0x1005,F
     003A 0903                      1-  339     	BTRSS	STATUS,2
                                    1-  340     	MGOTO	_00001_DS_
     003B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  341     	BANKSEL	r0x1006
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 05rr                      1-  342     	INCR	r0x1006,F
                                    1-  343     ;;signed compare: left < lit(0x8=8), size=2, mask=ffff
     003E                           1-  344     _00001_DS_:
                                    1-  345     	BANKSEL	r0x1006
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 01rr                      1-  346     	MOVR	r0x1006,W
     0040 2580                      1-  347     	ADDIA	0x80
     0041 2580                      1-  348     	ADDIA	0x80
     0042 0903                      1-  349     	BTRSS	STATUS,2
                                    1-  350     	MGOTO	_02058_DS_
     0043 3rrr                      3-   62 m1      LGOTO rom_address
     0044 2108                      1-  351     	MOVIA	0x08
                                    1-  352     	BANKSEL	r0x1005
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 04rr                      1-  353     	SUBAR	r0x1005,W
     0047                           1-  354     _02058_DS_:
     0047 0803                      1-  355     	BTRSS	STATUS,0
                                    1-  356     	MGOTO	_02035_DS_
     0048 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  357     	.line	52, "BSP\bsp_spi.c"; 	RF_SDIO_L();
     0049 0000                      1-  358     	nop
     004A 0000                      1-  359     	nop
     004B 0000                      1-  360     	nop
     004C 1Err                      1-  361     	BCR	_PORTBbits,5
     004D 0000                      1-  362     	nop
     004E 0000                      1-  363     	nop
     004F 0000                      1-  364     	nop
                                    1-  365     	.line	53, "BSP\bsp_spi.c"; 	RF_SCK_L();
     0050 0000                      1-  366     	nop
     0051 0000                      1-  367     	nop
     0052 0000                      1-  368     	nop
     0053 1Crr                      1-  369     	BCR	_PORTAbits,0
     0054 0000                      1-  370     	nop
     0055 0000                      1-  371     	nop
     0056 0000                      1-  372     	nop
                                    1-  373     	.line	55, "BSP\bsp_spi.c"; 	NOP_DELAY();NOP_DELAY();NOP_DELAY();
     0057 0000                      1-  374     	nop
     0058 0000                      1-  375     	nop
     0059 0000                      1-  376     	nop
     005A 0000                      1-  377     	nop
     005B 0000                      1-  378     	nop
     005C 0000                      1-  379     	nop
     005D 0000                      1-  380     	nop
     005E 0000                      1-  381     	nop
     005F 0000                      1-  382     	nop
                                    1-  383     	.line	56, "BSP\bsp_spi.c"; 	}
                                    1-  384     	RETURN	
     0060 0010                      3-   39 m1      ret
                                    1-  385     ; exit point of _SPI_SendByte
                                    1-  387     ;***
                                    1-  388     ;  pBlock Stats: dbName = C
                                    1-  389     ;***
                                    1-  390     ;has an exit
                                    1-  391     ;functions called:
                                    1-  392     ;   _SPI_SendByte
                                    1-  393     ;   _SPI_ReadByte
                                    1-  394     ;   _SPI_SendByte
                                    1-  395     ;   _SPI_ReadByte
                                    1-  396     ;1 compiler assigned register :
                                    1-  397     ;   r0x1008
                                    1-  398     ;; Starting pCode block
                                    1-  399     .segment "code"; module=bsp_spi, function=_RF_spi_wrd
                                    1-  401     ;local variable name mapping:
     0000                           1-  404     _RF_spi_wrd:
                                    1-  405     ; 2 exit points
                                    1-  406     	.line	19, "BSP\bsp_spi.c"; 	unsigned char RF_spi_wrd(unsigned char Data)
                                    1-  407     	BANKSEL	r0x1008
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  408     	MOVAR	r0x1008
                                    1-  409     	.line	24, "BSP\bsp_spi.c"; 	SPI_SendByte(dts);
     0002 01rr                      1-  410     	MOVR	r0x1008,W
                                    1-  411     	MCALL	_SPI_SendByte
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  412     	.line	25, "BSP\bsp_spi.c"; 	dt = SPI_ReadByte();
                                    1-  413     	MCALL	_SPI_ReadByte
     0004 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  414     	BANKSEL	r0x1008
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 00rr                      1-  415     	MOVAR	r0x1008
                                    1-  416     	.line	26, "BSP\bsp_spi.c"; 	return dt;
     0007 01rr                      1-  417     	MOVR	r0x1008,W
                                    1-  418     	.line	27, "BSP\bsp_spi.c"; 	}
                                    1-  419     	RETURN	
     0008 0010                      3-   39 m1      ret
                                    1-  420     ; exit point of _RF_spi_wrd
                                    1-  422     ;***
                                    1-  423     ;  pBlock Stats: dbName = C
                                    1-  424     ;***
                                    1-  425     ;has an exit
                                    1-  426     ;; Starting pCode block
                                    1-  427     .segment "code"; module=bsp_spi, function=_RF_softSPI_Init
     0000                           1-  429     _RF_softSPI_Init:
                                    1-  430     ; 2 exit points
                                    1-  431     	.line	11, "BSP\bsp_spi.c"; 	IOSTA = C_PA0_Output; // SCK
     0000 0200                      1-  432     	CLRA	
     0001 000r                      1-  433     	IOST	_IOSTA
                                    1-  434     	.line	12, "BSP\bsp_spi.c"; 	IOSTA = C_PA1_Output; // CSN
     0002 0200                      1-  435     	CLRA	
     0003 000r                      1-  436     	IOST	_IOSTA
                                    1-  437     	.line	13, "BSP\bsp_spi.c"; 	IOSTB = C_PB5_Output; // SDA
     0004 0200                      1-  438     	CLRA	
     0005 000r                      1-  439     	IOST	_IOSTB
                                    1-  440     	.line	16, "BSP\bsp_spi.c"; 	RF_CSN_L();
     0006 0000                      1-  441     	nop
     0007 0000                      1-  442     	nop
     0008 0000                      1-  443     	nop
     0009 1Crr                      1-  444     	BCR	_PORTAbits,1
     000A 0000                      1-  445     	nop
     000B 0000                      1-  446     	nop
     000C 0000                      1-  447     	nop
                                    1-  448     	.line	17, "BSP\bsp_spi.c"; 	}
                                    1-  449     	RETURN	
     000D 0010                      3-   39 m1      ret
                                    1-  450     ; exit point of _RF_softSPI_Init
                                    1-  453     ;	code size estimation:
                                    1-  454     ;	   74+   23 =    97 instructions (  240 byte)
                                    1-  456     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\bsp_spi.s
002 ny8a054e.inc
003 common.inc
004 BSP\bsp_spi.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
SRAM / SFR   = 0x00000000 - 0x00000000
