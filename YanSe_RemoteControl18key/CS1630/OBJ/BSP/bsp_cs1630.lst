
                    Nyquest Technology Co., Ltd.

NYASM 2.50

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\bsp_cs1630.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_get_rolling_code_3
                                    1-   15     	extern	_get_rolling_code_2
                                    1-   16     	extern	_get_rolling_code_1
                                    1-   17     	extern	_get_rolling_code_0
                                    1-   18     	extern	_usart_send_string
                                    1-   19     	extern	_usart_send_byte
                                    1-   20     	extern	_usart_init
                                    1-   21     	extern	_delay_40us
                                    1-   22     	extern	_delay_us
                                    1-   23     	extern	_delay_250ms
                                    1-   24     	extern	_delay_ms
                                    1-   25     	extern	_CS1630_Dump_RF_Register
                                    1-   26     	extern	_SPI_ReadByte
                                    1-   27     	extern	_SPI_SendByte
                                    1-   28     	extern	_RF_softSPI_Init
                                    1-   29     	extern	_RF_Init
                                    1-   30     	extern	_RF_wr_cmd
                                    1-   31     	extern	_RF_write_byte
                                    1-   32     	extern	_RF_wr_buffer
                                    1-   33     	extern	_RF_Write_Ack_Payload
                                    1-   34     	extern	_RF_spi_wrd
                                    1-   35     	extern	_RF_Soft_Rst
                                    1-   36     	extern	_RF_SendPack
                                    1-   37     	extern	_RF_ReceivePack
                                    1-   38     	extern	_RF_Read_Status
                                    1-   39     	extern	_RF_read_byte
                                    1-   40     	extern	_RF_read_buffer
                                    1-   41     	extern	_RF_Operation
                                    1-   42     	extern	_RF_ModeSwitch
                                    1-   43     	extern	_RF_Get_RSSI
                                    1-   44     	extern	_RF_Get_Chip_ID
                                    1-   45     	extern	_RF_Flush_Tx
                                    1-   46     	extern	_RF_Flush_Rx
                                    1-   47     	extern	_RF_Configure_Reg
                                    1-   48     	extern	_RF_Clear_All_Irq
                                    1-   49     	extern	_RF_Change_Pwr
                                    1-   50     	extern	_RF_Change_CH
                                    1-   51     	extern	_RF_ChangeAddr_Reg
                                    1-   52     	extern	_RF_CE_Low
                                    1-   53     	extern	_RF_CE_High_Pulse
                                    1-   54     	extern	_RF_CE_High
                                    1-   55     	extern	_RF_Bank_Switch
                                    1-   56     	extern	_clear_ram
                                    1-   57     	extern	_multi_16b
                                    1-   58     	extern	_multi_8b
                                    1-   59     	extern	_T0MD
                                    1-   60     	extern	_PCON1
                                    1-   61     	extern	_CMPCR
                                    1-   62     	extern	_BODCON
                                    1-   63     	extern	_PS0CV
                                    1-   64     	extern	_APHCON
                                    1-   65     	extern	_IOSTB
                                    1-   66     	extern	_IOSTA
                                    1-   67     	extern	_PWM5RH
                                    1-   68     	extern	_PWM5DUTY
                                    1-   69     	extern	_P5CR1
                                    1-   70     	extern	_PWM4DUTY
                                    1-   71     	extern	_P4CR1
                                    1-   72     	extern	_PS3CV
                                    1-   73     	extern	_PWM3DUTY
                                    1-   74     	extern	_T3CR2
                                    1-   75     	extern	_T3CR1
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_OSCCR
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_P2CR1
                                    1-   80     	extern	_TBHD
                                    1-   81     	extern	_TBHP
                                    1-   82     	extern	_IRCR
                                    1-   83     	extern	_BZ1CR
                                    1-   84     	extern	_PS1CV
                                    1-   85     	extern	_PWM1DUTY
                                    1-   86     	extern	_T1CR2
                                    1-   87     	extern	_T1CR1
                                    1-   88     	extern	_TMR1
                                    1-   89     	extern	_TM34RH
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_PCHBUF
                                    1-   92     	extern	_STATUS
                                    1-   93     	extern	_PCL
                                    1-   94     	extern	_TMR0
                                    1-   95     	extern	_INTE2bits
                                    1-   96     	extern	_RFCbits
                                    1-   97     	extern	_INTEDGbits
                                    1-   98     	extern	_AWUCONbits
                                    1-   99     	extern	_INTFbits
                                    1-  100     	extern	_INTEbits
                                    1-  101     	extern	_BPHCONbits
                                    1-  102     	extern	_ABPLCONbits
                                    1-  103     	extern	_BWUCONbits
                                    1-  104     	extern	_PCONbits
                                    1-  105     	extern	_PORTBbits
                                    1-  106     	extern	_PORTAbits
                                    1-  107     	extern	__gptrput1
                                    1-  108     	extern	__gptrget1
                                    1-  110     	extern PSAVE
                                    1-  111     	extern SSAVE
                                    1-  112     	extern WSAVE
                                    1-  113     	extern STK12
                                    1-  114     	extern ___STK12
                                    1-  115     	extern STK11
                                    1-  116     	extern ___STK11
                                    1-  117     	extern STK10
                                    1-  118     	extern ___STK10
                                    1-  119     	extern STK09
                                    1-  120     	extern ___STK09
                                    1-  121     	extern STK08
                                    1-  122     	extern ___STK08
                                    1-  123     	extern STK07
                                    1-  124     	extern ___STK07
                                    1-  125     	extern STK06
                                    1-  126     	extern ___STK06
                                    1-  127     	extern STK05
                                    1-  128     	extern ___STK05
                                    1-  129     	extern STK04
                                    1-  130     	extern ___STK04
                                    1-  131     	extern STK03
                                    1-  132     	extern ___STK03
                                    1-  133     	extern STK02
                                    1-  134     	extern ___STK02
                                    1-  135     	extern STK01
                                    1-  136     	extern ___STK01
                                    1-  137     	extern STK00
                                    1-  138     	extern ___STK00
                                    1-  139     ;--------------------------------------------------------
                                    1-  140     ; global declarations
                                    1-  141     ;--------------------------------------------------------
                                    1-  142     	extern	_CS1630_wr_cmd
                                    1-  143     	extern	_INTE2
                                    1-  144     	extern	_RFC
                                    1-  145     	extern	_INTEDG
                                    1-  146     	extern	_AWUCON
                                    1-  147     	extern	_INTF
                                    1-  148     	extern	_INTE
                                    1-  149     	extern	_BPHCON
                                    1-  150     	extern	_ABPLCON
                                    1-  151     	extern	_BWUCON
                                    1-  152     	extern	_PCON
                                    1-  153     	extern	_PORTB
                                    1-  154     	extern	_PORTA
                                    1-  155     	extern	_CS1630_Soft_Rst
                                    1-  156     	extern	_CS1630_Init
                                    1-  157     	extern	_CS1630_read_buffer
                                    1-  158     	extern	_CS1630_read_byte
                                    1-  159     	extern	_CS1630_write_byte
                                    1-  160     	extern	_CS1630_wr_buffer
                                    1-  161     	extern	_CS1630_Bank_Switch
                                    1-  162     	extern	_CS1630_SendPack
                                    1-  163     	extern	_CS1630_ModeSwitch
                                    1-  164     	extern	_CS1630_Clear_All_Irq
                                    1-  165     	extern	_CS1630_Flush_Tx
                                    1-  166     	extern	_CS1630_CE_High
                                    1-  167     	extern	_CS1630_CE_Low
                                    1-  168     	extern	_Enter_sleep
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; global definitions
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ; absolute symbol definitions
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     ;--------------------------------------------------------
                                    1-  177     ; compiler-defined variables
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1027:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1028:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1029:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x102A:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x102B:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102C:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x102D:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1022:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1025:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1024:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1023:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1026:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1009:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x100C:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x100D:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1013:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1016:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1015:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1014:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1017:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x101E:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x101F:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1020:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1021:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1018:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x101B:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x101A:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1019:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x101C:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x101D:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1010:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1011:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1012:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x100F:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x100E:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x100A:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x100B:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     _CS1630_Soft_Rst_soft_temp_65536_61:
                                    1-  292     	.res	4
                                    1-  294     .segment "uninit"
     0000                           1-  295     _CS1630_Init_temp_65536_63:
                                    1-  296     	.res	5
                                    1-  298     ;--------------------------------------------------------
                                    1-  299     ; initialized data
                                    1-  300     ;--------------------------------------------------------
                                    1-  301     ;--------------------------------------------------------
                                    1-  302     ; initialized absolute data
                                    1-  303     ;--------------------------------------------------------
                                    1-  304     ;--------------------------------------------------------
                                    1-  305     ; overlayable items in internal ram 
                                    1-  306     ;--------------------------------------------------------
                                    1-  307     ;	udata_ovr
                                    1-  308     ;--------------------------------------------------------
                                    1-  309     ; code
                                    1-  310     ;--------------------------------------------------------
                                    1-  311     ; code_bsp_cs1630	code
                                    1-  312     ;***
                                    1-  313     ;  pBlock Stats: dbName = C
                                    1-  314     ;***
                                    1-  315     ;has an exit
                                    1-  316     ;functions called:
                                    1-  317     ;   _CS1630_read_byte
                                    1-  318     ;   _SPI_SendByte
                                    1-  319     ;   _SPI_SendByte
                                    1-  320     ;   _delay_us
                                    1-  321     ;   _delay_us
                                    1-  322     ;   _delay_us
                                    1-  323     ;   _delay_us
                                    1-  324     ;   _CS1630_read_byte
                                    1-  325     ;   _SPI_SendByte
                                    1-  326     ;   _SPI_SendByte
                                    1-  327     ;   _delay_us
                                    1-  328     ;   _delay_us
                                    1-  329     ;   _delay_us
                                    1-  330     ;   _delay_us
                                    1-  331     ;2 compiler assigned registers:
                                    1-  332     ;   r0x100A
                                    1-  333     ;   r0x100B
                                    1-  334     ;; Starting pCode block
                                    1-  335     .segment "code"; module=bsp_cs1630, function=_Enter_sleep
                                    1-  337     ;local variable name mapping:
     0000                           1-  339     _Enter_sleep:
                                    1-  340     ; 2 exit points
                                    1-  341     	.line	236, "BSP\bsp_cs1630.c"; 	ret = CS1630_read_byte(CS1630_BANK0_CONFIG);
     0000 2100                      1-  342     	MOVIA	0x00
                                    1-  343     	MCALL	_CS1630_read_byte
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  344     	BANKSEL	r0x100A
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1-  345     	MOVAR	r0x100A
                                    1-  346     	.line	237, "BSP\bsp_cs1630.c"; 	ret &= ~0x02;
     0004 1Crr                      1-  347     	BCR	r0x100A,1
                                    1-  348     	.line	238, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0005 1Crr                      1-  349     	BCR	_PORTAbits,1
                                    1-  350     	.line	239, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_W_REGISTER | CS1630_BANK0_CONFIG);
     0006 2120                      1-  351     	MOVIA	0x20
                                    1-  352     	MCALL	_SPI_SendByte
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  353     	.line	240, "BSP\bsp_cs1630.c"; 	SPI_SendByte(ret);
                                    1-  354     	BANKSEL	r0x100A
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 01rr                      1-  355     	MOVR	r0x100A,W
                                    1-  356     	MCALL	_SPI_SendByte
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  357     	.line	242, "BSP\bsp_cs1630.c"; 	IOSTB = C_PB5_Input;
     000B 2120                      1-  358     	MOVIA	0x20
     000C 000r                      1-  359     	IOST	_IOSTB
                                    1-  360     	.line	244, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     000D 18rr                      1-  361     	BSR	_PORTAbits,1
     000E 2101                      1-  362     	MOVIA	0x01
                                    1-  363     	MCALL	_delay_us
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  364     	.line	246, "BSP\bsp_cs1630.c"; 	delay_us(10);
     0010 210A                      1-  365     	MOVIA	0x0a
                                    1-  366     	MCALL	_delay_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
     0012                           1-  367     _02089_DS_:
                                    1-  368     	.line	248, "BSP\bsp_cs1630.c"; 	while(1 == RF_Reag_SDIO());
                                    1-  369     	BANKSEL	r0x100A
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 02rr                      1-  370     	CLRR	r0x100A
     0014 0Err                      1-  371     	BTRSC	_PORTBbits,5
     0015 05rr                      1-  372     	INCR	r0x100A,F
     0016 01rr                      1-  373     	MOVR	r0x100A,W
                                    1-  374     	BANKSEL	r0x100B
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1-  375     	MOVAR	r0x100B
     0019 01rr                      1-  376     	MOVR	r0x100B,W
     001A 2401                      1-  377     	XORIA	0x01
     001B 0903                      1-  378     	BTRSS	STATUS,2
                                    1-  379     	MGOTO	_02107_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  380     	MGOTO	_02089_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
     001E                           1-  381     _02107_DS_:
                                    1-  382     	.line	250, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     001E 1Crr                      1-  383     	BCR	_PORTAbits,1
                                    1-  384     	.line	251, "BSP\bsp_cs1630.c"; 	delay_us(10);
     001F 210A                      1-  385     	MOVIA	0x0a
                                    1-  386     	MCALL	_delay_us
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  387     	.line	252, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0021 18rr                      1-  388     	BSR	_PORTAbits,1
     0022 2101                      1-  389     	MOVIA	0x01
                                    1-  390     	MCALL	_delay_us
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  391     	.line	253, "BSP\bsp_cs1630.c"; 	IOSTB = C_PB5_Output;
     0024 0200                      1-  392     	CLRA	
     0025 000r                      1-  393     	IOST	_IOSTB
                                    1-  394     	.line	255, "BSP\bsp_cs1630.c"; 	}
                                    1-  395     	RETURN	
     0026 0010                      3-   39 m1      ret
                                    1-  396     ; exit point of _Enter_sleep
                                    1-  398     ;***
                                    1-  399     ;  pBlock Stats: dbName = C
                                    1-  400     ;***
                                    1-  401     ;has an exit
                                    1-  402     ;functions called:
                                    1-  403     ;   _CS1630_read_byte
                                    1-  404     ;   _CS1630_write_byte
                                    1-  405     ;   _CS1630_read_byte
                                    1-  406     ;   _CS1630_write_byte
                                    1-  407     ;2 compiler assigned registers:
                                    1-  408     ;   r0x100E
                                    1-  409     ;   STK00
                                    1-  410     ;; Starting pCode block
                                    1-  411     .segment "code"; module=bsp_cs1630, function=_CS1630_CE_Low
                                    1-  413     ;local variable name mapping:
     0000                           1-  415     _CS1630_CE_Low:
                                    1-  416     ; 2 exit points
                                    1-  417     	.line	225, "BSP\bsp_cs1630.c"; 	reg_val = CS1630_read_byte(CS1630_BANK0_SETUP_VALUE);
     0000 211E                      1-  418     	MOVIA	0x1e
                                    1-  419     	MCALL	_CS1630_read_byte
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  420     	BANKSEL	r0x100E
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1-  421     	MOVAR	r0x100E
                                    1-  422     	.line	226, "BSP\bsp_cs1630.c"; 	reg_val &= ~BIT3;
     0004 1Drr                      1-  423     	BCR	r0x100E,3
                                    1-  424     	.line	227, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, reg_val);
     0005 01rr                      1-  425     	MOVR	r0x100E,W
     0006 00rr                      1-  426     	MOVAR	STK00
     0007 211E                      1-  427     	MOVIA	0x1e
                                    1-  428     	MCALL	_CS1630_write_byte
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  429     	.line	228, "BSP\bsp_cs1630.c"; 	}
                                    1-  430     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1-  431     ; exit point of _CS1630_CE_Low
                                    1-  433     ;***
                                    1-  434     ;  pBlock Stats: dbName = C
                                    1-  435     ;***
                                    1-  436     ;has an exit
                                    1-  437     ;functions called:
                                    1-  438     ;   _CS1630_read_byte
                                    1-  439     ;   _CS1630_write_byte
                                    1-  440     ;   _CS1630_read_byte
                                    1-  441     ;   _CS1630_write_byte
                                    1-  442     ;2 compiler assigned registers:
                                    1-  443     ;   r0x100F
                                    1-  444     ;   STK00
                                    1-  445     ;; Starting pCode block
                                    1-  446     .segment "code"; module=bsp_cs1630, function=_CS1630_CE_High
                                    1-  448     ;local variable name mapping:
     0000                           1-  450     _CS1630_CE_High:
                                    1-  451     ; 2 exit points
                                    1-  452     	.line	216, "BSP\bsp_cs1630.c"; 	reg_val = CS1630_read_byte(CS1630_BANK0_SETUP_VALUE);
     0000 211E                      1-  453     	MOVIA	0x1e
                                    1-  454     	MCALL	_CS1630_read_byte
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  455     	BANKSEL	r0x100F
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1-  456     	MOVAR	r0x100F
                                    1-  457     	.line	217, "BSP\bsp_cs1630.c"; 	reg_val |= BIT3;
     0004 19rr                      1-  458     	BSR	r0x100F,3
                                    1-  459     	.line	218, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, reg_val);
     0005 01rr                      1-  460     	MOVR	r0x100F,W
     0006 00rr                      1-  461     	MOVAR	STK00
     0007 211E                      1-  462     	MOVIA	0x1e
                                    1-  463     	MCALL	_CS1630_write_byte
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  464     	.line	219, "BSP\bsp_cs1630.c"; 	}
                                    1-  465     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1-  466     ; exit point of _CS1630_CE_High
                                    1-  468     ;***
                                    1-  469     ;  pBlock Stats: dbName = C
                                    1-  470     ;***
                                    1-  471     ;has an exit
                                    1-  472     ;functions called:
                                    1-  473     ;   _SPI_SendByte
                                    1-  474     ;   _delay_us
                                    1-  475     ;   _SPI_SendByte
                                    1-  476     ;   _delay_us
                                    1-  477     ;; Starting pCode block
                                    1-  478     .segment "code"; module=bsp_cs1630, function=_CS1630_Flush_Tx
     0000                           1-  480     _CS1630_Flush_Tx:
                                    1-  481     ; 2 exit points
                                    1-  482     	.line	207, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0000 1Crr                      1-  483     	BCR	_PORTAbits,1
                                    1-  484     	.line	208, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_FLUSH_TX);
     0001 21E1                      1-  485     	MOVIA	0xe1
                                    1-  486     	MCALL	_SPI_SendByte
     0002 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  487     	.line	209, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0003 18rr                      1-  488     	BSR	_PORTAbits,1
     0004 2101                      1-  489     	MOVIA	0x01
                                    1-  490     	MCALL	_delay_us
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  491     	.line	210, "BSP\bsp_cs1630.c"; 	}
                                    1-  492     	RETURN	
     0006 0010                      3-   39 m1      ret
                                    1-  493     ; exit point of _CS1630_Flush_Tx
                                    1-  495     ;***
                                    1-  496     ;  pBlock Stats: dbName = C
                                    1-  497     ;***
                                    1-  498     ;has an exit
                                    1-  499     ;functions called:
                                    1-  500     ;   _CS1630_write_byte
                                    1-  501     ;   _CS1630_write_byte
                                    1-  502     ;1 compiler assigned register :
                                    1-  503     ;   STK00
                                    1-  504     ;; Starting pCode block
                                    1-  505     .segment "code"; module=bsp_cs1630, function=_CS1630_Clear_All_Irq
     0000                           1-  507     _CS1630_Clear_All_Irq:
                                    1-  508     ; 2 exit points
                                    1-  509     	.line	201, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, 0x70);
     0000 2170                      1-  510     	MOVIA	0x70
     0001 00rr                      1-  511     	MOVAR	STK00
     0002 2107                      1-  512     	MOVIA	0x07
                                    1-  513     	MCALL	_CS1630_write_byte
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  514     	.line	202, "BSP\bsp_cs1630.c"; 	}
                                    1-  515     	RETURN	
     0004 0010                      3-   39 m1      ret
                                    1-  516     ; exit point of _CS1630_Clear_All_Irq
                                    1-  518     ;***
                                    1-  519     ;  pBlock Stats: dbName = C
                                    1-  520     ;***
                                    1-  521     ;has an exit
                                    1-  522     ;functions called:
                                    1-  523     ;   _CS1630_read_byte
                                    1-  524     ;   _CS1630_write_byte
                                    1-  525     ;   _CS1630_read_byte
                                    1-  526     ;   _CS1630_write_byte
                                    1-  527     ;   _CS1630_read_byte
                                    1-  528     ;   _CS1630_write_byte
                                    1-  529     ;   _CS1630_read_byte
                                    1-  530     ;   _CS1630_write_byte
                                    1-  531     ;4 compiler assigned registers:
                                    1-  532     ;   r0x1010
                                    1-  533     ;   r0x1011
                                    1-  534     ;   r0x1012
                                    1-  535     ;   STK00
                                    1-  536     ;; Starting pCode block
                                    1-  537     .segment "code"; module=bsp_cs1630, function=_CS1630_ModeSwitch
                                    1-  539     ;local variable name mapping:
     0000                           1-  542     _CS1630_ModeSwitch:
                                    1-  543     ; 2 exit points
                                    1-  544     	.line	176, "BSP\bsp_cs1630.c"; 	void CS1630_ModeSwitch(RF_ModeTypeDef mod)
                                    1-  545     	BANKSEL	r0x1010
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  546     	MOVAR	r0x1010
                                    1-  547     	.line	180, "BSP\bsp_cs1630.c"; 	tmp = CS1630_read_byte(CS1630_BANK0_CONFIG);
     0002 2100                      1-  548     	MOVIA	0x00
                                    1-  549     	MCALL	_CS1630_read_byte
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  550     	BANKSEL	r0x1011
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1-  551     	MOVAR	r0x1011
                                    1-  552     	.line	181, "BSP\bsp_cs1630.c"; 	if(mod != Rf_PRX_Mode)
                                    1-  553     	BANKSEL	r0x1010
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1-  554     	MOVR	r0x1010,W
     0008 0D03                      1-  555     	BTRSC	STATUS,2
                                    1-  556     	MGOTO	_02061_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  557     	.line	183, "BSP\bsp_cs1630.c"; 	tmp &= 0xFE;
     000A 21FE                      1-  558     	MOVIA	0xfe
                                    1-  559     	BANKSEL	r0x1011
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 10rr                      1-  560     	ANDAR	r0x1011,W
                                    1-  561     	BANKSEL	r0x1012
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1-  562     	MOVAR	r0x1012
                                    1-  563     	MGOTO	_02062_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1-  564     _02061_DS_:
                                    1-  565     	.line	187, "BSP\bsp_cs1630.c"; 	tmp |= 0x01;
     0010 2101                      1-  566     	MOVIA	0x01
                                    1-  567     	BANKSEL	r0x1011
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 11rr                      1-  568     	IORAR	r0x1011,W
                                    1-  569     	BANKSEL	r0x1012
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 00rr                      1-  570     	MOVAR	r0x1012
     0015                           1-  571     _02062_DS_:
                                    1-  572     	.line	189, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, tmp);
                                    1-  573     	BANKSEL	r0x1012
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1-  574     	MOVR	r0x1012,W
     0017 00rr                      1-  575     	MOVAR	STK00
     0018 2100                      1-  576     	MOVIA	0x00
                                    1-  577     	MCALL	_CS1630_write_byte
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  578     	.line	191, "BSP\bsp_cs1630.c"; 	if(mod == Rf_Carrier_Mode)
                                    1-  579     	BANKSEL	r0x1010
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1-  580     	MOVR	r0x1010,W
     001C 2402                      1-  581     	XORIA	0x02
     001D 0903                      1-  582     	BTRSS	STATUS,2
                                    1-  583     	MGOTO	_02065_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  584     	.line	193, "BSP\bsp_cs1630.c"; 	tmp = 0x80 | CS1630_read_byte(CS1630_BANK0_RF_SETUP);
     001F 2106                      1-  585     	MOVIA	0x06
                                    1-  586     	MCALL	_CS1630_read_byte
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  587     	BANKSEL	r0x1010
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1-  588     	MOVAR	r0x1010
     0023 1Brr                      1-  589     	BSR	r0x1010,7
                                    1-  590     	.line	194, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_RF_SETUP, tmp);
     0024 01rr                      1-  591     	MOVR	r0x1010,W
     0025 00rr                      1-  592     	MOVAR	STK00
     0026 2106                      1-  593     	MOVIA	0x06
                                    1-  594     	MCALL	_CS1630_write_byte
     0027 2rrr                      3-   65 m1      LCALL rom_address
     0028                           1-  595     _02065_DS_:
                                    1-  596     	.line	196, "BSP\bsp_cs1630.c"; 	}
                                    1-  597     	RETURN	
     0028 0010                      3-   39 m1      ret
                                    1-  598     ; exit point of _CS1630_ModeSwitch
                                    1-  600     ;***
                                    1-  601     ;  pBlock Stats: dbName = C
                                    1-  602     ;***
                                    1-  603     ;has an exit
                                    1-  604     ;functions called:
                                    1-  605     ;   _CS1630_read_byte
                                    1-  606     ;   _CS1630_wr_buffer
                                    1-  607     ;   _CS1630_read_byte
                                    1-  608     ;   _CS1630_wr_buffer
                                    1-  609     ;10 compiler assigned registers:
                                    1-  610     ;   r0x1018
                                    1-  611     ;   STK00
                                    1-  612     ;   r0x1019
                                    1-  613     ;   STK01
                                    1-  614     ;   r0x101A
                                    1-  615     ;   STK02
                                    1-  616     ;   r0x101B
                                    1-  617     ;   STK03
                                    1-  618     ;   r0x101C
                                    1-  619     ;   r0x101D
                                    1-  620     ;; Starting pCode block
                                    1-  621     .segment "code"; module=bsp_cs1630, function=_CS1630_SendPack
                                    1-  623     ;local variable name mapping:
     0000                           1-  628     _CS1630_SendPack:
                                    1-  629     ; 2 exit points
                                    1-  630     	.line	165, "BSP\bsp_cs1630.c"; 	void CS1630_SendPack(unsigned char cmd, unsigned char* buf, unsigned char len)
                                    1-  631     	BANKSEL	r0x1018
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  632     	MOVAR	r0x1018
     0002 01rr                      1-  633     	MOVR	STK00,W
                                    1-  634     	BANKSEL	r0x1019
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  635     	MOVAR	r0x1019
     0005 01rr                      1-  636     	MOVR	STK01,W
                                    1-  637     	BANKSEL	r0x101A
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  638     	MOVAR	r0x101A
     0008 01rr                      1-  639     	MOVR	STK02,W
                                    1-  640     	BANKSEL	r0x101B
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1-  641     	MOVAR	r0x101B
     000B 01rr                      1-  642     	MOVR	STK03,W
                                    1-  643     	BANKSEL	r0x101C
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1-  644     	MOVAR	r0x101C
                                    1-  645     	.line	169, "BSP\bsp_cs1630.c"; 	sta = CS1630_read_byte(CS1630_BANK0_STATUS);
     000E 2107                      1-  646     	MOVIA	0x07
                                    1-  647     	MCALL	_CS1630_read_byte
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  648     	BANKSEL	r0x101D
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1-  649     	MOVAR	r0x101D
                                    1-  650     	.line	170, "BSP\bsp_cs1630.c"; 	if(!(sta&RF_STATUS_TX_FULL))
     0012 0Crr                      1-  651     	BTRSC	r0x101D,0
                                    1-  652     	MGOTO	_02055_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  653     	.line	172, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(cmd, buf, len);
                                    1-  654     	BANKSEL	r0x101C
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 01rr                      1-  655     	MOVR	r0x101C,W
     0016 00rr                      1-  656     	MOVAR	STK03
                                    1-  657     	BANKSEL	r0x101B
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 01rr                      1-  658     	MOVR	r0x101B,W
     0019 00rr                      1-  659     	MOVAR	STK02
                                    1-  660     	BANKSEL	r0x101A
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1-  661     	MOVR	r0x101A,W
     001C 00rr                      1-  662     	MOVAR	STK01
                                    1-  663     	BANKSEL	r0x1019
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 01rr                      1-  664     	MOVR	r0x1019,W
     001F 00rr                      1-  665     	MOVAR	STK00
                                    1-  666     	BANKSEL	r0x1018
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1-  667     	MOVR	r0x1018,W
                                    1-  668     	MCALL	_CS1630_wr_buffer
     0022 2rrr                      3-   65 m1      LCALL rom_address
     0023                           1-  669     _02055_DS_:
                                    1-  670     	.line	174, "BSP\bsp_cs1630.c"; 	}
                                    1-  671     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1-  672     ; exit point of _CS1630_SendPack
                                    1-  674     ;***
                                    1-  675     ;  pBlock Stats: dbName = C
                                    1-  676     ;***
                                    1-  677     ;has an exit
                                    1-  678     ;functions called:
                                    1-  679     ;   _CS1630_read_byte
                                    1-  680     ;   _CS1630_wr_cmd
                                    1-  681     ;   _CS1630_wr_cmd
                                    1-  682     ;   _CS1630_read_byte
                                    1-  683     ;   _CS1630_wr_cmd
                                    1-  684     ;   _CS1630_wr_cmd
                                    1-  685     ;3 compiler assigned registers:
                                    1-  686     ;   r0x1020
                                    1-  687     ;   r0x1021
                                    1-  688     ;   STK00
                                    1-  689     ;; Starting pCode block
                                    1-  690     .segment "code"; module=bsp_cs1630, function=_CS1630_Bank_Switch
                                    1-  692     ;local variable name mapping:
     0000                           1-  695     _CS1630_Bank_Switch:
                                    1-  696     ; 2 exit points
                                    1-  697     	.line	142, "BSP\bsp_cs1630.c"; 	void CS1630_Bank_Switch(unsigned char bank)
                                    1-  698     	BANKSEL	r0x1020
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  699     	MOVAR	r0x1020
                                    1-  700     	.line	146, "BSP\bsp_cs1630.c"; 	sta = CS1630_read_byte(CS1630_BANK0_STATUS);
     0002 2107                      1-  701     	MOVIA	0x07
                                    1-  702     	MCALL	_CS1630_read_byte
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  703     	BANKSEL	r0x1021
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1-  704     	MOVAR	r0x1021
                                    1-  705     	.line	148, "BSP\bsp_cs1630.c"; 	if(bank != RF_Bank0) // 切1
                                    1-  706     	BANKSEL	r0x1020
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1-  707     	MOVR	r0x1020,W
     0008 0D03                      1-  708     	BTRSC	STATUS,2
                                    1-  709     	MGOTO	_02046_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  710     	.line	152, "BSP\bsp_cs1630.c"; 	CS1630_wr_cmd(RF_ACTIVATE, RF_ACTIVATE_DATA);
     000A 2153                      1-  711     	MOVIA	0x53
     000B 00rr                      1-  712     	MOVAR	STK00
     000C 2150                      1-  713     	MOVIA	0x50
                                    1-  714     	MCALL	_CS1630_wr_cmd
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  715     	MGOTO	_02048_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
     000F                           1-  716     _02046_DS_:
                                    1-  717     	.line	157, "BSP\bsp_cs1630.c"; 	if(sta & RF_BANK1) // 切0
                                    1-  718     	BANKSEL	r0x1021
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 0Brr                      1-  719     	BTRSS	r0x1021,7
                                    1-  720     	MGOTO	_02048_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  721     	.line	159, "BSP\bsp_cs1630.c"; 	CS1630_wr_cmd(RF_ACTIVATE, RF_ACTIVATE_DATA);
     0012 2153                      1-  722     	MOVIA	0x53
     0013 00rr                      1-  723     	MOVAR	STK00
     0014 2150                      1-  724     	MOVIA	0x50
                                    1-  725     	MCALL	_CS1630_wr_cmd
     0015 2rrr                      3-   65 m1      LCALL rom_address
     0016                           1-  726     _02048_DS_:
                                    1-  727     	.line	162, "BSP\bsp_cs1630.c"; 	}
                                    1-  728     	RETURN	
     0016 0010                      3-   39 m1      ret
                                    1-  729     ; exit point of _CS1630_Bank_Switch
                                    1-  731     ;***
                                    1-  732     ;  pBlock Stats: dbName = C
                                    1-  733     ;***
                                    1-  734     ;has an exit
                                    1-  735     ;functions called:
                                    1-  736     ;   _SPI_SendByte
                                    1-  737     ;   _SPI_SendByte
                                    1-  738     ;   _delay_us
                                    1-  739     ;   _SPI_SendByte
                                    1-  740     ;   _SPI_SendByte
                                    1-  741     ;   _delay_us
                                    1-  742     ;3 compiler assigned registers:
                                    1-  743     ;   r0x101E
                                    1-  744     ;   STK00
                                    1-  745     ;   r0x101F
                                    1-  746     ;; Starting pCode block
                                    1-  747     .segment "code"; module=bsp_cs1630, function=_CS1630_wr_cmd
                                    1-  749     ;local variable name mapping:
     0000                           1-  752     _CS1630_wr_cmd:
                                    1-  753     ; 2 exit points
                                    1-  754     	.line	133, "BSP\bsp_cs1630.c"; 	void CS1630_wr_cmd(unsigned char cmd,unsigned char D)
                                    1-  755     	BANKSEL	r0x101E
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  756     	MOVAR	r0x101E
     0002 01rr                      1-  757     	MOVR	STK00,W
                                    1-  758     	BANKSEL	r0x101F
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  759     	MOVAR	r0x101F
                                    1-  760     	.line	135, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0005 1Crr                      1-  761     	BCR	_PORTAbits,1
                                    1-  762     	.line	136, "BSP\bsp_cs1630.c"; 	SPI_SendByte(cmd);
                                    1-  763     	BANKSEL	r0x101E
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1-  764     	MOVR	r0x101E,W
                                    1-  765     	MCALL	_SPI_SendByte
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  766     	.line	137, "BSP\bsp_cs1630.c"; 	SPI_SendByte(D);
                                    1-  767     	BANKSEL	r0x101F
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 01rr                      1-  768     	MOVR	r0x101F,W
                                    1-  769     	MCALL	_SPI_SendByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  770     	.line	138, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     000C 18rr                      1-  771     	BSR	_PORTAbits,1
     000D 2101                      1-  772     	MOVIA	0x01
                                    1-  773     	MCALL	_delay_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  774     	.line	139, "BSP\bsp_cs1630.c"; 	}
                                    1-  775     	RETURN	
     000F 0010                      3-   39 m1      ret
                                    1-  776     ; exit point of _CS1630_wr_cmd
                                    1-  778     ;***
                                    1-  779     ;  pBlock Stats: dbName = C
                                    1-  780     ;***
                                    1-  781     ;has an exit
                                    1-  782     ;functions called:
                                    1-  783     ;   _SPI_SendByte
                                    1-  784     ;   __gptrget1
                                    1-  785     ;   _SPI_SendByte
                                    1-  786     ;   _delay_us
                                    1-  787     ;   _SPI_SendByte
                                    1-  788     ;   __gptrget1
                                    1-  789     ;   _SPI_SendByte
                                    1-  790     ;   _delay_us
                                    1-  791     ;9 compiler assigned registers:
                                    1-  792     ;   r0x1013
                                    1-  793     ;   STK00
                                    1-  794     ;   r0x1014
                                    1-  795     ;   STK01
                                    1-  796     ;   r0x1015
                                    1-  797     ;   STK02
                                    1-  798     ;   r0x1016
                                    1-  799     ;   STK03
                                    1-  800     ;   r0x1017
                                    1-  801     ;; Starting pCode block
                                    1-  802     .segment "code"; module=bsp_cs1630, function=_CS1630_wr_buffer
                                    1-  804     ;local variable name mapping:
     0000                           1-  806     _CS1630_wr_buffer:
                                    1-  807     ; 2 exit points
                                    1-  808     	.line	119, "BSP\bsp_cs1630.c"; 	void CS1630_wr_buffer(unsigned char addr, unsigned char* buf,unsigned char len)
                                    1-  809     	BANKSEL	r0x1013
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  810     	MOVAR	r0x1013
     0002 01rr                      1-  811     	MOVR	STK00,W
                                    1-  812     	BANKSEL	r0x1014
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  813     	MOVAR	r0x1014
     0005 01rr                      1-  814     	MOVR	STK01,W
                                    1-  815     	BANKSEL	r0x1015
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  816     	MOVAR	r0x1015
     0008 01rr                      1-  817     	MOVR	STK02,W
                                    1-  818     	BANKSEL	r0x1016
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1-  819     	MOVAR	r0x1016
     000B 01rr                      1-  820     	MOVR	STK03,W
                                    1-  821     	BANKSEL	r0x1017
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1-  822     	MOVAR	r0x1017
                                    1-  823     	.line	122, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     000E 1Crr                      1-  824     	BCR	_PORTAbits,1
                                    1-  825     	.line	123, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_W_REGISTER|addr);
                                    1-  826     	BANKSEL	r0x1013
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 1Arr                      1-  827     	BSR	r0x1013,5
     0011 01rr                      1-  828     	MOVR	r0x1013,W
                                    1-  829     	MCALL	_SPI_SendByte
     0012 2rrr                      3-   65 m1      LCALL rom_address
     0013                           1-  830     _02029_DS_:
                                    1-  831     	.line	124, "BSP\bsp_cs1630.c"; 	while(len--)
                                    1-  832     	BANKSEL	r0x1017
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 01rr                      1-  833     	MOVR	r0x1017,W
                                    1-  834     	BANKSEL	r0x1013
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 00rr                      1-  835     	MOVAR	r0x1013
                                    1-  836     	BANKSEL	r0x1017
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 06rr                      1-  837     	DECR	r0x1017,F
                                    1-  838     	BANKSEL	r0x1013
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 01rr                      1-  839     	MOVR	r0x1013,W
     001B 0D03                      1-  840     	BTRSC	STATUS,2
                                    1-  841     	MGOTO	_02032_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  842     	.line	126, "BSP\bsp_cs1630.c"; 	SPI_SendByte(*buf++);
                                    1-  843     	BANKSEL	r0x1016
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 01rr                      1-  844     	MOVR	r0x1016,W
     001F 00rr                      1-  845     	MOVAR	STK01
                                    1-  846     	BANKSEL	r0x1015
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1-  847     	MOVR	r0x1015,W
     0022 00rr                      1-  848     	MOVAR	STK00
                                    1-  849     	BANKSEL	r0x1014
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 01rr                      1-  850     	MOVR	r0x1014,W
                                    1-  851     	MCALL	__gptrget1
     0025 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  852     	BANKSEL	r0x1013
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 00rr                      1-  853     	MOVAR	r0x1013
                                    1-  854     	BANKSEL	r0x1016
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 05rr                      1-  855     	INCR	r0x1016,F
     002A 0903                      1-  856     	BTRSS	STATUS,2
                                    1-  857     	MGOTO	_00001_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  858     	BANKSEL	r0x1015
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 05rr                      1-  859     	INCR	r0x1015,F
     002E                           1-  860     _00001_DS_:
     002E 0903                      1-  861     	BTRSS	STATUS,2
                                    1-  862     	MGOTO	_00002_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  863     	BANKSEL	r0x1014
     0030 rrrr                      3-  109 m1      .banksel ram_address
     0031 05rr                      1-  864     	INCR	r0x1014,F
     0032                           1-  865     _00002_DS_:
                                    1-  866     	BANKSEL	r0x1013
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1-  867     	MOVR	r0x1013,W
                                    1-  868     	MCALL	_SPI_SendByte
     0034 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  869     	MGOTO	_02029_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
     0036                           1-  870     _02032_DS_:
                                    1-  871     	.line	128, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0036 18rr                      1-  872     	BSR	_PORTAbits,1
     0037 2101                      1-  873     	MOVIA	0x01
                                    1-  874     	MCALL	_delay_us
     0038 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  875     	.line	130, "BSP\bsp_cs1630.c"; 	}
                                    1-  876     	RETURN	
     0039 0010                      3-   39 m1      ret
                                    1-  877     ; exit point of _CS1630_wr_buffer
                                    1-  879     ;***
                                    1-  880     ;  pBlock Stats: dbName = C
                                    1-  881     ;***
                                    1-  882     ;has an exit
                                    1-  883     ;functions called:
                                    1-  884     ;   _SPI_SendByte
                                    1-  885     ;   _SPI_SendByte
                                    1-  886     ;   _delay_us
                                    1-  887     ;   _SPI_SendByte
                                    1-  888     ;   _SPI_SendByte
                                    1-  889     ;   _delay_us
                                    1-  890     ;3 compiler assigned registers:
                                    1-  891     ;   r0x100C
                                    1-  892     ;   STK00
                                    1-  893     ;   r0x100D
                                    1-  894     ;; Starting pCode block
                                    1-  895     .segment "code"; module=bsp_cs1630, function=_CS1630_write_byte
                                    1-  897     ;local variable name mapping:
     0000                           1-  900     _CS1630_write_byte:
                                    1-  901     ; 2 exit points
                                    1-  902     	.line	109, "BSP\bsp_cs1630.c"; 	void CS1630_write_byte(unsigned char addr,unsigned char D)
                                    1-  903     	BANKSEL	r0x100C
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  904     	MOVAR	r0x100C
     0002 01rr                      1-  905     	MOVR	STK00,W
                                    1-  906     	BANKSEL	r0x100D
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  907     	MOVAR	r0x100D
                                    1-  908     	.line	112, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0005 1Crr                      1-  909     	BCR	_PORTAbits,1
                                    1-  910     	.line	113, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_W_REGISTER|addr);
                                    1-  911     	BANKSEL	r0x100C
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 1Arr                      1-  912     	BSR	r0x100C,5
     0008 01rr                      1-  913     	MOVR	r0x100C,W
                                    1-  914     	MCALL	_SPI_SendByte
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  915     	.line	114, "BSP\bsp_cs1630.c"; 	SPI_SendByte(D);
                                    1-  916     	BANKSEL	r0x100D
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 01rr                      1-  917     	MOVR	r0x100D,W
                                    1-  918     	MCALL	_SPI_SendByte
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  919     	.line	115, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     000D 18rr                      1-  920     	BSR	_PORTAbits,1
     000E 2101                      1-  921     	MOVIA	0x01
                                    1-  922     	MCALL	_delay_us
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  923     	.line	117, "BSP\bsp_cs1630.c"; 	}
                                    1-  924     	RETURN	
     0010 0010                      3-   39 m1      ret
                                    1-  925     ; exit point of _CS1630_write_byte
                                    1-  927     ;***
                                    1-  928     ;  pBlock Stats: dbName = C
                                    1-  929     ;***
                                    1-  930     ;has an exit
                                    1-  931     ;functions called:
                                    1-  932     ;   _SPI_SendByte
                                    1-  933     ;   _SPI_ReadByte
                                    1-  934     ;   _delay_us
                                    1-  935     ;   _SPI_SendByte
                                    1-  936     ;   _SPI_ReadByte
                                    1-  937     ;   _delay_us
                                    1-  938     ;1 compiler assigned register :
                                    1-  939     ;   r0x1009
                                    1-  940     ;; Starting pCode block
                                    1-  941     .segment "code"; module=bsp_cs1630, function=_CS1630_read_byte
                                    1-  943     ;local variable name mapping:
     0000                           1-  946     _CS1630_read_byte:
                                    1-  947     ; 2 exit points
                                    1-  948     	.line	96, "BSP\bsp_cs1630.c"; 	unsigned char CS1630_read_byte(unsigned char addr)
                                    1-  949     	BANKSEL	r0x1009
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  950     	MOVAR	r0x1009
                                    1-  951     	.line	100, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0002 1Crr                      1-  952     	BCR	_PORTAbits,1
                                    1-  953     	.line	101, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_R_REGISTER|addr);
     0003 01rr                      1-  954     	MOVR	r0x1009,W
                                    1-  955     	MCALL	_SPI_SendByte
     0004 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  956     	.line	102, "BSP\bsp_cs1630.c"; 	rxdata = SPI_ReadByte();
                                    1-  957     	MCALL	_SPI_ReadByte
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  958     	BANKSEL	r0x1009
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  959     	MOVAR	r0x1009
                                    1-  960     	.line	103, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0008 18rr                      1-  961     	BSR	_PORTAbits,1
     0009 2101                      1-  962     	MOVIA	0x01
                                    1-  963     	MCALL	_delay_us
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  964     	.line	105, "BSP\bsp_cs1630.c"; 	return(rxdata);
                                    1-  965     	BANKSEL	r0x1009
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1-  966     	MOVR	r0x1009,W
                                    1-  967     	.line	106, "BSP\bsp_cs1630.c"; 	}
                                    1-  968     	RETURN	
     000D 0010                      3-   39 m1      ret
                                    1-  969     ; exit point of _CS1630_read_byte
                                    1-  971     ;***
                                    1-  972     ;  pBlock Stats: dbName = C
                                    1-  973     ;***
                                    1-  974     ;has an exit
                                    1-  975     ;functions called:
                                    1-  976     ;   _SPI_SendByte
                                    1-  977     ;   _SPI_ReadByte
                                    1-  978     ;   __gptrput1
                                    1-  979     ;   _delay_us
                                    1-  980     ;   _delay_us
                                    1-  981     ;   _SPI_SendByte
                                    1-  982     ;   _SPI_ReadByte
                                    1-  983     ;   __gptrput1
                                    1-  984     ;   _delay_us
                                    1-  985     ;   _delay_us
                                    1-  986     ;9 compiler assigned registers:
                                    1-  987     ;   r0x1022
                                    1-  988     ;   STK00
                                    1-  989     ;   r0x1023
                                    1-  990     ;   STK01
                                    1-  991     ;   r0x1024
                                    1-  992     ;   STK02
                                    1-  993     ;   r0x1025
                                    1-  994     ;   STK03
                                    1-  995     ;   r0x1026
                                    1-  996     ;; Starting pCode block
                                    1-  997     .segment "code"; module=bsp_cs1630, function=_CS1630_read_buffer
                                    1-  999     ;local variable name mapping:
     0000                           1- 1001     _CS1630_read_buffer:
                                    1- 1002     ; 2 exit points
                                    1- 1003     	.line	80, "BSP\bsp_cs1630.c"; 	void CS1630_read_buffer(unsigned char addr, unsigned char* buf, unsigned char len)
                                    1- 1004     	BANKSEL	r0x1022
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1005     	MOVAR	r0x1022
     0002 01rr                      1- 1006     	MOVR	STK00,W
                                    1- 1007     	BANKSEL	r0x1023
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1008     	MOVAR	r0x1023
     0005 01rr                      1- 1009     	MOVR	STK01,W
                                    1- 1010     	BANKSEL	r0x1024
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1011     	MOVAR	r0x1024
     0008 01rr                      1- 1012     	MOVR	STK02,W
                                    1- 1013     	BANKSEL	r0x1025
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 1014     	MOVAR	r0x1025
     000B 01rr                      1- 1015     	MOVR	STK03,W
                                    1- 1016     	BANKSEL	r0x1026
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 1017     	MOVAR	r0x1026
                                    1- 1018     	.line	83, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     000E 1Crr                      1- 1019     	BCR	_PORTAbits,1
                                    1- 1020     	.line	84, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_R_REGISTER|addr);
                                    1- 1021     	BANKSEL	r0x1022
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 01rr                      1- 1022     	MOVR	r0x1022,W
                                    1- 1023     	MCALL	_SPI_SendByte
     0011 2rrr                      3-   65 m1      LCALL rom_address
     0012                           1- 1024     _02014_DS_:
                                    1- 1025     	.line	86, "BSP\bsp_cs1630.c"; 	while(len--)
                                    1- 1026     	BANKSEL	r0x1026
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 01rr                      1- 1027     	MOVR	r0x1026,W
                                    1- 1028     	BANKSEL	r0x1022
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1029     	MOVAR	r0x1022
                                    1- 1030     	BANKSEL	r0x1026
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 06rr                      1- 1031     	DECR	r0x1026,F
                                    1- 1032     	BANKSEL	r0x1022
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 01rr                      1- 1033     	MOVR	r0x1022,W
     001A 0D03                      1- 1034     	BTRSC	STATUS,2
                                    1- 1035     	MGOTO	_02016_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1036     	.line	88, "BSP\bsp_cs1630.c"; 	*buf++ = SPI_ReadByte();
                                    1- 1037     	MCALL	_SPI_ReadByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1038     	BANKSEL	r0x1022
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 00rr                      1- 1039     	MOVAR	r0x1022
     001F 01rr                      1- 1040     	MOVR	r0x1022,W
     0020 00rr                      1- 1041     	MOVAR	STK02
                                    1- 1042     	BANKSEL	r0x1025
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1043     	MOVR	r0x1025,W
     0023 00rr                      1- 1044     	MOVAR	STK01
                                    1- 1045     	BANKSEL	r0x1024
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 01rr                      1- 1046     	MOVR	r0x1024,W
     0026 00rr                      1- 1047     	MOVAR	STK00
                                    1- 1048     	BANKSEL	r0x1023
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 1049     	MOVR	r0x1023,W
                                    1- 1050     	MCALL	__gptrput1
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1051     	BANKSEL	r0x1025
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 05rr                      1- 1052     	INCR	r0x1025,F
     002C 0903                      1- 1053     	BTRSS	STATUS,2
                                    1- 1054     	MGOTO	_00003_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1055     	BANKSEL	r0x1024
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 05rr                      1- 1056     	INCR	r0x1024,F
     0030                           1- 1057     _00003_DS_:
     0030 0903                      1- 1058     	BTRSS	STATUS,2
                                    1- 1059     	MGOTO	_00004_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1060     	BANKSEL	r0x1023
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 05rr                      1- 1061     	INCR	r0x1023,F
     0034                           1- 1062     _00004_DS_:
                                    1- 1063     	MGOTO	_02014_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
     0035                           1- 1064     _02016_DS_:
                                    1- 1065     	.line	91, "BSP\bsp_cs1630.c"; 	delay_us(1);
     0035 2101                      1- 1066     	MOVIA	0x01
                                    1- 1067     	MCALL	_delay_us
     0036 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1068     	.line	92, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0037 18rr                      1- 1069     	BSR	_PORTAbits,1
     0038 2101                      1- 1070     	MOVIA	0x01
                                    1- 1071     	MCALL	_delay_us
     0039 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1072     	.line	93, "BSP\bsp_cs1630.c"; 	}
                                    1- 1073     	RETURN	
     003A 0010                      3-   39 m1      ret
                                    1- 1074     ; exit point of _CS1630_read_buffer
                                    1- 1076     ;***
                                    1- 1077     ;  pBlock Stats: dbName = C
                                    1- 1078     ;***
                                    1- 1079     ;has an exit
                                    1- 1080     ;functions called:
                                    1- 1081     ;   _RF_softSPI_Init
                                    1- 1082     ;   _CS1630_CE_Low
                                    1- 1083     ;   _CS1630_write_byte
                                    1- 1084     ;   _delay_ms
                                    1- 1085     ;   _CS1630_Soft_Rst
                                    1- 1086     ;   _CS1630_CE_High
                                    1- 1087     ;   _delay_us
                                    1- 1088     ;   _CS1630_CE_Low
                                    1- 1089     ;   _CS1630_read_byte
                                    1- 1090     ;   _CS1630_Bank_Switch
                                    1- 1091     ;   _CS1630_read_byte
                                    1- 1092     ;   _CS1630_read_buffer
                                    1- 1093     ;   _CS1630_wr_buffer
                                    1- 1094     ;   _CS1630_write_byte
                                    1- 1095     ;   _CS1630_Bank_Switch
                                    1- 1096     ;   _CS1630_write_byte
                                    1- 1097     ;   _get_rolling_code_0
                                    1- 1098     ;   _get_rolling_code_1
                                    1- 1099     ;   _get_rolling_code_2
                                    1- 1100     ;   _get_rolling_code_3
                                    1- 1101     ;   _CS1630_wr_buffer
                                    1- 1102     ;   _CS1630_Clear_All_Irq
                                    1- 1103     ;   _CS1630_Flush_Tx
                                    1- 1104     ;   _RF_softSPI_Init
                                    1- 1105     ;   _CS1630_CE_Low
                                    1- 1106     ;   _CS1630_write_byte
                                    1- 1107     ;   _delay_ms
                                    1- 1108     ;   _CS1630_Soft_Rst
                                    1- 1109     ;   _CS1630_CE_High
                                    1- 1110     ;   _delay_us
                                    1- 1111     ;   _CS1630_CE_Low
                                    1- 1112     ;   _CS1630_read_byte
                                    1- 1113     ;   _CS1630_Bank_Switch
                                    1- 1114     ;   _CS1630_read_byte
                                    1- 1115     ;   _CS1630_read_buffer
                                    1- 1116     ;   _CS1630_wr_buffer
                                    1- 1117     ;   _CS1630_write_byte
                                    1- 1118     ;   _CS1630_Bank_Switch
                                    1- 1119     ;   _CS1630_write_byte
                                    1- 1120     ;   _get_rolling_code_0
                                    1- 1121     ;   _get_rolling_code_1
                                    1- 1122     ;   _get_rolling_code_2
                                    1- 1123     ;   _get_rolling_code_3
                                    1- 1124     ;   _CS1630_wr_buffer
                                    1- 1125     ;   _CS1630_Clear_All_Irq
                                    1- 1126     ;   _CS1630_Flush_Tx
                                    1- 1127     ;8 compiler assigned registers:
                                    1- 1128     ;   STK00
                                    1- 1129     ;   r0x102A
                                    1- 1130     ;   r0x102B
                                    1- 1131     ;   r0x102C
                                    1- 1132     ;   r0x102D
                                    1- 1133     ;   STK03
                                    1- 1134     ;   STK02
                                    1- 1135     ;   STK01
                                    1- 1136     ;; Starting pCode block
                                    1- 1137     .segment "code"; module=bsp_cs1630, function=_CS1630_Init
                                    1- 1139     ;local variable name mapping:
     0000                           1- 1142     _CS1630_Init:
                                    1- 1143     ; 2 exit points
                                    1- 1144     	.line	27, "BSP\bsp_cs1630.c"; 	RF_softSPI_Init();
                                    1- 1145     	MCALL	_RF_softSPI_Init
     0000 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1146     	.line	31, "BSP\bsp_cs1630.c"; 	CS1630_CE_Low();
                                    1- 1147     	MCALL	_CS1630_CE_Low
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1148     	.line	32, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x02); // 先断一下电，然后再等待一下在开始等待校准
     0002 2102                      1- 1149     	MOVIA	0x02
     0003 00rr                      1- 1150     	MOVAR	STK00
     0004 2100                      1- 1151     	MOVIA	0x00
                                    1- 1152     	MCALL	_CS1630_write_byte
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1153     	.line	33, "BSP\bsp_cs1630.c"; 	delay_ms(4);
     0006 2104                      1- 1154     	MOVIA	0x04
                                    1- 1155     	MCALL	_delay_ms
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1156     	.line	35, "BSP\bsp_cs1630.c"; 	CS1630_Soft_Rst();
                                    1- 1157     	MCALL	_CS1630_Soft_Rst
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1158     	.line	37, "BSP\bsp_cs1630.c"; 	CS1630_CE_High();
                                    1- 1159     	MCALL	_CS1630_CE_High
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1160     	.line	38, "BSP\bsp_cs1630.c"; 	delay_us(16);
     000A 2110                      1- 1161     	MOVIA	0x10
                                    1- 1162     	MCALL	_delay_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1163     	.line	39, "BSP\bsp_cs1630.c"; 	CS1630_CE_Low();
                                    1- 1164     	MCALL	_CS1630_CE_Low
     000C 2rrr                      3-   65 m1      LCALL rom_address
     000D                           1- 1165     _02009_DS_:
                                    1- 1166     	.line	41, "BSP\bsp_cs1630.c"; 	while((CS1630_read_byte(CS1630_BANK0_SETUP_VALUE) & 0x01) == 0x00); // 等待校准结束
     000D 211E                      1- 1167     	MOVIA	0x1e
                                    1- 1168     	MCALL	_CS1630_read_byte
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1169     	BANKSEL	r0x102A
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 00rr                      1- 1170     	MOVAR	r0x102A
     0011 08rr                      1- 1171     	BTRSS	r0x102A,0
                                    1- 1172     	MGOTO	_02009_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1173     	.line	44, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank1);
     0013 2101                      1- 1174     	MOVIA	0x01
                                    1- 1175     	MCALL	_CS1630_Bank_Switch
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1176     	.line	46, "BSP\bsp_cs1630.c"; 	regval = CS1630_read_byte(CS1630_BANK1_DAC_RANGE); // 记录校准值
     0015 2111                      1- 1177     	MOVIA	0x11
                                    1- 1178     	MCALL	_CS1630_read_byte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1179     	BANKSEL	r0x102A
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 1180     	MOVAR	r0x102A
                                    1- 1181     	.line	47, "BSP\bsp_cs1630.c"; 	CS1630_read_buffer(CS1630_BANK1_PLL_CTL0, temp, 4);
     0019 21rr                      1- 1182     	MOVIA	(_CS1630_Init_temp_65536_63 + 0)
                                    1- 1183     	BANKSEL	r0x102B
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1184     	MOVAR	r0x102B
                                    1- 1185     	BANKSEL	r0x102C
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 02rr                      1- 1186     	CLRR	r0x102C
                                    1- 1187     	BANKSEL	r0x102D
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 02rr                      1- 1188     	CLRR	r0x102D
     0020 2104                      1- 1189     	MOVIA	0x04
     0021 00rr                      1- 1190     	MOVAR	STK03
                                    1- 1191     	BANKSEL	r0x102B
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1- 1192     	MOVR	r0x102B,W
     0024 00rr                      1- 1193     	MOVAR	STK02
                                    1- 1194     	BANKSEL	r0x102C
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 01rr                      1- 1195     	MOVR	r0x102C,W
     0027 00rr                      1- 1196     	MOVAR	STK01
                                    1- 1197     	BANKSEL	r0x102D
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 01rr                      1- 1198     	MOVR	r0x102D,W
     002A 00rr                      1- 1199     	MOVAR	STK00
     002B 2101                      1- 1200     	MOVIA	0x01
                                    1- 1201     	MCALL	_CS1630_read_buffer
     002C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1202     	.line	48, "BSP\bsp_cs1630.c"; 	temp[0] = 0x07;
     002D 2107                      1- 1203     	MOVIA	0x07
                                    1- 1204     	BANKSEL	_CS1630_Init_temp_65536_63
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1205     	MOVAR	(_CS1630_Init_temp_65536_63 + 0)
                                    1- 1206     	.line	49, "BSP\bsp_cs1630.c"; 	temp[1] = 0x80;
     0030 2180                      1- 1207     	MOVIA	0x80
     0031 00rr                      1- 1208     	MOVAR	(_CS1630_Init_temp_65536_63 + 1)
                                    1- 1209     	.line	50, "BSP\bsp_cs1630.c"; 	temp[2] |= (BIT6+BIT3);
     0032 01rr                      1- 1210     	MOVR	(_CS1630_Init_temp_65536_63 + 2),W
                                    1- 1211     	BANKSEL	r0x102B
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 00rr                      1- 1212     	MOVAR	r0x102B
     0035 2148                      1- 1213     	MOVIA	0x48
     0036 11rr                      1- 1214     	IORAR	r0x102B,F
     0037 01rr                      1- 1215     	MOVR	r0x102B,W
                                    1- 1216     	BANKSEL	_CS1630_Init_temp_65536_63
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 00rr                      1- 1217     	MOVAR	(_CS1630_Init_temp_65536_63 + 2)
                                    1- 1218     	.line	51, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(CS1630_BANK1_PLL_CTL0, temp, 4); // 配置Bank1 的 PLL_CTL0为07  80  48
     003A 21rr                      1- 1219     	MOVIA	(_CS1630_Init_temp_65536_63 + 0)
                                    1- 1220     	BANKSEL	r0x102B
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1- 1221     	MOVAR	r0x102B
                                    1- 1222     	BANKSEL	r0x102C
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 02rr                      1- 1223     	CLRR	r0x102C
                                    1- 1224     	BANKSEL	r0x102D
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 02rr                      1- 1225     	CLRR	r0x102D
     0041 2104                      1- 1226     	MOVIA	0x04
     0042 00rr                      1- 1227     	MOVAR	STK03
                                    1- 1228     	BANKSEL	r0x102B
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 1229     	MOVR	r0x102B,W
     0045 00rr                      1- 1230     	MOVAR	STK02
                                    1- 1231     	BANKSEL	r0x102C
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 1232     	MOVR	r0x102C,W
     0048 00rr                      1- 1233     	MOVAR	STK01
                                    1- 1234     	BANKSEL	r0x102D
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 01rr                      1- 1235     	MOVR	r0x102D,W
     004B 00rr                      1- 1236     	MOVAR	STK00
     004C 2101                      1- 1237     	MOVIA	0x01
                                    1- 1238     	MCALL	_CS1630_wr_buffer
     004D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1239     	.line	53, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK1_DAC_RANGE, regval); // 恢复校准值，后续休眠唤醒后不用再次校准
                                    1- 1240     	BANKSEL	r0x102A
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 01rr                      1- 1241     	MOVR	r0x102A,W
     0050 00rr                      1- 1242     	MOVAR	STK00
     0051 2111                      1- 1243     	MOVIA	0x11
                                    1- 1244     	MCALL	_CS1630_write_byte
     0052 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1245     	.line	54, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank0);
     0053 2100                      1- 1246     	MOVIA	0x00
                                    1- 1247     	MCALL	_CS1630_Bank_Switch
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1248     	.line	56, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, 0x01);
     0055 2101                      1- 1249     	MOVIA	0x01
     0056 00rr                      1- 1250     	MOVAR	STK00
     0057 211E                      1- 1251     	MOVIA	0x1e
                                    1- 1252     	MCALL	_CS1630_write_byte
     0058 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1253     	.line	61, "BSP\bsp_cs1630.c"; 	temp[0] = 0x34;
     0059 2134                      1- 1254     	MOVIA	0x34
                                    1- 1255     	BANKSEL	_CS1630_Init_temp_65536_63
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1256     	MOVAR	(_CS1630_Init_temp_65536_63 + 0)
                                    1- 1257     	.line	62, "BSP\bsp_cs1630.c"; 	temp[1] = get_rolling_code_0()+1;
                                    1- 1258     	MCALL	_get_rolling_code_0
     005C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1259     	BANKSEL	r0x102A
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 00rr                      1- 1260     	MOVAR	r0x102A
     005F 05rr                      1- 1261     	INCR	r0x102A,F
     0060 01rr                      1- 1262     	MOVR	r0x102A,W
                                    1- 1263     	BANKSEL	_CS1630_Init_temp_65536_63
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 00rr                      1- 1264     	MOVAR	(_CS1630_Init_temp_65536_63 + 1)
                                    1- 1265     	.line	63, "BSP\bsp_cs1630.c"; 	temp[2] = get_rolling_code_1()+1;
                                    1- 1266     	MCALL	_get_rolling_code_1
     0063 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1267     	BANKSEL	r0x102A
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 00rr                      1- 1268     	MOVAR	r0x102A
     0066 05rr                      1- 1269     	INCR	r0x102A,F
     0067 01rr                      1- 1270     	MOVR	r0x102A,W
                                    1- 1271     	BANKSEL	_CS1630_Init_temp_65536_63
     0068 rrrr                      3-  109 m1      .banksel ram_address
     0069 00rr                      1- 1272     	MOVAR	(_CS1630_Init_temp_65536_63 + 2)
                                    1- 1273     	.line	64, "BSP\bsp_cs1630.c"; 	temp[3] = get_rolling_code_2()+1;
                                    1- 1274     	MCALL	_get_rolling_code_2
     006A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1275     	BANKSEL	r0x102A
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1- 1276     	MOVAR	r0x102A
     006D 05rr                      1- 1277     	INCR	r0x102A,F
     006E 01rr                      1- 1278     	MOVR	r0x102A,W
                                    1- 1279     	BANKSEL	_CS1630_Init_temp_65536_63
     006F rrrr                      3-  109 m1      .banksel ram_address
     0070 00rr                      1- 1280     	MOVAR	(_CS1630_Init_temp_65536_63 + 3)
                                    1- 1281     	.line	65, "BSP\bsp_cs1630.c"; 	temp[4] = get_rolling_code_3()+1;
                                    1- 1282     	MCALL	_get_rolling_code_3
     0071 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1283     	BANKSEL	r0x102A
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 00rr                      1- 1284     	MOVAR	r0x102A
     0074 05rr                      1- 1285     	INCR	r0x102A,F
     0075 01rr                      1- 1286     	MOVR	r0x102A,W
                                    1- 1287     	BANKSEL	_CS1630_Init_temp_65536_63
     0076 rrrr                      3-  109 m1      .banksel ram_address
     0077 00rr                      1- 1288     	MOVAR	(_CS1630_Init_temp_65536_63 + 4)
                                    1- 1289     	.line	67, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(CS1630_BANK0_TX_ADDR, temp, 5); // set address
     0078 21rr                      1- 1290     	MOVIA	(_CS1630_Init_temp_65536_63 + 0)
                                    1- 1291     	BANKSEL	r0x102A
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 00rr                      1- 1292     	MOVAR	r0x102A
                                    1- 1293     	BANKSEL	r0x102B
     007B rrrr                      3-  109 m1      .banksel ram_address
     007C 02rr                      1- 1294     	CLRR	r0x102B
                                    1- 1295     	BANKSEL	r0x102C
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 02rr                      1- 1296     	CLRR	r0x102C
     007F 2105                      1- 1297     	MOVIA	0x05
     0080 00rr                      1- 1298     	MOVAR	STK03
                                    1- 1299     	BANKSEL	r0x102A
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 01rr                      1- 1300     	MOVR	r0x102A,W
     0083 00rr                      1- 1301     	MOVAR	STK02
                                    1- 1302     	BANKSEL	r0x102B
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 01rr                      1- 1303     	MOVR	r0x102B,W
     0086 00rr                      1- 1304     	MOVAR	STK01
                                    1- 1305     	BANKSEL	r0x102C
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1- 1306     	MOVR	r0x102C,W
     0089 00rr                      1- 1307     	MOVAR	STK00
     008A 2110                      1- 1308     	MOVIA	0x10
                                    1- 1309     	MCALL	_CS1630_wr_buffer
     008B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1310     	.line	74, "BSP\bsp_cs1630.c"; 	CS1630_Clear_All_Irq();
                                    1- 1311     	MCALL	_CS1630_Clear_All_Irq
     008C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1312     	.line	75, "BSP\bsp_cs1630.c"; 	CS1630_Flush_Tx();
                                    1- 1313     	MCALL	_CS1630_Flush_Tx
     008D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1314     	.line	76, "BSP\bsp_cs1630.c"; 	CLRWDT();
     008E 0002                      1- 1315     	clrwdt
                                    1- 1316     	.line	78, "BSP\bsp_cs1630.c"; 	}
                                    1- 1317     	RETURN	
     008F 0010                      3-   39 m1      ret
                                    1- 1318     ; exit point of _CS1630_Init
                                    1- 1320     ;***
                                    1- 1321     ;  pBlock Stats: dbName = C
                                    1- 1322     ;***
                                    1- 1323     ;has an exit
                                    1- 1324     ;functions called:
                                    1- 1325     ;   _CS1630_Bank_Switch
                                    1- 1326     ;   _CS1630_read_buffer
                                    1- 1327     ;   _CS1630_wr_buffer
                                    1- 1328     ;   _CS1630_read_buffer
                                    1- 1329     ;   _CS1630_Bank_Switch
                                    1- 1330     ;   _CS1630_Bank_Switch
                                    1- 1331     ;   _CS1630_read_buffer
                                    1- 1332     ;   _CS1630_wr_buffer
                                    1- 1333     ;   _CS1630_read_buffer
                                    1- 1334     ;   _CS1630_Bank_Switch
                                    1- 1335     ;7 compiler assigned registers:
                                    1- 1336     ;   r0x1027
                                    1- 1337     ;   r0x1028
                                    1- 1338     ;   r0x1029
                                    1- 1339     ;   STK03
                                    1- 1340     ;   STK02
                                    1- 1341     ;   STK01
                                    1- 1342     ;   STK00
                                    1- 1343     ;; Starting pCode block
                                    1- 1344     .segment "code"; module=bsp_cs1630, function=_CS1630_Soft_Rst
                                    1- 1346     ;local variable name mapping:
     0000                           1- 1348     _CS1630_Soft_Rst:
                                    1- 1349     ; 2 exit points
                                    1- 1350     	.line	12, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank1);
     0000 2101                      1- 1351     	MOVIA	0x01
                                    1- 1352     	MCALL	_CS1630_Bank_Switch
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1353     	.line	14, "BSP\bsp_cs1630.c"; 	CS1630_read_buffer(CS1630_BANK1_PLL_CTL0, soft_temp, 4); // 读取该寄存器状态
     0002 21rr                      1- 1354     	MOVIA	(_CS1630_Soft_Rst_soft_temp_65536_61 + 0)
                                    1- 1355     	BANKSEL	r0x1027
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1356     	MOVAR	r0x1027
                                    1- 1357     	BANKSEL	r0x1028
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 02rr                      1- 1358     	CLRR	r0x1028
                                    1- 1359     	BANKSEL	r0x1029
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 02rr                      1- 1360     	CLRR	r0x1029
     0009 2104                      1- 1361     	MOVIA	0x04
     000A 00rr                      1- 1362     	MOVAR	STK03
                                    1- 1363     	BANKSEL	r0x1027
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 1364     	MOVR	r0x1027,W
     000D 00rr                      1- 1365     	MOVAR	STK02
                                    1- 1366     	BANKSEL	r0x1028
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 01rr                      1- 1367     	MOVR	r0x1028,W
     0010 00rr                      1- 1368     	MOVAR	STK01
                                    1- 1369     	BANKSEL	r0x1029
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 1370     	MOVR	r0x1029,W
     0013 00rr                      1- 1371     	MOVAR	STK00
     0014 2101                      1- 1372     	MOVIA	0x01
                                    1- 1373     	MCALL	_CS1630_read_buffer
     0015 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1374     	.line	15, "BSP\bsp_cs1630.c"; 	soft_temp[3] |= 0x80; // 将最低位置0
                                    1- 1375     	BANKSEL	_CS1630_Soft_Rst_soft_temp_65536_61
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 1376     	MOVR	(_CS1630_Soft_Rst_soft_temp_65536_61 + 3),W
                                    1- 1377     	BANKSEL	r0x1027
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 1378     	MOVAR	r0x1027
     001A 1Brr                      1- 1379     	BSR	r0x1027,7
     001B 01rr                      1- 1380     	MOVR	r0x1027,W
                                    1- 1381     	BANKSEL	_CS1630_Soft_Rst_soft_temp_65536_61
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1382     	MOVAR	(_CS1630_Soft_Rst_soft_temp_65536_61 + 3)
                                    1- 1383     	.line	16, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(CS1630_BANK1_PLL_CTL0, soft_temp, 4);
     001E 21rr                      1- 1384     	MOVIA	(_CS1630_Soft_Rst_soft_temp_65536_61 + 0)
                                    1- 1385     	BANKSEL	r0x1027
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1- 1386     	MOVAR	r0x1027
                                    1- 1387     	BANKSEL	r0x1028
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 02rr                      1- 1388     	CLRR	r0x1028
                                    1- 1389     	BANKSEL	r0x1029
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 02rr                      1- 1390     	CLRR	r0x1029
     0025 2104                      1- 1391     	MOVIA	0x04
     0026 00rr                      1- 1392     	MOVAR	STK03
                                    1- 1393     	BANKSEL	r0x1027
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 1394     	MOVR	r0x1027,W
     0029 00rr                      1- 1395     	MOVAR	STK02
                                    1- 1396     	BANKSEL	r0x1028
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 01rr                      1- 1397     	MOVR	r0x1028,W
     002C 00rr                      1- 1398     	MOVAR	STK01
                                    1- 1399     	BANKSEL	r0x1029
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 01rr                      1- 1400     	MOVR	r0x1029,W
     002F 00rr                      1- 1401     	MOVAR	STK00
     0030 2101                      1- 1402     	MOVIA	0x01
                                    1- 1403     	MCALL	_CS1630_wr_buffer
     0031 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1404     	.line	17, "BSP\bsp_cs1630.c"; 	CS1630_read_buffer(CS1630_BANK1_PLL_CTL0, soft_temp, 4);
     0032 21rr                      1- 1405     	MOVIA	(_CS1630_Soft_Rst_soft_temp_65536_61 + 0)
                                    1- 1406     	BANKSEL	r0x1027
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 00rr                      1- 1407     	MOVAR	r0x1027
                                    1- 1408     	BANKSEL	r0x1028
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 02rr                      1- 1409     	CLRR	r0x1028
                                    1- 1410     	BANKSEL	r0x1029
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 02rr                      1- 1411     	CLRR	r0x1029
     0039 2104                      1- 1412     	MOVIA	0x04
     003A 00rr                      1- 1413     	MOVAR	STK03
                                    1- 1414     	BANKSEL	r0x1027
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 01rr                      1- 1415     	MOVR	r0x1027,W
     003D 00rr                      1- 1416     	MOVAR	STK02
                                    1- 1417     	BANKSEL	r0x1028
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 01rr                      1- 1418     	MOVR	r0x1028,W
     0040 00rr                      1- 1419     	MOVAR	STK01
                                    1- 1420     	BANKSEL	r0x1029
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 01rr                      1- 1421     	MOVR	r0x1029,W
     0043 00rr                      1- 1422     	MOVAR	STK00
     0044 2101                      1- 1423     	MOVIA	0x01
                                    1- 1424     	MCALL	_CS1630_read_buffer
     0045 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1425     	.line	18, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank0);
     0046 2100                      1- 1426     	MOVIA	0x00
                                    1- 1427     	MCALL	_CS1630_Bank_Switch
     0047 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1428     	.line	19, "BSP\bsp_cs1630.c"; 	}
                                    1- 1429     	RETURN	
     0048 0010                      3-   39 m1      ret
                                    1- 1430     ; exit point of _CS1630_Soft_Rst
                                    1- 1433     ;	code size estimation:
                                    1- 1434     ;	  420+  131 =   551 instructions ( 1364 byte)
                                    1- 1436     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\bsp_cs1630.s
002 ny8a054e.inc
003 common.inc
004 BSP\bsp_cs1630.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
SRAM / SFR   = 0x00000000 - 0x00000000
