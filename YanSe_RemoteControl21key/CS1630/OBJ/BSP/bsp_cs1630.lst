
                    Nyquest Technology Co., Ltd.

NYASM 2.50

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\bsp_cs1630.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_get_rolling_code_3
                                    1-   15     	extern	_get_rolling_code_2
                                    1-   16     	extern	_get_rolling_code_1
                                    1-   17     	extern	_get_rolling_code_0
                                    1-   18     	extern	_usart_send_string
                                    1-   19     	extern	_usart_send_byte
                                    1-   20     	extern	_usart_init
                                    1-   21     	extern	_delay_40us
                                    1-   22     	extern	_delay_us
                                    1-   23     	extern	_delay_250ms
                                    1-   24     	extern	_delay_ms
                                    1-   25     	extern	_CS1630_Dump_RF_Register
                                    1-   26     	extern	_SPI_ReadByte
                                    1-   27     	extern	_SPI_SendByte
                                    1-   28     	extern	_RF_softSPI_Init
                                    1-   29     	extern	_RF_Init
                                    1-   30     	extern	_RF_wr_cmd
                                    1-   31     	extern	_RF_write_byte
                                    1-   32     	extern	_RF_wr_buffer
                                    1-   33     	extern	_RF_Write_Ack_Payload
                                    1-   34     	extern	_RF_spi_wrd
                                    1-   35     	extern	_RF_Soft_Rst
                                    1-   36     	extern	_RF_SendPack
                                    1-   37     	extern	_RF_ReceivePack
                                    1-   38     	extern	_RF_Read_Status
                                    1-   39     	extern	_RF_read_byte
                                    1-   40     	extern	_RF_read_buffer
                                    1-   41     	extern	_RF_Operation
                                    1-   42     	extern	_RF_ModeSwitch
                                    1-   43     	extern	_RF_Get_RSSI
                                    1-   44     	extern	_RF_Get_Chip_ID
                                    1-   45     	extern	_RF_Flush_Tx
                                    1-   46     	extern	_RF_Flush_Rx
                                    1-   47     	extern	_RF_Configure_Reg
                                    1-   48     	extern	_RF_Clear_All_Irq
                                    1-   49     	extern	_RF_Change_Pwr
                                    1-   50     	extern	_RF_Change_CH
                                    1-   51     	extern	_RF_ChangeAddr_Reg
                                    1-   52     	extern	_RF_CE_Low
                                    1-   53     	extern	_RF_CE_High_Pulse
                                    1-   54     	extern	_RF_CE_High
                                    1-   55     	extern	_RF_Bank_Switch
                                    1-   56     	extern	_clear_ram
                                    1-   57     	extern	_multi_16b
                                    1-   58     	extern	_multi_8b
                                    1-   59     	extern	_T0MD
                                    1-   60     	extern	_PCON1
                                    1-   61     	extern	_CMPCR
                                    1-   62     	extern	_BODCON
                                    1-   63     	extern	_PS0CV
                                    1-   64     	extern	_APHCON
                                    1-   65     	extern	_IOSTB
                                    1-   66     	extern	_IOSTA
                                    1-   67     	extern	_PWM5RH
                                    1-   68     	extern	_PWM5DUTY
                                    1-   69     	extern	_P5CR1
                                    1-   70     	extern	_PWM4DUTY
                                    1-   71     	extern	_P4CR1
                                    1-   72     	extern	_PS3CV
                                    1-   73     	extern	_PWM3DUTY
                                    1-   74     	extern	_T3CR2
                                    1-   75     	extern	_T3CR1
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_OSCCR
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_P2CR1
                                    1-   80     	extern	_TBHD
                                    1-   81     	extern	_TBHP
                                    1-   82     	extern	_IRCR
                                    1-   83     	extern	_BZ1CR
                                    1-   84     	extern	_PS1CV
                                    1-   85     	extern	_PWM1DUTY
                                    1-   86     	extern	_T1CR2
                                    1-   87     	extern	_T1CR1
                                    1-   88     	extern	_TMR1
                                    1-   89     	extern	_TM34RH
                                    1-   90     	extern	_TMRH
                                    1-   91     	extern	_PCHBUF
                                    1-   92     	extern	_STATUS
                                    1-   93     	extern	_PCL
                                    1-   94     	extern	_TMR0
                                    1-   95     	extern	_INTE2bits
                                    1-   96     	extern	_RFCbits
                                    1-   97     	extern	_INTEDGbits
                                    1-   98     	extern	_AWUCONbits
                                    1-   99     	extern	_INTFbits
                                    1-  100     	extern	_INTEbits
                                    1-  101     	extern	_BPHCONbits
                                    1-  102     	extern	_ABPLCONbits
                                    1-  103     	extern	_BWUCONbits
                                    1-  104     	extern	_PCONbits
                                    1-  105     	extern	_PORTBbits
                                    1-  106     	extern	_PORTAbits
                                    1-  107     	extern	__gptrput1
                                    1-  108     	extern	__gptrget1
                                    1-  110     	extern PSAVE
                                    1-  111     	extern SSAVE
                                    1-  112     	extern WSAVE
                                    1-  113     	extern STK12
                                    1-  114     	extern ___STK12
                                    1-  115     	extern STK11
                                    1-  116     	extern ___STK11
                                    1-  117     	extern STK10
                                    1-  118     	extern ___STK10
                                    1-  119     	extern STK09
                                    1-  120     	extern ___STK09
                                    1-  121     	extern STK08
                                    1-  122     	extern ___STK08
                                    1-  123     	extern STK07
                                    1-  124     	extern ___STK07
                                    1-  125     	extern STK06
                                    1-  126     	extern ___STK06
                                    1-  127     	extern STK05
                                    1-  128     	extern ___STK05
                                    1-  129     	extern STK04
                                    1-  130     	extern ___STK04
                                    1-  131     	extern STK03
                                    1-  132     	extern ___STK03
                                    1-  133     	extern STK02
                                    1-  134     	extern ___STK02
                                    1-  135     	extern STK01
                                    1-  136     	extern ___STK01
                                    1-  137     	extern STK00
                                    1-  138     	extern ___STK00
                                    1-  139     ;--------------------------------------------------------
                                    1-  140     ; global declarations
                                    1-  141     ;--------------------------------------------------------
                                    1-  142     	extern	_CS1630_wr_cmd
                                    1-  143     	extern	_INTE2
                                    1-  144     	extern	_RFC
                                    1-  145     	extern	_INTEDG
                                    1-  146     	extern	_AWUCON
                                    1-  147     	extern	_INTF
                                    1-  148     	extern	_INTE
                                    1-  149     	extern	_BPHCON
                                    1-  150     	extern	_ABPLCON
                                    1-  151     	extern	_BWUCON
                                    1-  152     	extern	_PCON
                                    1-  153     	extern	_PORTB
                                    1-  154     	extern	_PORTA
                                    1-  155     	extern	_CS1630_Soft_Rst
                                    1-  156     	extern	_CS1630_Init
                                    1-  157     	extern	_CS1630_read_buffer
                                    1-  158     	extern	_CS1630_read_byte
                                    1-  159     	extern	_CS1630_write_byte
                                    1-  160     	extern	_CS1630_wr_buffer
                                    1-  161     	extern	_CS1630_Bank_Switch
                                    1-  162     	extern	_CS1630_SendPack
                                    1-  163     	extern	_CS1630_ModeSwitch
                                    1-  164     	extern	_CS1630_Clear_All_Irq
                                    1-  165     	extern	_CS1630_Flush_Tx
                                    1-  166     	extern	_CS1630_Resend_Tx_Payload
                                    1-  167     	extern	_CS1630_Reuse_Tx_Payload
                                    1-  168     	extern	_CS1630_CE_High
                                    1-  169     	extern	_CS1630_CE_Low
                                    1-  170     	extern	_Enter_sleep
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ; global definitions
                                    1-  174     ;--------------------------------------------------------
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     ; absolute symbol definitions
                                    1-  177     ;--------------------------------------------------------
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     ; compiler-defined variables
                                    1-  180     ;--------------------------------------------------------
                                    1-  181     .segment "uninit"
     0000                           1-  182     r0x1027:
                                    1-  183     	.res	1
                                    1-  184     .segment "uninit"
     0000                           1-  185     r0x1028:
                                    1-  186     	.res	1
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x1029:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x102A:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x102B:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x102C:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x102D:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1022:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1025:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x1024:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x1023:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1026:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1009:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x100C:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x100D:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1013:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1016:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1015:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1014:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1017:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x101E:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x101F:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1020:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1021:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1018:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x101B:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x101A:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1019:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x101C:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x101D:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1010:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1011:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1012:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x100F:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x100E:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x100A:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x100B:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     _CS1630_Soft_Rst_soft_temp_65536_63:
                                    1-  294     	.res	4
                                    1-  296     .segment "uninit"
     0000                           1-  297     _CS1630_Init_temp_65536_65:
                                    1-  298     	.res	5
                                    1-  300     ;--------------------------------------------------------
                                    1-  301     ; initialized data
                                    1-  302     ;--------------------------------------------------------
                                    1-  303     ;--------------------------------------------------------
                                    1-  304     ; initialized absolute data
                                    1-  305     ;--------------------------------------------------------
                                    1-  306     ;--------------------------------------------------------
                                    1-  307     ; overlayable items in internal ram 
                                    1-  308     ;--------------------------------------------------------
                                    1-  309     ;	udata_ovr
                                    1-  310     ;--------------------------------------------------------
                                    1-  311     ; code
                                    1-  312     ;--------------------------------------------------------
                                    1-  313     ; code_bsp_cs1630	code
                                    1-  314     ;***
                                    1-  315     ;  pBlock Stats: dbName = C
                                    1-  316     ;***
                                    1-  317     ;has an exit
                                    1-  318     ;functions called:
                                    1-  319     ;   _CS1630_read_byte
                                    1-  320     ;   _SPI_SendByte
                                    1-  321     ;   _SPI_SendByte
                                    1-  322     ;   _delay_us
                                    1-  323     ;   _delay_us
                                    1-  324     ;   _delay_us
                                    1-  325     ;   _delay_us
                                    1-  326     ;   _CS1630_read_byte
                                    1-  327     ;   _SPI_SendByte
                                    1-  328     ;   _SPI_SendByte
                                    1-  329     ;   _delay_us
                                    1-  330     ;   _delay_us
                                    1-  331     ;   _delay_us
                                    1-  332     ;   _delay_us
                                    1-  333     ;2 compiler assigned registers:
                                    1-  334     ;   r0x100A
                                    1-  335     ;   r0x100B
                                    1-  336     ;; Starting pCode block
                                    1-  337     .segment "code"; module=bsp_cs1630, function=_Enter_sleep
                                    1-  339     ;local variable name mapping:
     0000                           1-  341     _Enter_sleep:
                                    1-  342     ; 2 exit points
                                    1-  343     	.line	250, "BSP\bsp_cs1630.c"; 	ret = CS1630_read_byte(CS1630_BANK0_CONFIG);
     0000 2100                      1-  344     	MOVIA	0x00
                                    1-  345     	MCALL	_CS1630_read_byte
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  346     	BANKSEL	r0x100A
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1-  347     	MOVAR	r0x100A
                                    1-  348     	.line	251, "BSP\bsp_cs1630.c"; 	ret &= ~0x02;
     0004 1Crr                      1-  349     	BCR	r0x100A,1
                                    1-  350     	.line	252, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0005 1Crr                      1-  351     	BCR	_PORTAbits,1
                                    1-  352     	.line	253, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_W_REGISTER | CS1630_BANK0_CONFIG);
     0006 2120                      1-  353     	MOVIA	0x20
                                    1-  354     	MCALL	_SPI_SendByte
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  355     	.line	254, "BSP\bsp_cs1630.c"; 	SPI_SendByte(ret);
                                    1-  356     	BANKSEL	r0x100A
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 01rr                      1-  357     	MOVR	r0x100A,W
                                    1-  358     	MCALL	_SPI_SendByte
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  359     	.line	256, "BSP\bsp_cs1630.c"; 	IOSTB = C_PB5_Input;
     000B 2120                      1-  360     	MOVIA	0x20
     000C 000r                      1-  361     	IOST	_IOSTB
                                    1-  362     	.line	258, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     000D 18rr                      1-  363     	BSR	_PORTAbits,1
     000E 2101                      1-  364     	MOVIA	0x01
                                    1-  365     	MCALL	_delay_us
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  366     	.line	260, "BSP\bsp_cs1630.c"; 	delay_us(10);
     0010 210A                      1-  367     	MOVIA	0x0a
                                    1-  368     	MCALL	_delay_us
     0011 2rrr                      3-   65 m1      LCALL rom_address
     0012                           1-  369     _02097_DS_:
                                    1-  370     	.line	262, "BSP\bsp_cs1630.c"; 	while(1 == RF_Reag_SDIO());
                                    1-  371     	BANKSEL	r0x100A
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 02rr                      1-  372     	CLRR	r0x100A
     0014 0Err                      1-  373     	BTRSC	_PORTBbits,5
     0015 05rr                      1-  374     	INCR	r0x100A,F
     0016 01rr                      1-  375     	MOVR	r0x100A,W
                                    1-  376     	BANKSEL	r0x100B
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1-  377     	MOVAR	r0x100B
     0019 01rr                      1-  378     	MOVR	r0x100B,W
     001A 2401                      1-  379     	XORIA	0x01
     001B 0903                      1-  380     	BTRSS	STATUS,2
                                    1-  381     	MGOTO	_02115_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  382     	MGOTO	_02097_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
     001E                           1-  383     _02115_DS_:
                                    1-  384     	.line	264, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     001E 1Crr                      1-  385     	BCR	_PORTAbits,1
                                    1-  386     	.line	265, "BSP\bsp_cs1630.c"; 	delay_us(10);
     001F 210A                      1-  387     	MOVIA	0x0a
                                    1-  388     	MCALL	_delay_us
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  389     	.line	266, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0021 18rr                      1-  390     	BSR	_PORTAbits,1
     0022 2101                      1-  391     	MOVIA	0x01
                                    1-  392     	MCALL	_delay_us
     0023 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  393     	.line	267, "BSP\bsp_cs1630.c"; 	IOSTB = C_PB5_Output;
     0024 0200                      1-  394     	CLRA	
     0025 000r                      1-  395     	IOST	_IOSTB
                                    1-  396     	.line	269, "BSP\bsp_cs1630.c"; 	}
                                    1-  397     	RETURN	
     0026 0010                      3-   39 m1      ret
                                    1-  398     ; exit point of _Enter_sleep
                                    1-  400     ;***
                                    1-  401     ;  pBlock Stats: dbName = C
                                    1-  402     ;***
                                    1-  403     ;has an exit
                                    1-  404     ;functions called:
                                    1-  405     ;   _CS1630_read_byte
                                    1-  406     ;   _CS1630_write_byte
                                    1-  407     ;   _CS1630_read_byte
                                    1-  408     ;   _CS1630_write_byte
                                    1-  409     ;2 compiler assigned registers:
                                    1-  410     ;   r0x100E
                                    1-  411     ;   STK00
                                    1-  412     ;; Starting pCode block
                                    1-  413     .segment "code"; module=bsp_cs1630, function=_CS1630_CE_Low
                                    1-  415     ;local variable name mapping:
     0000                           1-  417     _CS1630_CE_Low:
                                    1-  418     ; 2 exit points
                                    1-  419     	.line	239, "BSP\bsp_cs1630.c"; 	reg_val = CS1630_read_byte(CS1630_BANK0_SETUP_VALUE);
     0000 211E                      1-  420     	MOVIA	0x1e
                                    1-  421     	MCALL	_CS1630_read_byte
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  422     	BANKSEL	r0x100E
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1-  423     	MOVAR	r0x100E
                                    1-  424     	.line	240, "BSP\bsp_cs1630.c"; 	reg_val &= ~BIT3;
     0004 1Drr                      1-  425     	BCR	r0x100E,3
                                    1-  426     	.line	241, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, reg_val);
     0005 01rr                      1-  427     	MOVR	r0x100E,W
     0006 00rr                      1-  428     	MOVAR	STK00
     0007 211E                      1-  429     	MOVIA	0x1e
                                    1-  430     	MCALL	_CS1630_write_byte
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  431     	.line	242, "BSP\bsp_cs1630.c"; 	}
                                    1-  432     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1-  433     ; exit point of _CS1630_CE_Low
                                    1-  435     ;***
                                    1-  436     ;  pBlock Stats: dbName = C
                                    1-  437     ;***
                                    1-  438     ;has an exit
                                    1-  439     ;functions called:
                                    1-  440     ;   _CS1630_read_byte
                                    1-  441     ;   _CS1630_write_byte
                                    1-  442     ;   _CS1630_read_byte
                                    1-  443     ;   _CS1630_write_byte
                                    1-  444     ;2 compiler assigned registers:
                                    1-  445     ;   r0x100F
                                    1-  446     ;   STK00
                                    1-  447     ;; Starting pCode block
                                    1-  448     .segment "code"; module=bsp_cs1630, function=_CS1630_CE_High
                                    1-  450     ;local variable name mapping:
     0000                           1-  452     _CS1630_CE_High:
                                    1-  453     ; 2 exit points
                                    1-  454     	.line	230, "BSP\bsp_cs1630.c"; 	reg_val = CS1630_read_byte(CS1630_BANK0_SETUP_VALUE);
     0000 211E                      1-  455     	MOVIA	0x1e
                                    1-  456     	MCALL	_CS1630_read_byte
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  457     	BANKSEL	r0x100F
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 00rr                      1-  458     	MOVAR	r0x100F
                                    1-  459     	.line	231, "BSP\bsp_cs1630.c"; 	reg_val |= BIT3;
     0004 19rr                      1-  460     	BSR	r0x100F,3
                                    1-  461     	.line	232, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, reg_val);
     0005 01rr                      1-  462     	MOVR	r0x100F,W
     0006 00rr                      1-  463     	MOVAR	STK00
     0007 211E                      1-  464     	MOVIA	0x1e
                                    1-  465     	MCALL	_CS1630_write_byte
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  466     	.line	233, "BSP\bsp_cs1630.c"; 	}
                                    1-  467     	RETURN	
     0009 0010                      3-   39 m1      ret
                                    1-  468     ; exit point of _CS1630_CE_High
                                    1-  470     ;***
                                    1-  471     ;  pBlock Stats: dbName = C
                                    1-  472     ;***
                                    1-  473     ;has an exit
                                    1-  474     ;functions called:
                                    1-  475     ;   _SPI_SendByte
                                    1-  476     ;   _delay_us
                                    1-  477     ;   _SPI_SendByte
                                    1-  478     ;   _delay_us
                                    1-  479     ;; Starting pCode block
                                    1-  480     .segment "code"; module=bsp_cs1630, function=_CS1630_Reuse_Tx_Payload
     0000                           1-  482     _CS1630_Reuse_Tx_Payload:
                                    1-  483     ; 2 exit points
                                    1-  484     	.line	221, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0000 1Crr                      1-  485     	BCR	_PORTAbits,1
                                    1-  486     	.line	222, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_REUSE_TX_PL);
     0001 21E3                      1-  487     	MOVIA	0xe3
                                    1-  488     	MCALL	_SPI_SendByte
     0002 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  489     	.line	223, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0003 18rr                      1-  490     	BSR	_PORTAbits,1
     0004 2101                      1-  491     	MOVIA	0x01
                                    1-  492     	MCALL	_delay_us
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  493     	.line	224, "BSP\bsp_cs1630.c"; 	}
                                    1-  494     	RETURN	
     0006 0010                      3-   39 m1      ret
                                    1-  495     ; exit point of _CS1630_Reuse_Tx_Payload
                                    1-  497     ;***
                                    1-  498     ;  pBlock Stats: dbName = C
                                    1-  499     ;***
                                    1-  500     ;has an exit
                                    1-  501     ;functions called:
                                    1-  502     ;   _SPI_SendByte
                                    1-  503     ;   _delay_us
                                    1-  504     ;   _SPI_SendByte
                                    1-  505     ;   _delay_us
                                    1-  506     ;; Starting pCode block
                                    1-  507     .segment "code"; module=bsp_cs1630, function=_CS1630_Resend_Tx_Payload
     0000                           1-  509     _CS1630_Resend_Tx_Payload:
                                    1-  510     ; 2 exit points
                                    1-  511     	.line	214, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0000 1Crr                      1-  512     	BCR	_PORTAbits,1
                                    1-  513     	.line	215, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_REUSE_TX_PL);
     0001 21E3                      1-  514     	MOVIA	0xe3
                                    1-  515     	MCALL	_SPI_SendByte
     0002 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  516     	.line	216, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0003 18rr                      1-  517     	BSR	_PORTAbits,1
     0004 2101                      1-  518     	MOVIA	0x01
                                    1-  519     	MCALL	_delay_us
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  520     	.line	217, "BSP\bsp_cs1630.c"; 	}
                                    1-  521     	RETURN	
     0006 0010                      3-   39 m1      ret
                                    1-  522     ; exit point of _CS1630_Resend_Tx_Payload
                                    1-  524     ;***
                                    1-  525     ;  pBlock Stats: dbName = C
                                    1-  526     ;***
                                    1-  527     ;has an exit
                                    1-  528     ;functions called:
                                    1-  529     ;   _SPI_SendByte
                                    1-  530     ;   _delay_us
                                    1-  531     ;   _SPI_SendByte
                                    1-  532     ;   _delay_us
                                    1-  533     ;; Starting pCode block
                                    1-  534     .segment "code"; module=bsp_cs1630, function=_CS1630_Flush_Tx
     0000                           1-  536     _CS1630_Flush_Tx:
                                    1-  537     ; 2 exit points
                                    1-  538     	.line	207, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0000 1Crr                      1-  539     	BCR	_PORTAbits,1
                                    1-  540     	.line	208, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_FLUSH_TX);
     0001 21E1                      1-  541     	MOVIA	0xe1
                                    1-  542     	MCALL	_SPI_SendByte
     0002 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  543     	.line	209, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0003 18rr                      1-  544     	BSR	_PORTAbits,1
     0004 2101                      1-  545     	MOVIA	0x01
                                    1-  546     	MCALL	_delay_us
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  547     	.line	210, "BSP\bsp_cs1630.c"; 	}
                                    1-  548     	RETURN	
     0006 0010                      3-   39 m1      ret
                                    1-  549     ; exit point of _CS1630_Flush_Tx
                                    1-  551     ;***
                                    1-  552     ;  pBlock Stats: dbName = C
                                    1-  553     ;***
                                    1-  554     ;has an exit
                                    1-  555     ;functions called:
                                    1-  556     ;   _CS1630_write_byte
                                    1-  557     ;   _CS1630_write_byte
                                    1-  558     ;1 compiler assigned register :
                                    1-  559     ;   STK00
                                    1-  560     ;; Starting pCode block
                                    1-  561     .segment "code"; module=bsp_cs1630, function=_CS1630_Clear_All_Irq
     0000                           1-  563     _CS1630_Clear_All_Irq:
                                    1-  564     ; 2 exit points
                                    1-  565     	.line	201, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, 0x70);
     0000 2170                      1-  566     	MOVIA	0x70
     0001 00rr                      1-  567     	MOVAR	STK00
     0002 2107                      1-  568     	MOVIA	0x07
                                    1-  569     	MCALL	_CS1630_write_byte
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  570     	.line	202, "BSP\bsp_cs1630.c"; 	}
                                    1-  571     	RETURN	
     0004 0010                      3-   39 m1      ret
                                    1-  572     ; exit point of _CS1630_Clear_All_Irq
                                    1-  574     ;***
                                    1-  575     ;  pBlock Stats: dbName = C
                                    1-  576     ;***
                                    1-  577     ;has an exit
                                    1-  578     ;functions called:
                                    1-  579     ;   _CS1630_read_byte
                                    1-  580     ;   _CS1630_write_byte
                                    1-  581     ;   _CS1630_read_byte
                                    1-  582     ;   _CS1630_write_byte
                                    1-  583     ;   _CS1630_read_byte
                                    1-  584     ;   _CS1630_write_byte
                                    1-  585     ;   _CS1630_read_byte
                                    1-  586     ;   _CS1630_write_byte
                                    1-  587     ;4 compiler assigned registers:
                                    1-  588     ;   r0x1010
                                    1-  589     ;   r0x1011
                                    1-  590     ;   r0x1012
                                    1-  591     ;   STK00
                                    1-  592     ;; Starting pCode block
                                    1-  593     .segment "code"; module=bsp_cs1630, function=_CS1630_ModeSwitch
                                    1-  595     ;local variable name mapping:
     0000                           1-  598     _CS1630_ModeSwitch:
                                    1-  599     ; 2 exit points
                                    1-  600     	.line	176, "BSP\bsp_cs1630.c"; 	void CS1630_ModeSwitch(RF_ModeTypeDef mod)
                                    1-  601     	BANKSEL	r0x1010
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  602     	MOVAR	r0x1010
                                    1-  603     	.line	180, "BSP\bsp_cs1630.c"; 	tmp = CS1630_read_byte(CS1630_BANK0_CONFIG);
     0002 2100                      1-  604     	MOVIA	0x00
                                    1-  605     	MCALL	_CS1630_read_byte
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  606     	BANKSEL	r0x1011
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1-  607     	MOVAR	r0x1011
                                    1-  608     	.line	181, "BSP\bsp_cs1630.c"; 	if(mod != Rf_PRX_Mode)
                                    1-  609     	BANKSEL	r0x1010
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1-  610     	MOVR	r0x1010,W
     0008 0D03                      1-  611     	BTRSC	STATUS,2
                                    1-  612     	MGOTO	_02061_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  613     	.line	183, "BSP\bsp_cs1630.c"; 	tmp &= 0xFE;
     000A 21FE                      1-  614     	MOVIA	0xfe
                                    1-  615     	BANKSEL	r0x1011
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 10rr                      1-  616     	ANDAR	r0x1011,W
                                    1-  617     	BANKSEL	r0x1012
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1-  618     	MOVAR	r0x1012
                                    1-  619     	MGOTO	_02062_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1-  620     _02061_DS_:
                                    1-  621     	.line	187, "BSP\bsp_cs1630.c"; 	tmp |= 0x01;
     0010 2101                      1-  622     	MOVIA	0x01
                                    1-  623     	BANKSEL	r0x1011
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 11rr                      1-  624     	IORAR	r0x1011,W
                                    1-  625     	BANKSEL	r0x1012
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 00rr                      1-  626     	MOVAR	r0x1012
     0015                           1-  627     _02062_DS_:
                                    1-  628     	.line	189, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, tmp);
                                    1-  629     	BANKSEL	r0x1012
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1-  630     	MOVR	r0x1012,W
     0017 00rr                      1-  631     	MOVAR	STK00
     0018 2100                      1-  632     	MOVIA	0x00
                                    1-  633     	MCALL	_CS1630_write_byte
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  634     	.line	191, "BSP\bsp_cs1630.c"; 	if(mod == Rf_Carrier_Mode)
                                    1-  635     	BANKSEL	r0x1010
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1-  636     	MOVR	r0x1010,W
     001C 2402                      1-  637     	XORIA	0x02
     001D 0903                      1-  638     	BTRSS	STATUS,2
                                    1-  639     	MGOTO	_02065_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  640     	.line	193, "BSP\bsp_cs1630.c"; 	tmp = 0x80 | CS1630_read_byte(CS1630_BANK0_RF_SETUP);
     001F 2106                      1-  641     	MOVIA	0x06
                                    1-  642     	MCALL	_CS1630_read_byte
     0020 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  643     	BANKSEL	r0x1010
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1-  644     	MOVAR	r0x1010
     0023 1Brr                      1-  645     	BSR	r0x1010,7
                                    1-  646     	.line	194, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_RF_SETUP, tmp);
     0024 01rr                      1-  647     	MOVR	r0x1010,W
     0025 00rr                      1-  648     	MOVAR	STK00
     0026 2106                      1-  649     	MOVIA	0x06
                                    1-  650     	MCALL	_CS1630_write_byte
     0027 2rrr                      3-   65 m1      LCALL rom_address
     0028                           1-  651     _02065_DS_:
                                    1-  652     	.line	196, "BSP\bsp_cs1630.c"; 	}
                                    1-  653     	RETURN	
     0028 0010                      3-   39 m1      ret
                                    1-  654     ; exit point of _CS1630_ModeSwitch
                                    1-  656     ;***
                                    1-  657     ;  pBlock Stats: dbName = C
                                    1-  658     ;***
                                    1-  659     ;has an exit
                                    1-  660     ;functions called:
                                    1-  661     ;   _CS1630_read_byte
                                    1-  662     ;   _CS1630_wr_buffer
                                    1-  663     ;   _CS1630_read_byte
                                    1-  664     ;   _CS1630_wr_buffer
                                    1-  665     ;10 compiler assigned registers:
                                    1-  666     ;   r0x1018
                                    1-  667     ;   STK00
                                    1-  668     ;   r0x1019
                                    1-  669     ;   STK01
                                    1-  670     ;   r0x101A
                                    1-  671     ;   STK02
                                    1-  672     ;   r0x101B
                                    1-  673     ;   STK03
                                    1-  674     ;   r0x101C
                                    1-  675     ;   r0x101D
                                    1-  676     ;; Starting pCode block
                                    1-  677     .segment "code"; module=bsp_cs1630, function=_CS1630_SendPack
                                    1-  679     ;local variable name mapping:
     0000                           1-  684     _CS1630_SendPack:
                                    1-  685     ; 2 exit points
                                    1-  686     	.line	165, "BSP\bsp_cs1630.c"; 	void CS1630_SendPack(unsigned char cmd, unsigned char* buf, unsigned char len)
                                    1-  687     	BANKSEL	r0x1018
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  688     	MOVAR	r0x1018
     0002 01rr                      1-  689     	MOVR	STK00,W
                                    1-  690     	BANKSEL	r0x1019
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  691     	MOVAR	r0x1019
     0005 01rr                      1-  692     	MOVR	STK01,W
                                    1-  693     	BANKSEL	r0x101A
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  694     	MOVAR	r0x101A
     0008 01rr                      1-  695     	MOVR	STK02,W
                                    1-  696     	BANKSEL	r0x101B
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1-  697     	MOVAR	r0x101B
     000B 01rr                      1-  698     	MOVR	STK03,W
                                    1-  699     	BANKSEL	r0x101C
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1-  700     	MOVAR	r0x101C
                                    1-  701     	.line	169, "BSP\bsp_cs1630.c"; 	sta = CS1630_read_byte(CS1630_BANK0_STATUS);
     000E 2107                      1-  702     	MOVIA	0x07
                                    1-  703     	MCALL	_CS1630_read_byte
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  704     	BANKSEL	r0x101D
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 00rr                      1-  705     	MOVAR	r0x101D
                                    1-  706     	.line	170, "BSP\bsp_cs1630.c"; 	if(!(sta&RF_STATUS_TX_FULL))
     0012 0Crr                      1-  707     	BTRSC	r0x101D,0
                                    1-  708     	MGOTO	_02055_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  709     	.line	172, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(cmd, buf, len);
                                    1-  710     	BANKSEL	r0x101C
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 01rr                      1-  711     	MOVR	r0x101C,W
     0016 00rr                      1-  712     	MOVAR	STK03
                                    1-  713     	BANKSEL	r0x101B
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 01rr                      1-  714     	MOVR	r0x101B,W
     0019 00rr                      1-  715     	MOVAR	STK02
                                    1-  716     	BANKSEL	r0x101A
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 01rr                      1-  717     	MOVR	r0x101A,W
     001C 00rr                      1-  718     	MOVAR	STK01
                                    1-  719     	BANKSEL	r0x1019
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 01rr                      1-  720     	MOVR	r0x1019,W
     001F 00rr                      1-  721     	MOVAR	STK00
                                    1-  722     	BANKSEL	r0x1018
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1-  723     	MOVR	r0x1018,W
                                    1-  724     	MCALL	_CS1630_wr_buffer
     0022 2rrr                      3-   65 m1      LCALL rom_address
     0023                           1-  725     _02055_DS_:
                                    1-  726     	.line	174, "BSP\bsp_cs1630.c"; 	}
                                    1-  727     	RETURN	
     0023 0010                      3-   39 m1      ret
                                    1-  728     ; exit point of _CS1630_SendPack
                                    1-  730     ;***
                                    1-  731     ;  pBlock Stats: dbName = C
                                    1-  732     ;***
                                    1-  733     ;has an exit
                                    1-  734     ;functions called:
                                    1-  735     ;   _CS1630_read_byte
                                    1-  736     ;   _CS1630_wr_cmd
                                    1-  737     ;   _CS1630_wr_cmd
                                    1-  738     ;   _CS1630_read_byte
                                    1-  739     ;   _CS1630_wr_cmd
                                    1-  740     ;   _CS1630_wr_cmd
                                    1-  741     ;3 compiler assigned registers:
                                    1-  742     ;   r0x1020
                                    1-  743     ;   r0x1021
                                    1-  744     ;   STK00
                                    1-  745     ;; Starting pCode block
                                    1-  746     .segment "code"; module=bsp_cs1630, function=_CS1630_Bank_Switch
                                    1-  748     ;local variable name mapping:
     0000                           1-  751     _CS1630_Bank_Switch:
                                    1-  752     ; 2 exit points
                                    1-  753     	.line	142, "BSP\bsp_cs1630.c"; 	void CS1630_Bank_Switch(unsigned char bank)
                                    1-  754     	BANKSEL	r0x1020
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  755     	MOVAR	r0x1020
                                    1-  756     	.line	146, "BSP\bsp_cs1630.c"; 	sta = CS1630_read_byte(CS1630_BANK0_STATUS);
     0002 2107                      1-  757     	MOVIA	0x07
                                    1-  758     	MCALL	_CS1630_read_byte
     0003 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  759     	BANKSEL	r0x1021
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 00rr                      1-  760     	MOVAR	r0x1021
                                    1-  761     	.line	148, "BSP\bsp_cs1630.c"; 	if(bank != RF_Bank0) // 切1
                                    1-  762     	BANKSEL	r0x1020
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1-  763     	MOVR	r0x1020,W
     0008 0D03                      1-  764     	BTRSC	STATUS,2
                                    1-  765     	MGOTO	_02046_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  766     	.line	152, "BSP\bsp_cs1630.c"; 	CS1630_wr_cmd(RF_ACTIVATE, RF_ACTIVATE_DATA);
     000A 2153                      1-  767     	MOVIA	0x53
     000B 00rr                      1-  768     	MOVAR	STK00
     000C 2150                      1-  769     	MOVIA	0x50
                                    1-  770     	MCALL	_CS1630_wr_cmd
     000D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  771     	MGOTO	_02048_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
     000F                           1-  772     _02046_DS_:
                                    1-  773     	.line	157, "BSP\bsp_cs1630.c"; 	if(sta & RF_BANK1) // 切0
                                    1-  774     	BANKSEL	r0x1021
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 0Brr                      1-  775     	BTRSS	r0x1021,7
                                    1-  776     	MGOTO	_02048_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  777     	.line	159, "BSP\bsp_cs1630.c"; 	CS1630_wr_cmd(RF_ACTIVATE, RF_ACTIVATE_DATA);
     0012 2153                      1-  778     	MOVIA	0x53
     0013 00rr                      1-  779     	MOVAR	STK00
     0014 2150                      1-  780     	MOVIA	0x50
                                    1-  781     	MCALL	_CS1630_wr_cmd
     0015 2rrr                      3-   65 m1      LCALL rom_address
     0016                           1-  782     _02048_DS_:
                                    1-  783     	.line	162, "BSP\bsp_cs1630.c"; 	}
                                    1-  784     	RETURN	
     0016 0010                      3-   39 m1      ret
                                    1-  785     ; exit point of _CS1630_Bank_Switch
                                    1-  787     ;***
                                    1-  788     ;  pBlock Stats: dbName = C
                                    1-  789     ;***
                                    1-  790     ;has an exit
                                    1-  791     ;functions called:
                                    1-  792     ;   _SPI_SendByte
                                    1-  793     ;   _SPI_SendByte
                                    1-  794     ;   _delay_us
                                    1-  795     ;   _SPI_SendByte
                                    1-  796     ;   _SPI_SendByte
                                    1-  797     ;   _delay_us
                                    1-  798     ;3 compiler assigned registers:
                                    1-  799     ;   r0x101E
                                    1-  800     ;   STK00
                                    1-  801     ;   r0x101F
                                    1-  802     ;; Starting pCode block
                                    1-  803     .segment "code"; module=bsp_cs1630, function=_CS1630_wr_cmd
                                    1-  805     ;local variable name mapping:
     0000                           1-  808     _CS1630_wr_cmd:
                                    1-  809     ; 2 exit points
                                    1-  810     	.line	133, "BSP\bsp_cs1630.c"; 	void CS1630_wr_cmd(unsigned char cmd,unsigned char D)
                                    1-  811     	BANKSEL	r0x101E
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  812     	MOVAR	r0x101E
     0002 01rr                      1-  813     	MOVR	STK00,W
                                    1-  814     	BANKSEL	r0x101F
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  815     	MOVAR	r0x101F
                                    1-  816     	.line	135, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0005 1Crr                      1-  817     	BCR	_PORTAbits,1
                                    1-  818     	.line	136, "BSP\bsp_cs1630.c"; 	SPI_SendByte(cmd);
                                    1-  819     	BANKSEL	r0x101E
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 01rr                      1-  820     	MOVR	r0x101E,W
                                    1-  821     	MCALL	_SPI_SendByte
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  822     	.line	137, "BSP\bsp_cs1630.c"; 	SPI_SendByte(D);
                                    1-  823     	BANKSEL	r0x101F
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 01rr                      1-  824     	MOVR	r0x101F,W
                                    1-  825     	MCALL	_SPI_SendByte
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  826     	.line	138, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     000C 18rr                      1-  827     	BSR	_PORTAbits,1
     000D 2101                      1-  828     	MOVIA	0x01
                                    1-  829     	MCALL	_delay_us
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  830     	.line	139, "BSP\bsp_cs1630.c"; 	}
                                    1-  831     	RETURN	
     000F 0010                      3-   39 m1      ret
                                    1-  832     ; exit point of _CS1630_wr_cmd
                                    1-  834     ;***
                                    1-  835     ;  pBlock Stats: dbName = C
                                    1-  836     ;***
                                    1-  837     ;has an exit
                                    1-  838     ;functions called:
                                    1-  839     ;   _SPI_SendByte
                                    1-  840     ;   __gptrget1
                                    1-  841     ;   _SPI_SendByte
                                    1-  842     ;   _delay_us
                                    1-  843     ;   _SPI_SendByte
                                    1-  844     ;   __gptrget1
                                    1-  845     ;   _SPI_SendByte
                                    1-  846     ;   _delay_us
                                    1-  847     ;9 compiler assigned registers:
                                    1-  848     ;   r0x1013
                                    1-  849     ;   STK00
                                    1-  850     ;   r0x1014
                                    1-  851     ;   STK01
                                    1-  852     ;   r0x1015
                                    1-  853     ;   STK02
                                    1-  854     ;   r0x1016
                                    1-  855     ;   STK03
                                    1-  856     ;   r0x1017
                                    1-  857     ;; Starting pCode block
                                    1-  858     .segment "code"; module=bsp_cs1630, function=_CS1630_wr_buffer
                                    1-  860     ;local variable name mapping:
     0000                           1-  862     _CS1630_wr_buffer:
                                    1-  863     ; 2 exit points
                                    1-  864     	.line	119, "BSP\bsp_cs1630.c"; 	void CS1630_wr_buffer(unsigned char addr, unsigned char* buf,unsigned char len)
                                    1-  865     	BANKSEL	r0x1013
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  866     	MOVAR	r0x1013
     0002 01rr                      1-  867     	MOVR	STK00,W
                                    1-  868     	BANKSEL	r0x1014
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  869     	MOVAR	r0x1014
     0005 01rr                      1-  870     	MOVR	STK01,W
                                    1-  871     	BANKSEL	r0x1015
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  872     	MOVAR	r0x1015
     0008 01rr                      1-  873     	MOVR	STK02,W
                                    1-  874     	BANKSEL	r0x1016
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1-  875     	MOVAR	r0x1016
     000B 01rr                      1-  876     	MOVR	STK03,W
                                    1-  877     	BANKSEL	r0x1017
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1-  878     	MOVAR	r0x1017
                                    1-  879     	.line	122, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     000E 1Crr                      1-  880     	BCR	_PORTAbits,1
                                    1-  881     	.line	123, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_W_REGISTER|addr);
                                    1-  882     	BANKSEL	r0x1013
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 1Arr                      1-  883     	BSR	r0x1013,5
     0011 01rr                      1-  884     	MOVR	r0x1013,W
                                    1-  885     	MCALL	_SPI_SendByte
     0012 2rrr                      3-   65 m1      LCALL rom_address
     0013                           1-  886     _02029_DS_:
                                    1-  887     	.line	124, "BSP\bsp_cs1630.c"; 	while(len--)
                                    1-  888     	BANKSEL	r0x1017
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 01rr                      1-  889     	MOVR	r0x1017,W
                                    1-  890     	BANKSEL	r0x1013
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 00rr                      1-  891     	MOVAR	r0x1013
                                    1-  892     	BANKSEL	r0x1017
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 06rr                      1-  893     	DECR	r0x1017,F
                                    1-  894     	BANKSEL	r0x1013
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 01rr                      1-  895     	MOVR	r0x1013,W
     001B 0D03                      1-  896     	BTRSC	STATUS,2
                                    1-  897     	MGOTO	_02032_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  898     	.line	126, "BSP\bsp_cs1630.c"; 	SPI_SendByte(*buf++);
                                    1-  899     	BANKSEL	r0x1016
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 01rr                      1-  900     	MOVR	r0x1016,W
     001F 00rr                      1-  901     	MOVAR	STK01
                                    1-  902     	BANKSEL	r0x1015
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 01rr                      1-  903     	MOVR	r0x1015,W
     0022 00rr                      1-  904     	MOVAR	STK00
                                    1-  905     	BANKSEL	r0x1014
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 01rr                      1-  906     	MOVR	r0x1014,W
                                    1-  907     	MCALL	__gptrget1
     0025 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  908     	BANKSEL	r0x1013
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 00rr                      1-  909     	MOVAR	r0x1013
                                    1-  910     	BANKSEL	r0x1016
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 05rr                      1-  911     	INCR	r0x1016,F
     002A 0903                      1-  912     	BTRSS	STATUS,2
                                    1-  913     	MGOTO	_00001_DS_
     002B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  914     	BANKSEL	r0x1015
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 05rr                      1-  915     	INCR	r0x1015,F
     002E                           1-  916     _00001_DS_:
     002E 0903                      1-  917     	BTRSS	STATUS,2
                                    1-  918     	MGOTO	_00002_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  919     	BANKSEL	r0x1014
     0030 rrrr                      3-  109 m1      .banksel ram_address
     0031 05rr                      1-  920     	INCR	r0x1014,F
     0032                           1-  921     _00002_DS_:
                                    1-  922     	BANKSEL	r0x1013
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1-  923     	MOVR	r0x1013,W
                                    1-  924     	MCALL	_SPI_SendByte
     0034 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  925     	MGOTO	_02029_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
     0036                           1-  926     _02032_DS_:
                                    1-  927     	.line	128, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0036 18rr                      1-  928     	BSR	_PORTAbits,1
     0037 2101                      1-  929     	MOVIA	0x01
                                    1-  930     	MCALL	_delay_us
     0038 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  931     	.line	130, "BSP\bsp_cs1630.c"; 	}
                                    1-  932     	RETURN	
     0039 0010                      3-   39 m1      ret
                                    1-  933     ; exit point of _CS1630_wr_buffer
                                    1-  935     ;***
                                    1-  936     ;  pBlock Stats: dbName = C
                                    1-  937     ;***
                                    1-  938     ;has an exit
                                    1-  939     ;functions called:
                                    1-  940     ;   _SPI_SendByte
                                    1-  941     ;   _SPI_SendByte
                                    1-  942     ;   _delay_us
                                    1-  943     ;   _SPI_SendByte
                                    1-  944     ;   _SPI_SendByte
                                    1-  945     ;   _delay_us
                                    1-  946     ;3 compiler assigned registers:
                                    1-  947     ;   r0x100C
                                    1-  948     ;   STK00
                                    1-  949     ;   r0x100D
                                    1-  950     ;; Starting pCode block
                                    1-  951     .segment "code"; module=bsp_cs1630, function=_CS1630_write_byte
                                    1-  953     ;local variable name mapping:
     0000                           1-  956     _CS1630_write_byte:
                                    1-  957     ; 2 exit points
                                    1-  958     	.line	109, "BSP\bsp_cs1630.c"; 	void CS1630_write_byte(unsigned char addr,unsigned char D)
                                    1-  959     	BANKSEL	r0x100C
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  960     	MOVAR	r0x100C
     0002 01rr                      1-  961     	MOVR	STK00,W
                                    1-  962     	BANKSEL	r0x100D
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  963     	MOVAR	r0x100D
                                    1-  964     	.line	112, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0005 1Crr                      1-  965     	BCR	_PORTAbits,1
                                    1-  966     	.line	113, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_W_REGISTER|addr);
                                    1-  967     	BANKSEL	r0x100C
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 1Arr                      1-  968     	BSR	r0x100C,5
     0008 01rr                      1-  969     	MOVR	r0x100C,W
                                    1-  970     	MCALL	_SPI_SendByte
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  971     	.line	114, "BSP\bsp_cs1630.c"; 	SPI_SendByte(D);
                                    1-  972     	BANKSEL	r0x100D
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 01rr                      1-  973     	MOVR	r0x100D,W
                                    1-  974     	MCALL	_SPI_SendByte
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  975     	.line	115, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     000D 18rr                      1-  976     	BSR	_PORTAbits,1
     000E 2101                      1-  977     	MOVIA	0x01
                                    1-  978     	MCALL	_delay_us
     000F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  979     	.line	117, "BSP\bsp_cs1630.c"; 	}
                                    1-  980     	RETURN	
     0010 0010                      3-   39 m1      ret
                                    1-  981     ; exit point of _CS1630_write_byte
                                    1-  983     ;***
                                    1-  984     ;  pBlock Stats: dbName = C
                                    1-  985     ;***
                                    1-  986     ;has an exit
                                    1-  987     ;functions called:
                                    1-  988     ;   _SPI_SendByte
                                    1-  989     ;   _SPI_ReadByte
                                    1-  990     ;   _delay_us
                                    1-  991     ;   _SPI_SendByte
                                    1-  992     ;   _SPI_ReadByte
                                    1-  993     ;   _delay_us
                                    1-  994     ;1 compiler assigned register :
                                    1-  995     ;   r0x1009
                                    1-  996     ;; Starting pCode block
                                    1-  997     .segment "code"; module=bsp_cs1630, function=_CS1630_read_byte
                                    1-  999     ;local variable name mapping:
     0000                           1- 1002     _CS1630_read_byte:
                                    1- 1003     ; 2 exit points
                                    1- 1004     	.line	96, "BSP\bsp_cs1630.c"; 	unsigned char CS1630_read_byte(unsigned char addr)
                                    1- 1005     	BANKSEL	r0x1009
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1006     	MOVAR	r0x1009
                                    1- 1007     	.line	100, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     0002 1Crr                      1- 1008     	BCR	_PORTAbits,1
                                    1- 1009     	.line	101, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_R_REGISTER|addr);
     0003 01rr                      1- 1010     	MOVR	r0x1009,W
                                    1- 1011     	MCALL	_SPI_SendByte
     0004 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1012     	.line	102, "BSP\bsp_cs1630.c"; 	rxdata = SPI_ReadByte();
                                    1- 1013     	MCALL	_SPI_ReadByte
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1014     	BANKSEL	r0x1009
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1015     	MOVAR	r0x1009
                                    1- 1016     	.line	103, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0008 18rr                      1- 1017     	BSR	_PORTAbits,1
     0009 2101                      1- 1018     	MOVIA	0x01
                                    1- 1019     	MCALL	_delay_us
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1020     	.line	105, "BSP\bsp_cs1630.c"; 	return(rxdata);
                                    1- 1021     	BANKSEL	r0x1009
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 1022     	MOVR	r0x1009,W
                                    1- 1023     	.line	106, "BSP\bsp_cs1630.c"; 	}
                                    1- 1024     	RETURN	
     000D 0010                      3-   39 m1      ret
                                    1- 1025     ; exit point of _CS1630_read_byte
                                    1- 1027     ;***
                                    1- 1028     ;  pBlock Stats: dbName = C
                                    1- 1029     ;***
                                    1- 1030     ;has an exit
                                    1- 1031     ;functions called:
                                    1- 1032     ;   _SPI_SendByte
                                    1- 1033     ;   _SPI_ReadByte
                                    1- 1034     ;   __gptrput1
                                    1- 1035     ;   _delay_us
                                    1- 1036     ;   _delay_us
                                    1- 1037     ;   _SPI_SendByte
                                    1- 1038     ;   _SPI_ReadByte
                                    1- 1039     ;   __gptrput1
                                    1- 1040     ;   _delay_us
                                    1- 1041     ;   _delay_us
                                    1- 1042     ;9 compiler assigned registers:
                                    1- 1043     ;   r0x1022
                                    1- 1044     ;   STK00
                                    1- 1045     ;   r0x1023
                                    1- 1046     ;   STK01
                                    1- 1047     ;   r0x1024
                                    1- 1048     ;   STK02
                                    1- 1049     ;   r0x1025
                                    1- 1050     ;   STK03
                                    1- 1051     ;   r0x1026
                                    1- 1052     ;; Starting pCode block
                                    1- 1053     .segment "code"; module=bsp_cs1630, function=_CS1630_read_buffer
                                    1- 1055     ;local variable name mapping:
     0000                           1- 1057     _CS1630_read_buffer:
                                    1- 1058     ; 2 exit points
                                    1- 1059     	.line	80, "BSP\bsp_cs1630.c"; 	void CS1630_read_buffer(unsigned char addr, unsigned char* buf, unsigned char len)
                                    1- 1060     	BANKSEL	r0x1022
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1061     	MOVAR	r0x1022
     0002 01rr                      1- 1062     	MOVR	STK00,W
                                    1- 1063     	BANKSEL	r0x1023
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1064     	MOVAR	r0x1023
     0005 01rr                      1- 1065     	MOVR	STK01,W
                                    1- 1066     	BANKSEL	r0x1024
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1067     	MOVAR	r0x1024
     0008 01rr                      1- 1068     	MOVR	STK02,W
                                    1- 1069     	BANKSEL	r0x1025
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 1070     	MOVAR	r0x1025
     000B 01rr                      1- 1071     	MOVR	STK03,W
                                    1- 1072     	BANKSEL	r0x1026
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 00rr                      1- 1073     	MOVAR	r0x1026
                                    1- 1074     	.line	83, "BSP\bsp_cs1630.c"; 	CS1630_CSN_LOW;
     000E 1Crr                      1- 1075     	BCR	_PORTAbits,1
                                    1- 1076     	.line	84, "BSP\bsp_cs1630.c"; 	SPI_SendByte(RF_R_REGISTER|addr);
                                    1- 1077     	BANKSEL	r0x1022
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 01rr                      1- 1078     	MOVR	r0x1022,W
                                    1- 1079     	MCALL	_SPI_SendByte
     0011 2rrr                      3-   65 m1      LCALL rom_address
     0012                           1- 1080     _02014_DS_:
                                    1- 1081     	.line	86, "BSP\bsp_cs1630.c"; 	while(len--)
                                    1- 1082     	BANKSEL	r0x1026
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 01rr                      1- 1083     	MOVR	r0x1026,W
                                    1- 1084     	BANKSEL	r0x1022
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1085     	MOVAR	r0x1022
                                    1- 1086     	BANKSEL	r0x1026
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 06rr                      1- 1087     	DECR	r0x1026,F
                                    1- 1088     	BANKSEL	r0x1022
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 01rr                      1- 1089     	MOVR	r0x1022,W
     001A 0D03                      1- 1090     	BTRSC	STATUS,2
                                    1- 1091     	MGOTO	_02016_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1092     	.line	88, "BSP\bsp_cs1630.c"; 	*buf++ = SPI_ReadByte();
                                    1- 1093     	MCALL	_SPI_ReadByte
     001C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1094     	BANKSEL	r0x1022
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 00rr                      1- 1095     	MOVAR	r0x1022
     001F 01rr                      1- 1096     	MOVR	r0x1022,W
     0020 00rr                      1- 1097     	MOVAR	STK02
                                    1- 1098     	BANKSEL	r0x1025
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1099     	MOVR	r0x1025,W
     0023 00rr                      1- 1100     	MOVAR	STK01
                                    1- 1101     	BANKSEL	r0x1024
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 01rr                      1- 1102     	MOVR	r0x1024,W
     0026 00rr                      1- 1103     	MOVAR	STK00
                                    1- 1104     	BANKSEL	r0x1023
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 1105     	MOVR	r0x1023,W
                                    1- 1106     	MCALL	__gptrput1
     0029 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1107     	BANKSEL	r0x1025
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 05rr                      1- 1108     	INCR	r0x1025,F
     002C 0903                      1- 1109     	BTRSS	STATUS,2
                                    1- 1110     	MGOTO	_00003_DS_
     002D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1111     	BANKSEL	r0x1024
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 05rr                      1- 1112     	INCR	r0x1024,F
     0030                           1- 1113     _00003_DS_:
     0030 0903                      1- 1114     	BTRSS	STATUS,2
                                    1- 1115     	MGOTO	_00004_DS_
     0031 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1116     	BANKSEL	r0x1023
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 05rr                      1- 1117     	INCR	r0x1023,F
     0034                           1- 1118     _00004_DS_:
                                    1- 1119     	MGOTO	_02014_DS_
     0034 3rrr                      3-   62 m1      LGOTO rom_address
     0035                           1- 1120     _02016_DS_:
                                    1- 1121     	.line	91, "BSP\bsp_cs1630.c"; 	delay_us(1);
     0035 2101                      1- 1122     	MOVIA	0x01
                                    1- 1123     	MCALL	_delay_us
     0036 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1124     	.line	92, "BSP\bsp_cs1630.c"; 	CS1630_CSN_HIGH;
     0037 18rr                      1- 1125     	BSR	_PORTAbits,1
     0038 2101                      1- 1126     	MOVIA	0x01
                                    1- 1127     	MCALL	_delay_us
     0039 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1128     	.line	93, "BSP\bsp_cs1630.c"; 	}
                                    1- 1129     	RETURN	
     003A 0010                      3-   39 m1      ret
                                    1- 1130     ; exit point of _CS1630_read_buffer
                                    1- 1132     ;***
                                    1- 1133     ;  pBlock Stats: dbName = C
                                    1- 1134     ;***
                                    1- 1135     ;has an exit
                                    1- 1136     ;functions called:
                                    1- 1137     ;   _RF_softSPI_Init
                                    1- 1138     ;   _CS1630_CE_Low
                                    1- 1139     ;   _CS1630_write_byte
                                    1- 1140     ;   _delay_ms
                                    1- 1141     ;   _CS1630_Soft_Rst
                                    1- 1142     ;   _CS1630_CE_High
                                    1- 1143     ;   _delay_us
                                    1- 1144     ;   _CS1630_CE_Low
                                    1- 1145     ;   _CS1630_read_byte
                                    1- 1146     ;   _CS1630_Bank_Switch
                                    1- 1147     ;   _CS1630_read_byte
                                    1- 1148     ;   _CS1630_read_buffer
                                    1- 1149     ;   _CS1630_wr_buffer
                                    1- 1150     ;   _CS1630_write_byte
                                    1- 1151     ;   _CS1630_Bank_Switch
                                    1- 1152     ;   _CS1630_write_byte
                                    1- 1153     ;   _get_rolling_code_0
                                    1- 1154     ;   _get_rolling_code_1
                                    1- 1155     ;   _get_rolling_code_2
                                    1- 1156     ;   _get_rolling_code_3
                                    1- 1157     ;   _CS1630_wr_buffer
                                    1- 1158     ;   _CS1630_Clear_All_Irq
                                    1- 1159     ;   _CS1630_Flush_Tx
                                    1- 1160     ;   _RF_softSPI_Init
                                    1- 1161     ;   _CS1630_CE_Low
                                    1- 1162     ;   _CS1630_write_byte
                                    1- 1163     ;   _delay_ms
                                    1- 1164     ;   _CS1630_Soft_Rst
                                    1- 1165     ;   _CS1630_CE_High
                                    1- 1166     ;   _delay_us
                                    1- 1167     ;   _CS1630_CE_Low
                                    1- 1168     ;   _CS1630_read_byte
                                    1- 1169     ;   _CS1630_Bank_Switch
                                    1- 1170     ;   _CS1630_read_byte
                                    1- 1171     ;   _CS1630_read_buffer
                                    1- 1172     ;   _CS1630_wr_buffer
                                    1- 1173     ;   _CS1630_write_byte
                                    1- 1174     ;   _CS1630_Bank_Switch
                                    1- 1175     ;   _CS1630_write_byte
                                    1- 1176     ;   _get_rolling_code_0
                                    1- 1177     ;   _get_rolling_code_1
                                    1- 1178     ;   _get_rolling_code_2
                                    1- 1179     ;   _get_rolling_code_3
                                    1- 1180     ;   _CS1630_wr_buffer
                                    1- 1181     ;   _CS1630_Clear_All_Irq
                                    1- 1182     ;   _CS1630_Flush_Tx
                                    1- 1183     ;8 compiler assigned registers:
                                    1- 1184     ;   STK00
                                    1- 1185     ;   r0x102A
                                    1- 1186     ;   r0x102B
                                    1- 1187     ;   r0x102C
                                    1- 1188     ;   r0x102D
                                    1- 1189     ;   STK03
                                    1- 1190     ;   STK02
                                    1- 1191     ;   STK01
                                    1- 1192     ;; Starting pCode block
                                    1- 1193     .segment "code"; module=bsp_cs1630, function=_CS1630_Init
                                    1- 1195     ;local variable name mapping:
     0000                           1- 1198     _CS1630_Init:
                                    1- 1199     ; 2 exit points
                                    1- 1200     	.line	27, "BSP\bsp_cs1630.c"; 	RF_softSPI_Init();
                                    1- 1201     	MCALL	_RF_softSPI_Init
     0000 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1202     	.line	31, "BSP\bsp_cs1630.c"; 	CS1630_CE_Low();
                                    1- 1203     	MCALL	_CS1630_CE_Low
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1204     	.line	32, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x02); // 先断一下电，然后再等待一下在开始等待校准
     0002 2102                      1- 1205     	MOVIA	0x02
     0003 00rr                      1- 1206     	MOVAR	STK00
     0004 2100                      1- 1207     	MOVIA	0x00
                                    1- 1208     	MCALL	_CS1630_write_byte
     0005 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1209     	.line	33, "BSP\bsp_cs1630.c"; 	delay_ms(4);
     0006 2104                      1- 1210     	MOVIA	0x04
                                    1- 1211     	MCALL	_delay_ms
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1212     	.line	35, "BSP\bsp_cs1630.c"; 	CS1630_Soft_Rst();
                                    1- 1213     	MCALL	_CS1630_Soft_Rst
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1214     	.line	37, "BSP\bsp_cs1630.c"; 	CS1630_CE_High();
                                    1- 1215     	MCALL	_CS1630_CE_High
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1216     	.line	38, "BSP\bsp_cs1630.c"; 	delay_us(16);
     000A 2110                      1- 1217     	MOVIA	0x10
                                    1- 1218     	MCALL	_delay_us
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1219     	.line	39, "BSP\bsp_cs1630.c"; 	CS1630_CE_Low();
                                    1- 1220     	MCALL	_CS1630_CE_Low
     000C 2rrr                      3-   65 m1      LCALL rom_address
     000D                           1- 1221     _02009_DS_:
                                    1- 1222     	.line	41, "BSP\bsp_cs1630.c"; 	while((CS1630_read_byte(CS1630_BANK0_SETUP_VALUE) & 0x01) == 0x00); // 等待校准结束
     000D 211E                      1- 1223     	MOVIA	0x1e
                                    1- 1224     	MCALL	_CS1630_read_byte
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1225     	BANKSEL	r0x102A
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 00rr                      1- 1226     	MOVAR	r0x102A
     0011 08rr                      1- 1227     	BTRSS	r0x102A,0
                                    1- 1228     	MGOTO	_02009_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1229     	.line	44, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank1);
     0013 2101                      1- 1230     	MOVIA	0x01
                                    1- 1231     	MCALL	_CS1630_Bank_Switch
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1232     	.line	46, "BSP\bsp_cs1630.c"; 	regval = CS1630_read_byte(CS1630_BANK1_DAC_RANGE); // 记录校准值
     0015 2111                      1- 1233     	MOVIA	0x11
                                    1- 1234     	MCALL	_CS1630_read_byte
     0016 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1235     	BANKSEL	r0x102A
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 00rr                      1- 1236     	MOVAR	r0x102A
                                    1- 1237     	.line	47, "BSP\bsp_cs1630.c"; 	CS1630_read_buffer(CS1630_BANK1_PLL_CTL0, temp, 4);
     0019 21rr                      1- 1238     	MOVIA	(_CS1630_Init_temp_65536_65 + 0)
                                    1- 1239     	BANKSEL	r0x102B
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1240     	MOVAR	r0x102B
                                    1- 1241     	BANKSEL	r0x102C
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 02rr                      1- 1242     	CLRR	r0x102C
                                    1- 1243     	BANKSEL	r0x102D
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 02rr                      1- 1244     	CLRR	r0x102D
     0020 2104                      1- 1245     	MOVIA	0x04
     0021 00rr                      1- 1246     	MOVAR	STK03
                                    1- 1247     	BANKSEL	r0x102B
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 01rr                      1- 1248     	MOVR	r0x102B,W
     0024 00rr                      1- 1249     	MOVAR	STK02
                                    1- 1250     	BANKSEL	r0x102C
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 01rr                      1- 1251     	MOVR	r0x102C,W
     0027 00rr                      1- 1252     	MOVAR	STK01
                                    1- 1253     	BANKSEL	r0x102D
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 01rr                      1- 1254     	MOVR	r0x102D,W
     002A 00rr                      1- 1255     	MOVAR	STK00
     002B 2101                      1- 1256     	MOVIA	0x01
                                    1- 1257     	MCALL	_CS1630_read_buffer
     002C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1258     	.line	48, "BSP\bsp_cs1630.c"; 	temp[0] = 0x07;
     002D 2107                      1- 1259     	MOVIA	0x07
                                    1- 1260     	BANKSEL	_CS1630_Init_temp_65536_65
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1261     	MOVAR	(_CS1630_Init_temp_65536_65 + 0)
                                    1- 1262     	.line	49, "BSP\bsp_cs1630.c"; 	temp[1] = 0x80;
     0030 2180                      1- 1263     	MOVIA	0x80
     0031 00rr                      1- 1264     	MOVAR	(_CS1630_Init_temp_65536_65 + 1)
                                    1- 1265     	.line	50, "BSP\bsp_cs1630.c"; 	temp[2] |= (BIT6+BIT3);
     0032 01rr                      1- 1266     	MOVR	(_CS1630_Init_temp_65536_65 + 2),W
                                    1- 1267     	BANKSEL	r0x102B
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 00rr                      1- 1268     	MOVAR	r0x102B
     0035 2148                      1- 1269     	MOVIA	0x48
     0036 11rr                      1- 1270     	IORAR	r0x102B,F
     0037 01rr                      1- 1271     	MOVR	r0x102B,W
                                    1- 1272     	BANKSEL	_CS1630_Init_temp_65536_65
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 00rr                      1- 1273     	MOVAR	(_CS1630_Init_temp_65536_65 + 2)
                                    1- 1274     	.line	51, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(CS1630_BANK1_PLL_CTL0, temp, 4); // 配置Bank1 的 PLL_CTL0为07  80  48
     003A 21rr                      1- 1275     	MOVIA	(_CS1630_Init_temp_65536_65 + 0)
                                    1- 1276     	BANKSEL	r0x102B
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 00rr                      1- 1277     	MOVAR	r0x102B
                                    1- 1278     	BANKSEL	r0x102C
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 02rr                      1- 1279     	CLRR	r0x102C
                                    1- 1280     	BANKSEL	r0x102D
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 02rr                      1- 1281     	CLRR	r0x102D
     0041 2104                      1- 1282     	MOVIA	0x04
     0042 00rr                      1- 1283     	MOVAR	STK03
                                    1- 1284     	BANKSEL	r0x102B
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 1285     	MOVR	r0x102B,W
     0045 00rr                      1- 1286     	MOVAR	STK02
                                    1- 1287     	BANKSEL	r0x102C
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 1288     	MOVR	r0x102C,W
     0048 00rr                      1- 1289     	MOVAR	STK01
                                    1- 1290     	BANKSEL	r0x102D
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 01rr                      1- 1291     	MOVR	r0x102D,W
     004B 00rr                      1- 1292     	MOVAR	STK00
     004C 2101                      1- 1293     	MOVIA	0x01
                                    1- 1294     	MCALL	_CS1630_wr_buffer
     004D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1295     	.line	53, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK1_DAC_RANGE, regval); // 恢复校准值，后续休眠唤醒后不用再次校准
                                    1- 1296     	BANKSEL	r0x102A
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 01rr                      1- 1297     	MOVR	r0x102A,W
     0050 00rr                      1- 1298     	MOVAR	STK00
     0051 2111                      1- 1299     	MOVIA	0x11
                                    1- 1300     	MCALL	_CS1630_write_byte
     0052 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1301     	.line	54, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank0);
     0053 2100                      1- 1302     	MOVIA	0x00
                                    1- 1303     	MCALL	_CS1630_Bank_Switch
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1304     	.line	56, "BSP\bsp_cs1630.c"; 	CS1630_write_byte(CS1630_BANK0_SETUP_VALUE, 0x01);
     0055 2101                      1- 1305     	MOVIA	0x01
     0056 00rr                      1- 1306     	MOVAR	STK00
     0057 211E                      1- 1307     	MOVIA	0x1e
                                    1- 1308     	MCALL	_CS1630_write_byte
     0058 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1309     	.line	61, "BSP\bsp_cs1630.c"; 	temp[0] = 0x34;
     0059 2134                      1- 1310     	MOVIA	0x34
                                    1- 1311     	BANKSEL	_CS1630_Init_temp_65536_65
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1312     	MOVAR	(_CS1630_Init_temp_65536_65 + 0)
                                    1- 1313     	.line	62, "BSP\bsp_cs1630.c"; 	temp[1] = get_rolling_code_0()+1;
                                    1- 1314     	MCALL	_get_rolling_code_0
     005C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1315     	BANKSEL	r0x102A
     005D rrrr                      3-  109 m1      .banksel ram_address
     005E 00rr                      1- 1316     	MOVAR	r0x102A
     005F 05rr                      1- 1317     	INCR	r0x102A,F
     0060 01rr                      1- 1318     	MOVR	r0x102A,W
                                    1- 1319     	BANKSEL	_CS1630_Init_temp_65536_65
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 00rr                      1- 1320     	MOVAR	(_CS1630_Init_temp_65536_65 + 1)
                                    1- 1321     	.line	63, "BSP\bsp_cs1630.c"; 	temp[2] = get_rolling_code_1()+1;
                                    1- 1322     	MCALL	_get_rolling_code_1
     0063 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1323     	BANKSEL	r0x102A
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 00rr                      1- 1324     	MOVAR	r0x102A
     0066 05rr                      1- 1325     	INCR	r0x102A,F
     0067 01rr                      1- 1326     	MOVR	r0x102A,W
                                    1- 1327     	BANKSEL	_CS1630_Init_temp_65536_65
     0068 rrrr                      3-  109 m1      .banksel ram_address
     0069 00rr                      1- 1328     	MOVAR	(_CS1630_Init_temp_65536_65 + 2)
                                    1- 1329     	.line	64, "BSP\bsp_cs1630.c"; 	temp[3] = get_rolling_code_2()+1;
                                    1- 1330     	MCALL	_get_rolling_code_2
     006A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1331     	BANKSEL	r0x102A
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 00rr                      1- 1332     	MOVAR	r0x102A
     006D 05rr                      1- 1333     	INCR	r0x102A,F
     006E 01rr                      1- 1334     	MOVR	r0x102A,W
                                    1- 1335     	BANKSEL	_CS1630_Init_temp_65536_65
     006F rrrr                      3-  109 m1      .banksel ram_address
     0070 00rr                      1- 1336     	MOVAR	(_CS1630_Init_temp_65536_65 + 3)
                                    1- 1337     	.line	65, "BSP\bsp_cs1630.c"; 	temp[4] = get_rolling_code_3()+1;
                                    1- 1338     	MCALL	_get_rolling_code_3
     0071 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1339     	BANKSEL	r0x102A
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 00rr                      1- 1340     	MOVAR	r0x102A
     0074 05rr                      1- 1341     	INCR	r0x102A,F
     0075 01rr                      1- 1342     	MOVR	r0x102A,W
                                    1- 1343     	BANKSEL	_CS1630_Init_temp_65536_65
     0076 rrrr                      3-  109 m1      .banksel ram_address
     0077 00rr                      1- 1344     	MOVAR	(_CS1630_Init_temp_65536_65 + 4)
                                    1- 1345     	.line	67, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(CS1630_BANK0_TX_ADDR, temp, 5); // set address
     0078 21rr                      1- 1346     	MOVIA	(_CS1630_Init_temp_65536_65 + 0)
                                    1- 1347     	BANKSEL	r0x102A
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 00rr                      1- 1348     	MOVAR	r0x102A
                                    1- 1349     	BANKSEL	r0x102B
     007B rrrr                      3-  109 m1      .banksel ram_address
     007C 02rr                      1- 1350     	CLRR	r0x102B
                                    1- 1351     	BANKSEL	r0x102C
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 02rr                      1- 1352     	CLRR	r0x102C
     007F 2105                      1- 1353     	MOVIA	0x05
     0080 00rr                      1- 1354     	MOVAR	STK03
                                    1- 1355     	BANKSEL	r0x102A
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 01rr                      1- 1356     	MOVR	r0x102A,W
     0083 00rr                      1- 1357     	MOVAR	STK02
                                    1- 1358     	BANKSEL	r0x102B
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 01rr                      1- 1359     	MOVR	r0x102B,W
     0086 00rr                      1- 1360     	MOVAR	STK01
                                    1- 1361     	BANKSEL	r0x102C
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 01rr                      1- 1362     	MOVR	r0x102C,W
     0089 00rr                      1- 1363     	MOVAR	STK00
     008A 2110                      1- 1364     	MOVIA	0x10
                                    1- 1365     	MCALL	_CS1630_wr_buffer
     008B 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1366     	.line	74, "BSP\bsp_cs1630.c"; 	CS1630_Clear_All_Irq();
                                    1- 1367     	MCALL	_CS1630_Clear_All_Irq
     008C 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1368     	.line	75, "BSP\bsp_cs1630.c"; 	CS1630_Flush_Tx();
                                    1- 1369     	MCALL	_CS1630_Flush_Tx
     008D 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1370     	.line	76, "BSP\bsp_cs1630.c"; 	CLRWDT();
     008E 0002                      1- 1371     	clrwdt
                                    1- 1372     	.line	78, "BSP\bsp_cs1630.c"; 	}
                                    1- 1373     	RETURN	
     008F 0010                      3-   39 m1      ret
                                    1- 1374     ; exit point of _CS1630_Init
                                    1- 1376     ;***
                                    1- 1377     ;  pBlock Stats: dbName = C
                                    1- 1378     ;***
                                    1- 1379     ;has an exit
                                    1- 1380     ;functions called:
                                    1- 1381     ;   _CS1630_Bank_Switch
                                    1- 1382     ;   _CS1630_read_buffer
                                    1- 1383     ;   _CS1630_wr_buffer
                                    1- 1384     ;   _CS1630_read_buffer
                                    1- 1385     ;   _CS1630_Bank_Switch
                                    1- 1386     ;   _CS1630_Bank_Switch
                                    1- 1387     ;   _CS1630_read_buffer
                                    1- 1388     ;   _CS1630_wr_buffer
                                    1- 1389     ;   _CS1630_read_buffer
                                    1- 1390     ;   _CS1630_Bank_Switch
                                    1- 1391     ;7 compiler assigned registers:
                                    1- 1392     ;   r0x1027
                                    1- 1393     ;   r0x1028
                                    1- 1394     ;   r0x1029
                                    1- 1395     ;   STK03
                                    1- 1396     ;   STK02
                                    1- 1397     ;   STK01
                                    1- 1398     ;   STK00
                                    1- 1399     ;; Starting pCode block
                                    1- 1400     .segment "code"; module=bsp_cs1630, function=_CS1630_Soft_Rst
                                    1- 1402     ;local variable name mapping:
     0000                           1- 1404     _CS1630_Soft_Rst:
                                    1- 1405     ; 2 exit points
                                    1- 1406     	.line	12, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank1);
     0000 2101                      1- 1407     	MOVIA	0x01
                                    1- 1408     	MCALL	_CS1630_Bank_Switch
     0001 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1409     	.line	14, "BSP\bsp_cs1630.c"; 	CS1630_read_buffer(CS1630_BANK1_PLL_CTL0, soft_temp, 4); // 读取该寄存器状态
     0002 21rr                      1- 1410     	MOVIA	(_CS1630_Soft_Rst_soft_temp_65536_63 + 0)
                                    1- 1411     	BANKSEL	r0x1027
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1412     	MOVAR	r0x1027
                                    1- 1413     	BANKSEL	r0x1028
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 02rr                      1- 1414     	CLRR	r0x1028
                                    1- 1415     	BANKSEL	r0x1029
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 02rr                      1- 1416     	CLRR	r0x1029
     0009 2104                      1- 1417     	MOVIA	0x04
     000A 00rr                      1- 1418     	MOVAR	STK03
                                    1- 1419     	BANKSEL	r0x1027
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 1420     	MOVR	r0x1027,W
     000D 00rr                      1- 1421     	MOVAR	STK02
                                    1- 1422     	BANKSEL	r0x1028
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 01rr                      1- 1423     	MOVR	r0x1028,W
     0010 00rr                      1- 1424     	MOVAR	STK01
                                    1- 1425     	BANKSEL	r0x1029
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 01rr                      1- 1426     	MOVR	r0x1029,W
     0013 00rr                      1- 1427     	MOVAR	STK00
     0014 2101                      1- 1428     	MOVIA	0x01
                                    1- 1429     	MCALL	_CS1630_read_buffer
     0015 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1430     	.line	15, "BSP\bsp_cs1630.c"; 	soft_temp[3] |= 0x80; // 将最低位置0
                                    1- 1431     	BANKSEL	_CS1630_Soft_Rst_soft_temp_65536_63
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 1432     	MOVR	(_CS1630_Soft_Rst_soft_temp_65536_63 + 3),W
                                    1- 1433     	BANKSEL	r0x1027
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 00rr                      1- 1434     	MOVAR	r0x1027
     001A 1Brr                      1- 1435     	BSR	r0x1027,7
     001B 01rr                      1- 1436     	MOVR	r0x1027,W
                                    1- 1437     	BANKSEL	_CS1630_Soft_Rst_soft_temp_65536_63
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 00rr                      1- 1438     	MOVAR	(_CS1630_Soft_Rst_soft_temp_65536_63 + 3)
                                    1- 1439     	.line	16, "BSP\bsp_cs1630.c"; 	CS1630_wr_buffer(CS1630_BANK1_PLL_CTL0, soft_temp, 4);
     001E 21rr                      1- 1440     	MOVIA	(_CS1630_Soft_Rst_soft_temp_65536_63 + 0)
                                    1- 1441     	BANKSEL	r0x1027
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1- 1442     	MOVAR	r0x1027
                                    1- 1443     	BANKSEL	r0x1028
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 02rr                      1- 1444     	CLRR	r0x1028
                                    1- 1445     	BANKSEL	r0x1029
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 02rr                      1- 1446     	CLRR	r0x1029
     0025 2104                      1- 1447     	MOVIA	0x04
     0026 00rr                      1- 1448     	MOVAR	STK03
                                    1- 1449     	BANKSEL	r0x1027
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 1450     	MOVR	r0x1027,W
     0029 00rr                      1- 1451     	MOVAR	STK02
                                    1- 1452     	BANKSEL	r0x1028
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 01rr                      1- 1453     	MOVR	r0x1028,W
     002C 00rr                      1- 1454     	MOVAR	STK01
                                    1- 1455     	BANKSEL	r0x1029
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 01rr                      1- 1456     	MOVR	r0x1029,W
     002F 00rr                      1- 1457     	MOVAR	STK00
     0030 2101                      1- 1458     	MOVIA	0x01
                                    1- 1459     	MCALL	_CS1630_wr_buffer
     0031 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1460     	.line	17, "BSP\bsp_cs1630.c"; 	CS1630_read_buffer(CS1630_BANK1_PLL_CTL0, soft_temp, 4);
     0032 21rr                      1- 1461     	MOVIA	(_CS1630_Soft_Rst_soft_temp_65536_63 + 0)
                                    1- 1462     	BANKSEL	r0x1027
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 00rr                      1- 1463     	MOVAR	r0x1027
                                    1- 1464     	BANKSEL	r0x1028
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 02rr                      1- 1465     	CLRR	r0x1028
                                    1- 1466     	BANKSEL	r0x1029
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 02rr                      1- 1467     	CLRR	r0x1029
     0039 2104                      1- 1468     	MOVIA	0x04
     003A 00rr                      1- 1469     	MOVAR	STK03
                                    1- 1470     	BANKSEL	r0x1027
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 01rr                      1- 1471     	MOVR	r0x1027,W
     003D 00rr                      1- 1472     	MOVAR	STK02
                                    1- 1473     	BANKSEL	r0x1028
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 01rr                      1- 1474     	MOVR	r0x1028,W
     0040 00rr                      1- 1475     	MOVAR	STK01
                                    1- 1476     	BANKSEL	r0x1029
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 01rr                      1- 1477     	MOVR	r0x1029,W
     0043 00rr                      1- 1478     	MOVAR	STK00
     0044 2101                      1- 1479     	MOVIA	0x01
                                    1- 1480     	MCALL	_CS1630_read_buffer
     0045 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1481     	.line	18, "BSP\bsp_cs1630.c"; 	CS1630_Bank_Switch(RF_Bank0);
     0046 2100                      1- 1482     	MOVIA	0x00
                                    1- 1483     	MCALL	_CS1630_Bank_Switch
     0047 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1484     	.line	19, "BSP\bsp_cs1630.c"; 	}
                                    1- 1485     	RETURN	
     0048 0010                      3-   39 m1      ret
                                    1- 1486     ; exit point of _CS1630_Soft_Rst
                                    1- 1489     ;	code size estimation:
                                    1- 1490     ;	  434+  131 =   565 instructions ( 1392 byte)
                                    1- 1492     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\bsp_cs1630.s
002 ny8a054e.inc
003 common.inc
004 BSP\bsp_cs1630.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
SRAM / SFR   = 0x00000000 - 0x00000000
