
                    Nyquest Technology Co., Ltd.

NYASM 2.42

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\app_tx.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_delay_40us
                                    1-   15     	extern	_delay_us
                                    1-   16     	extern	_delay_250ms
                                    1-   17     	extern	_delay_ms
                                    1-   18     	extern	_CS1630_Resend_Tx_Payload
                                    1-   19     	extern	_CS1630_Dump_RF_Register
                                    1-   20     	extern	_Enter_sleep
                                    1-   21     	extern	_CS1630_SendPack
                                    1-   22     	extern	_CS1630_wr_buffer
                                    1-   23     	extern	_CS1630_write_byte
                                    1-   24     	extern	_CS1630_read_byte
                                    1-   25     	extern	_CS1630_read_buffer
                                    1-   26     	extern	_CS1630_Bank_Switch
                                    1-   27     	extern	_CS1630_ModeSwitch
                                    1-   28     	extern	_CS1630_CE_Low
                                    1-   29     	extern	_CS1630_CE_High
                                    1-   30     	extern	_CS1630_Reuse_Tx_Payload
                                    1-   31     	extern	_CS1630_Flush_Tx
                                    1-   32     	extern	_CS1630_Clear_All_Irq
                                    1-   33     	extern	_CS1630_Init
                                    1-   34     	extern	_CS1630_Soft_Rst
                                    1-   35     	extern	_SPI_ReadByte
                                    1-   36     	extern	_SPI_SendByte
                                    1-   37     	extern	_RF_softSPI_Init
                                    1-   38     	extern	_clear_ram
                                    1-   39     	extern	_multi_16b
                                    1-   40     	extern	_RF_Init
                                    1-   41     	extern	_RF_wr_cmd
                                    1-   42     	extern	_RF_write_byte
                                    1-   43     	extern	_RF_wr_buffer
                                    1-   44     	extern	_RF_Write_Ack_Payload
                                    1-   45     	extern	_RF_spi_wrd
                                    1-   46     	extern	_RF_Soft_Rst
                                    1-   47     	extern	_RF_SendPack
                                    1-   48     	extern	_RF_ReceivePack
                                    1-   49     	extern	_RF_Read_Status
                                    1-   50     	extern	_RF_read_byte
                                    1-   51     	extern	_RF_read_buffer
                                    1-   52     	extern	_RF_Operation
                                    1-   53     	extern	_RF_ModeSwitch
                                    1-   54     	extern	_RF_Get_RSSI
                                    1-   55     	extern	_RF_Get_Chip_ID
                                    1-   56     	extern	_RF_Flush_Tx
                                    1-   57     	extern	_RF_Flush_Rx
                                    1-   58     	extern	_RF_Configure_Reg
                                    1-   59     	extern	_RF_Clear_All_Irq
                                    1-   60     	extern	_RF_Change_Pwr
                                    1-   61     	extern	_RF_Change_CH
                                    1-   62     	extern	_RF_ChangeAddr_Reg
                                    1-   63     	extern	_RF_CE_Low
                                    1-   64     	extern	_RF_CE_High_Pulse
                                    1-   65     	extern	_RF_CE_High
                                    1-   66     	extern	_RF_Bank_Switch
                                    1-   67     	extern	_T0MD
                                    1-   68     	extern	_PCON1
                                    1-   69     	extern	_CMPCR
                                    1-   70     	extern	_BODCON
                                    1-   71     	extern	_PS0CV
                                    1-   72     	extern	_APHCON
                                    1-   73     	extern	_IOSTB
                                    1-   74     	extern	_IOSTA
                                    1-   75     	extern	_PWM5RH
                                    1-   76     	extern	_PWM5DUTY
                                    1-   77     	extern	_P5CR1
                                    1-   78     	extern	_PWM4DUTY
                                    1-   79     	extern	_P4CR1
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_PWM3DUTY
                                    1-   82     	extern	_T3CR2
                                    1-   83     	extern	_T3CR1
                                    1-   84     	extern	_TMR3
                                    1-   85     	extern	_OSCCR
                                    1-   86     	extern	_PWM2DUTY
                                    1-   87     	extern	_P2CR1
                                    1-   88     	extern	_TBHD
                                    1-   89     	extern	_TBHP
                                    1-   90     	extern	_IRCR
                                    1-   91     	extern	_BZ1CR
                                    1-   92     	extern	_PS1CV
                                    1-   93     	extern	_PWM1DUTY
                                    1-   94     	extern	_T1CR2
                                    1-   95     	extern	_T1CR1
                                    1-   96     	extern	_TMR1
                                    1-   97     	extern	_TM34RH
                                    1-   98     	extern	_TMRH
                                    1-   99     	extern	_PCHBUF
                                    1-  100     	extern	_STATUS
                                    1-  101     	extern	_PCL
                                    1-  102     	extern	_TMR0
                                    1-  103     	extern	_INTE2bits
                                    1-  104     	extern	_RFCbits
                                    1-  105     	extern	_INTEDGbits
                                    1-  106     	extern	_AWUCONbits
                                    1-  107     	extern	_INTFbits
                                    1-  108     	extern	_INTEbits
                                    1-  109     	extern	_BPHCONbits
                                    1-  110     	extern	_ABPLCONbits
                                    1-  111     	extern	_BWUCONbits
                                    1-  112     	extern	_PCONbits
                                    1-  113     	extern	_PORTBbits
                                    1-  114     	extern	_PORTAbits
                                    1-  115     	extern	__gptrget1
                                    1-  117     	extern PSAVE
                                    1-  118     	extern SSAVE
                                    1-  119     	extern WSAVE
                                    1-  120     	extern STK12
                                    1-  121     	extern ___STK12
                                    1-  122     	extern STK11
                                    1-  123     	extern ___STK11
                                    1-  124     	extern STK10
                                    1-  125     	extern ___STK10
                                    1-  126     	extern STK09
                                    1-  127     	extern ___STK09
                                    1-  128     	extern STK08
                                    1-  129     	extern ___STK08
                                    1-  130     	extern STK07
                                    1-  131     	extern ___STK07
                                    1-  132     	extern STK06
                                    1-  133     	extern ___STK06
                                    1-  134     	extern STK05
                                    1-  135     	extern ___STK05
                                    1-  136     	extern STK04
                                    1-  137     	extern ___STK04
                                    1-  138     	extern STK03
                                    1-  139     	extern ___STK03
                                    1-  140     	extern STK02
                                    1-  141     	extern ___STK02
                                    1-  142     	extern STK01
                                    1-  143     	extern ___STK01
                                    1-  144     	extern STK00
                                    1-  145     	extern ___STK00
                                    1-  146     ;--------------------------------------------------------
                                    1-  147     ; global declarations
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     	extern	_INTE2
                                    1-  150     	extern	_RFC
                                    1-  151     	extern	_INTEDG
                                    1-  152     	extern	_AWUCON
                                    1-  153     	extern	_INTF
                                    1-  154     	extern	_INTE
                                    1-  155     	extern	_BPHCON
                                    1-  156     	extern	_ABPLCON
                                    1-  157     	extern	_BWUCON
                                    1-  158     	extern	_PCON
                                    1-  159     	extern	_PORTB
                                    1-  160     	extern	_PORTA
                                    1-  161     	extern	_one_key_twice_dowm
                                    1-  162     	extern	_key_status_change
                                    1-  163     	extern	_rolling_code_3
                                    1-  164     	extern	_rolling_code_2
                                    1-  165     	extern	_rolling_code_1
                                    1-  166     	extern	_rolling_code_0
                                    1-  167     	extern	_send_ble_packet
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ; global definitions
                                    1-  171     ;--------------------------------------------------------
                                    1-  172     .segment "uninit"
     0000                           1-  173     _rolling_code_0:
                                    1-  174     	.res 1
                                    1-  177     .segment "uninit"
     0000                           1-  178     _rolling_code_1:
                                    1-  179     	.res 1
                                    1-  182     .segment "uninit"
     0000                           1-  183     _rolling_code_2:
                                    1-  184     	.res 1
                                    1-  187     .segment "uninit"
     0000                           1-  188     _rolling_code_3:
                                    1-  189     	.res 1
                                    1-  192     ;--------------------------------------------------------
                                    1-  193     ; absolute symbol definitions
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ;--------------------------------------------------------
                                    1-  196     ; compiler-defined variables
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     .segment "uninit"
     0000                           1-  199     r0x1026:
                                    1-  200     	.res	1
                                    1-  201     .segment "uninit"
     0000                           1-  202     r0x1027:
                                    1-  203     	.res	1
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x1028:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x1029:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x102A:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x102B:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x102C:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x102D:
                                    1-  221     	.res	1
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     ; initialized data
                                    1-  224     ;--------------------------------------------------------
                                    1-  226     .segment "idata"
     0000                           1-  227     _key_status_change:
     0000 0000                      1-  230     	dw	0x00	; 0
                                    1-  233     .segment "idata"
     0000                           1-  234     _one_key_twice_dowm:
     0000 0000                      1-  237     	dw	0x00	; 0
                                    1-  240     .segment "idata"
     0000                           1-  241     _CS1630_Tx_Payload:
     0000 0002                      1-  244     	dw	0x02	; 2
     0001 0001                      1-  245     	dw	0x01	; 1
     0002 0006                      1-  246     	dw	0x06	; 6
     0003 0010                      1-  247     	dw	0x10	; 16
     0004 00FF                      1-  248     	dw	0xff	; 255
     0005 0054                      1-  249     	dw	0x54	; 84	'T'
     0006 0045                      1-  250     	dw	0x45	; 69	'E'
     0007 0000                      1-  251     	dw	0x00	; 0
     0008 0000                      1-  252     	dw	0x00	; 0
     0009 00BF                      1-  253     	dw	0xbf	; 191
     000A 00AA                      1-  254     	dw	0xaa	; 170
     000B 00FF                      1-  255     	dw	0xff	; 255
     000C 00FF                      1-  256     	dw	0xff	; 255
     000D 00FF                      1-  257     	dw	0xff	; 255
     000E 00FF                      1-  258     	dw	0xff	; 255
     000F 00FF                      1-  259     	dw	0xff	; 255
     0010 00FF                      1-  260     	dw	0xff	; 255
     0011 00FF                      1-  261     	dw	0xff	; 255
     0012 00FF                      1-  262     	dw	0xff	; 255
     0013 00FF                      1-  263     	dw	0xff	; 255
     0014 0000 0000 0000 0000 0000  1-  264     	dw	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          0000 0000 0000 0000 0000 
          0000 0000                
                                    1-  267     .segment "code"
     0000                           1-  268     _channel_index:
     0000 2002                      1-  269     	retia 0x02	; 2
     0001 201A                      1-  270     	retia 0x1a	; 26
     0002 2050                      1-  271     	retia 0x50	; 80	'P'
                                    1-  272     ;--------------------------------------------------------
                                    1-  273     ; initialized absolute data
                                    1-  274     ;--------------------------------------------------------
                                    1-  275     ;--------------------------------------------------------
                                    1-  276     ; overlayable items in internal ram 
                                    1-  277     ;--------------------------------------------------------
                                    1-  278     ;	udata_ovr
                                    1-  279     ;--------------------------------------------------------
                                    1-  280     ; code
                                    1-  281     ;--------------------------------------------------------
                                    1-  282     ; code_app_tx	code
                                    1-  283     ;***
                                    1-  284     ;  pBlock Stats: dbName = C
                                    1-  285     ;***
                                    1-  286     ;has an exit
                                    1-  287     ;functions called:
                                    1-  288     ;   _CS1630_CE_Low
                                    1-  289     ;   _CS1630_Flush_Tx
                                    1-  290     ;   _CS1630_Clear_All_Irq
                                    1-  291     ;   _CS1630_write_byte
                                    1-  292     ;   _delay_ms
                                    1-  293     ;   __gptrget1
                                    1-  294     ;   _CS1630_write_byte
                                    1-  295     ;   _CS1630_SendPack
                                    1-  296     ;   _CS1630_CE_High
                                    1-  297     ;   _delay_40us
                                    1-  298     ;   _CS1630_CE_Low
                                    1-  299     ;   _CS1630_read_byte
                                    1-  300     ;   _CS1630_write_byte
                                    1-  301     ;   __gptrget1
                                    1-  302     ;   _CS1630_write_byte
                                    1-  303     ;   _CS1630_SendPack
                                    1-  304     ;   _CS1630_CE_High
                                    1-  305     ;   _delay_40us
                                    1-  306     ;   _CS1630_CE_Low
                                    1-  307     ;   _CS1630_read_byte
                                    1-  308     ;   _CS1630_write_byte
                                    1-  309     ;   _CS1630_write_byte
                                    1-  310     ;   _delay_ms
                                    1-  311     ;   _CS1630_write_byte
                                    1-  312     ;   _delay_ms
                                    1-  313     ;   _CS1630_CE_Low
                                    1-  314     ;   _CS1630_Flush_Tx
                                    1-  315     ;   _CS1630_Clear_All_Irq
                                    1-  316     ;   _CS1630_write_byte
                                    1-  317     ;   _delay_ms
                                    1-  318     ;   __gptrget1
                                    1-  319     ;   _CS1630_write_byte
                                    1-  320     ;   _CS1630_SendPack
                                    1-  321     ;   _CS1630_CE_High
                                    1-  322     ;   _delay_40us
                                    1-  323     ;   _CS1630_CE_Low
                                    1-  324     ;   _CS1630_read_byte
                                    1-  325     ;   _CS1630_write_byte
                                    1-  326     ;   __gptrget1
                                    1-  327     ;   _CS1630_write_byte
                                    1-  328     ;   _CS1630_SendPack
                                    1-  329     ;   _CS1630_CE_High
                                    1-  330     ;   _delay_40us
                                    1-  331     ;   _CS1630_CE_Low
                                    1-  332     ;   _CS1630_read_byte
                                    1-  333     ;   _CS1630_write_byte
                                    1-  334     ;   _CS1630_write_byte
                                    1-  335     ;   _delay_ms
                                    1-  336     ;   _CS1630_write_byte
                                    1-  337     ;   _delay_ms
                                    1-  338     ;12 compiler assigned registers:
                                    1-  339     ;   r0x1026
                                    1-  340     ;   STK00
                                    1-  341     ;   r0x1027
                                    1-  342     ;   STK01
                                    1-  343     ;   r0x1028
                                    1-  344     ;   r0x1029
                                    1-  345     ;   r0x102A
                                    1-  346     ;   r0x102B
                                    1-  347     ;   STK03
                                    1-  348     ;   STK02
                                    1-  349     ;   r0x102C
                                    1-  350     ;   r0x102D
                                    1-  351     ;; Starting pCode block
                                    1-  352     .segment "code"; module=app_tx, function=_send_ble_packet
                                    1-  354     ;local variable name mapping:
     0000                           1-  363     _send_ble_packet:
                                    1-  364     ; 2 exit points
                                    1-  365     	.line	40, "BSP\app_tx.c"; 	void send_ble_packet(unsigned char code_value, unsigned char send_times, unsigned char Serial_Number)
                                    1-  366     	BANKSEL	r0x1026
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  367     	MOVAR	r0x1026
     0002 01rr                      1-  368     	MOVR	STK00,W
                                    1-  369     	BANKSEL	r0x1027
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  370     	MOVAR	r0x1027
     0005 01rr                      1-  371     	MOVR	STK01,W
                                    1-  372     	BANKSEL	r0x1028
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  373     	MOVAR	r0x1028
                                    1-  374     	.line	42, "BSP\app_tx.c"; 	CLRWDT();
     0008 0002                      1-  375     	clrwdt
                                    1-  376     	.line	50, "BSP\app_tx.c"; 	AWUCON = 0xfc;
     0009 21FC                      1-  377     	MOVIA	0xfc
     000A 00rr                      1-  378     	MOVAR	_AWUCON
                                    1-  379     	.line	51, "BSP\app_tx.c"; 	BWUCON = 0x00;
     000B 02rr                      1-  380     	CLRR	_BWUCON
                                    1-  381     	.line	52, "BSP\app_tx.c"; 	IOSTA = C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input | C_PA6_Input | C_PA7_Input;  // 配置PA2、3、4、5、6、7为输入
     000C 21FC                      1-  382     	MOVIA	0xfc
     000D 000r                      1-  383     	IOST	_IOSTA
                                    1-  384     	.line	53, "BSP\app_tx.c"; 	APHCON = 0b00100011; // 设置2、3、4、6、7上拉
     000E 2123                      1-  385     	MOVIA	0x23
     000F 000r                      1-  386     	IOST	_APHCON
                                    1-  387     	.line	55, "BSP\app_tx.c"; 	INTE = C_INT_PABKey;
     0010 2102                      1-  388     	MOVIA	0x02
     0011 00rr                      1-  389     	MOVAR	_INTE
                                    1-  390     	.line	56, "BSP\app_tx.c"; 	INTF = 0x00;
     0012 02rr                      1-  391     	CLRR	_INTF
                                    1-  392     	.line	59, "BSP\app_tx.c"; 	CS1630_Tx_Payload[7] = Serial_Number; // 序号，用于区分不同数据包
                                    1-  393     	BANKSEL	r0x1028
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 01rr                      1-  394     	MOVR	r0x1028,W
                                    1-  395     	BANKSEL	_CS1630_Tx_Payload
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 00rr                      1-  396     	MOVAR	(_CS1630_Tx_Payload + 7)
                                    1-  397     	.line	60, "BSP\app_tx.c"; 	CS1630_Tx_Payload[8] = code_value; // 码值，用于指示功能
                                    1-  398     	BANKSEL	r0x1026
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 01rr                      1-  399     	MOVR	r0x1026,W
                                    1-  400     	BANKSEL	_CS1630_Tx_Payload
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1-  401     	MOVAR	(_CS1630_Tx_Payload + 8)
                                    1-  402     	.line	61, "BSP\app_tx.c"; 	CS1630_Tx_Payload[11] = rolling_code_0; // 码值，用于指示功能
                                    1-  403     	BANKSEL	_rolling_code_0
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 01rr                      1-  404     	MOVR	_rolling_code_0,W
                                    1-  405     	BANKSEL	_CS1630_Tx_Payload
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 00rr                      1-  406     	MOVAR	(_CS1630_Tx_Payload + 11)
                                    1-  407     	.line	62, "BSP\app_tx.c"; 	CS1630_Tx_Payload[12] = rolling_code_1; // 码值，用于指示功能
                                    1-  408     	BANKSEL	_rolling_code_1
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 01rr                      1-  409     	MOVR	_rolling_code_1,W
                                    1-  410     	BANKSEL	_CS1630_Tx_Payload
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1-  411     	MOVAR	(_CS1630_Tx_Payload + 12)
                                    1-  412     	.line	63, "BSP\app_tx.c"; 	CS1630_Tx_Payload[13] = rolling_code_2; // 码值，用于指示功能
                                    1-  413     	BANKSEL	_rolling_code_2
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 01rr                      1-  414     	MOVR	_rolling_code_2,W
                                    1-  415     	BANKSEL	_CS1630_Tx_Payload
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1-  416     	MOVAR	(_CS1630_Tx_Payload + 13)
                                    1-  417     	.line	64, "BSP\app_tx.c"; 	CS1630_Tx_Payload[14] = rolling_code_3; // 码值，用于指示功能
                                    1-  418     	BANKSEL	_rolling_code_3
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1-  419     	MOVR	_rolling_code_3,W
                                    1-  420     	BANKSEL	_CS1630_Tx_Payload
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 00rr                      1-  421     	MOVAR	(_CS1630_Tx_Payload + 14)
                                    1-  422     	.line	67, "BSP\app_tx.c"; 	CS1630_CE_Low();
                                    1-  423     	MCALL	_CS1630_CE_Low
     002B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  424     	.line	68, "BSP\app_tx.c"; 	CS1630_Flush_Tx();
                                    1-  425     	MCALL	_CS1630_Flush_Tx
     002C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  426     	.line	69, "BSP\app_tx.c"; 	CS1630_Clear_All_Irq();
                                    1-  427     	MCALL	_CS1630_Clear_All_Irq
     002D 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  428     	.line	72, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0f);
     002E 210F                      1-  429     	MOVIA	0x0f
     002F 00rr                      1-  430     	MOVAR	STK00
     0030 2100                      1-  431     	MOVIA	0x00
                                    1-  432     	MCALL	_CS1630_write_byte
     0031 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  433     	.line	73, "BSP\app_tx.c"; 	delay_ms(5);
     0032 2105                      1-  434     	MOVIA	0x05
                                    1-  435     	MCALL	_delay_ms
     0033 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  436     	.line	75, "BSP\app_tx.c"; 	CLRWDT();
     0034 0002                      1-  437     	clrwdt
                                    1-  438     	.line	76, "BSP\app_tx.c"; 	PB4 = 1;
                                    1-  439     	BANKSEL	_PORTB
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 1Arr                      1-  440     	BSR	_PORTB,4
                                    1-  441     	.line	78, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  442     	BANKSEL	r0x1026
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 02rr                      1-  443     	CLRR	r0x1026
     0039                           1-  444     _02028_DS_:
                                    1-  445     	.line	80, "BSP\app_tx.c"; 	CLRWDT();
     0039 0002                      1-  446     	clrwdt
                                    1-  447     	.line	81, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_RF_CH, channel_index[idx]); // 设置射频频道
                                    1-  448     	BANKSEL	r0x1026
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 01rr                      1-  449     	MOVR	r0x1026,W
     003C 25rr                      1-  450     	ADDIA	(_channel_index + 0)
                                    1-  451     	BANKSEL	r0x1028
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 00rr                      1-  452     	MOVAR	r0x1028
     003F 21rr                      1-  453     	MOVIA	((_channel_index + 0) >> 8) & 0xff
     0040 2600                      1-  454     	ADCIA	0x00
                                    1-  455     	BANKSEL	r0x1029
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 00rr                      1-  456     	MOVAR	r0x1029
                                    1-  457     	BANKSEL	r0x1028
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1-  458     	MOVR	r0x1028,W
     0045 00rr                      1-  459     	MOVAR	STK01
                                    1-  460     	BANKSEL	r0x1029
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1-  461     	MOVR	r0x1029,W
     0048 00rr                      1-  462     	MOVAR	STK00
     0049 2180                      1-  463     	MOVIA	0x80
                                    1-  464     	MCALL	__gptrget1
     004A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  465     	BANKSEL	r0x102A
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 00rr                      1-  466     	MOVAR	r0x102A
     004D 01rr                      1-  467     	MOVR	r0x102A,W
     004E 00rr                      1-  468     	MOVAR	STK00
     004F 2105                      1-  469     	MOVIA	0x05
                                    1-  470     	MCALL	_CS1630_write_byte
     0050 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  471     	.line	82, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  472     	BANKSEL	r0x1028
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 02rr                      1-  473     	CLRR	r0x1028
     0053                           1-  474     _02026_DS_:
                                    1-  475     	.line	84, "BSP\app_tx.c"; 	CS1630_SendPack(RF_W_TX_PAYLOAD, CS1630_Tx_Payload, 0x14); // 发送数据包
     0053 21rr                      1-  476     	MOVIA	(_CS1630_Tx_Payload + 0)
                                    1-  477     	BANKSEL	r0x1029
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 00rr                      1-  478     	MOVAR	r0x1029
                                    1-  479     	BANKSEL	r0x102A
     0056 rrrr                      3-  109 m1      .banksel ram_address
     0057 02rr                      1-  480     	CLRR	r0x102A
                                    1-  481     	BANKSEL	r0x102B
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 02rr                      1-  482     	CLRR	r0x102B
     005A 2114                      1-  483     	MOVIA	0x14
     005B 00rr                      1-  484     	MOVAR	STK03
                                    1-  485     	BANKSEL	r0x1029
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1-  486     	MOVR	r0x1029,W
     005E 00rr                      1-  487     	MOVAR	STK02
                                    1-  488     	BANKSEL	r0x102A
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 01rr                      1-  489     	MOVR	r0x102A,W
     0061 00rr                      1-  490     	MOVAR	STK01
                                    1-  491     	BANKSEL	r0x102B
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 01rr                      1-  492     	MOVR	r0x102B,W
     0064 00rr                      1-  493     	MOVAR	STK00
     0065 21A0                      1-  494     	MOVIA	0xa0
                                    1-  495     	MCALL	_CS1630_SendPack
     0066 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  496     	.line	85, "BSP\app_tx.c"; 	CS1630_CE_High(); // 产生CE脉冲，开始发送
                                    1-  497     	MCALL	_CS1630_CE_High
     0067 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  498     	.line	86, "BSP\app_tx.c"; 	delay_40us(); // 等待脉冲稳定
                                    1-  499     	MCALL	_delay_40us
     0068 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  500     	.line	87, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 结束脉冲
                                    1-  501     	MCALL	_CS1630_CE_Low
     0069 2rrr                      3-   65 m1      LCALL rom_address
     006A                           1-  502     _02009_DS_:
                                    1-  503     	.line	91, "BSP\app_tx.c"; 	status = CS1630_read_byte(CS1630_BANK0_STATUS); // 读取状态寄存器
     006A 2107                      1-  504     	MOVIA	0x07
                                    1-  505     	MCALL	_CS1630_read_byte
     006B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  506     	BANKSEL	r0x1029
     006C rrrr                      3-  109 m1      .banksel ram_address
     006D 00rr                      1-  507     	MOVAR	r0x1029
                                    1-  508     	.line	92, "BSP\app_tx.c"; 	if ((TX_DS & status) || (MAX_RT & status)) // 检查发送完成或重传达到最大次数
     006E 0Err                      1-  509     	BTRSC	r0x1029,5
                                    1-  510     	MGOTO	_02005_DS_
     006F 3rrr                      3-   62 m1      LGOTO rom_address
     0070 0Arr                      1-  511     	BTRSS	r0x1029,4
                                    1-  512     	MGOTO	_02009_DS_
     0071 3rrr                      3-   62 m1      LGOTO rom_address
     0072                           1-  513     _02005_DS_:
                                    1-  514     	.line	94, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, status); // 清除状态
                                    1-  515     	BANKSEL	r0x1029
     0072 rrrr                      3-  109 m1      .banksel ram_address
     0073 01rr                      1-  516     	MOVR	r0x1029,W
     0074 00rr                      1-  517     	MOVAR	STK00
     0075 2107                      1-  518     	MOVIA	0x07
                                    1-  519     	MCALL	_CS1630_write_byte
     0076 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  520     	.line	82, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  521     	BANKSEL	r0x1028
     0077 rrrr                      3-  109 m1      .banksel ram_address
     0078 05rr                      1-  522     	INCR	r0x1028,F
                                    1-  523     ;;unsigned compare: left < lit(0x3=3), size=1
     0079 2103                      1-  524     	MOVIA	0x03
     007A 04rr                      1-  525     	SUBAR	r0x1028,W
     007B 0803                      1-  526     	BTRSS	STATUS,0
                                    1-  527     	MGOTO	_02026_DS_
     007C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  528     	.line	78, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  529     	BANKSEL	r0x1026
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 05rr                      1-  530     	INCR	r0x1026,F
                                    1-  531     ;;unsigned compare: left < lit(0x3=3), size=1
     007F 2103                      1-  532     	MOVIA	0x03
     0080 04rr                      1-  533     	SUBAR	r0x1026,W
     0081 0803                      1-  534     	BTRSS	STATUS,0
                                    1-  535     	MGOTO	_02028_DS_
     0082 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  536     	.line	100, "BSP\app_tx.c"; 	PB4 = 0;
                                    1-  537     	BANKSEL	_PORTB
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 1Err                      1-  538     	BCR	_PORTB,4
                                    1-  539     	.line	101, "BSP\app_tx.c"; 	key_status_change = 0;
                                    1-  540     	BANKSEL	_key_status_change
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 02rr                      1-  541     	CLRR	_key_status_change
                                    1-  542     	.line	103, "BSP\app_tx.c"; 	for(great_circle = 0; great_circle < send_times; great_circle++)
                                    1-  543     	BANKSEL	r0x1026
     0087 rrrr                      3-  109 m1      .banksel ram_address
     0088 02rr                      1-  544     	CLRR	r0x1026
                                    1-  545     	BANKSEL	r0x1028
     0089 rrrr                      3-  109 m1      .banksel ram_address
     008A 02rr                      1-  546     	CLRR	r0x1028
     008B                           1-  547     _02035_DS_:
                                    1-  548     	BANKSEL	r0x1027
     008B rrrr                      3-  109 m1      .banksel ram_address
     008C 01rr                      1-  549     	MOVR	r0x1027,W
                                    1-  550     	BANKSEL	r0x1028
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 04rr                      1-  551     	SUBAR	r0x1028,W
     008F 0C03                      1-  552     	BTRSC	STATUS,0
                                    1-  553     	MGOTO	_02025_DS_
     0090 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  554     	.line	105, "BSP\app_tx.c"; 	CLRWDT();
     0091 0002                      1-  555     	clrwdt
                                    1-  556     	.line	107, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  557     	BANKSEL	r0x1029
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 02rr                      1-  558     	CLRR	r0x1029
     0094                           1-  559     _02032_DS_:
                                    1-  560     	.line	109, "BSP\app_tx.c"; 	CLRWDT();
     0094 0002                      1-  561     	clrwdt
                                    1-  562     	.line	110, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_RF_CH, channel_index[idx]); // 设置射频频道
                                    1-  563     	BANKSEL	r0x1029
     0095 rrrr                      3-  109 m1      .banksel ram_address
     0096 01rr                      1-  564     	MOVR	r0x1029,W
     0097 25rr                      1-  565     	ADDIA	(_channel_index + 0)
                                    1-  566     	BANKSEL	r0x102A
     0098 rrrr                      3-  109 m1      .banksel ram_address
     0099 00rr                      1-  567     	MOVAR	r0x102A
     009A 21rr                      1-  568     	MOVIA	((_channel_index + 0) >> 8) & 0xff
     009B 2600                      1-  569     	ADCIA	0x00
                                    1-  570     	BANKSEL	r0x102B
     009C rrrr                      3-  109 m1      .banksel ram_address
     009D 00rr                      1-  571     	MOVAR	r0x102B
                                    1-  572     	BANKSEL	r0x102A
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 01rr                      1-  573     	MOVR	r0x102A,W
     00A0 00rr                      1-  574     	MOVAR	STK01
                                    1-  575     	BANKSEL	r0x102B
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 01rr                      1-  576     	MOVR	r0x102B,W
     00A3 00rr                      1-  577     	MOVAR	STK00
     00A4 2180                      1-  578     	MOVIA	0x80
                                    1-  579     	MCALL	__gptrget1
     00A5 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  580     	BANKSEL	r0x102C
     00A6 rrrr                      3-  109 m1      .banksel ram_address
     00A7 00rr                      1-  581     	MOVAR	r0x102C
     00A8 01rr                      1-  582     	MOVR	r0x102C,W
     00A9 00rr                      1-  583     	MOVAR	STK00
     00AA 2105                      1-  584     	MOVIA	0x05
                                    1-  585     	MCALL	_CS1630_write_byte
     00AB 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  586     	.line	111, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  587     	BANKSEL	r0x102A
     00AC rrrr                      3-  109 m1      .banksel ram_address
     00AD 02rr                      1-  588     	CLRR	r0x102A
     00AE                           1-  589     _02030_DS_:
                                    1-  590     	.line	113, "BSP\app_tx.c"; 	CS1630_SendPack(RF_W_TX_PAYLOAD, CS1630_Tx_Payload, 0x14); // 发送数据包
     00AE 21rr                      1-  591     	MOVIA	(_CS1630_Tx_Payload + 0)
                                    1-  592     	BANKSEL	r0x102B
     00AF rrrr                      3-  109 m1      .banksel ram_address
     00B0 00rr                      1-  593     	MOVAR	r0x102B
                                    1-  594     	BANKSEL	r0x102C
     00B1 rrrr                      3-  109 m1      .banksel ram_address
     00B2 02rr                      1-  595     	CLRR	r0x102C
                                    1-  596     	BANKSEL	r0x102D
     00B3 rrrr                      3-  109 m1      .banksel ram_address
     00B4 02rr                      1-  597     	CLRR	r0x102D
     00B5 2114                      1-  598     	MOVIA	0x14
     00B6 00rr                      1-  599     	MOVAR	STK03
                                    1-  600     	BANKSEL	r0x102B
     00B7 rrrr                      3-  109 m1      .banksel ram_address
     00B8 01rr                      1-  601     	MOVR	r0x102B,W
     00B9 00rr                      1-  602     	MOVAR	STK02
                                    1-  603     	BANKSEL	r0x102C
     00BA rrrr                      3-  109 m1      .banksel ram_address
     00BB 01rr                      1-  604     	MOVR	r0x102C,W
     00BC 00rr                      1-  605     	MOVAR	STK01
                                    1-  606     	BANKSEL	r0x102D
     00BD rrrr                      3-  109 m1      .banksel ram_address
     00BE 01rr                      1-  607     	MOVR	r0x102D,W
     00BF 00rr                      1-  608     	MOVAR	STK00
     00C0 21A0                      1-  609     	MOVIA	0xa0
                                    1-  610     	MCALL	_CS1630_SendPack
     00C1 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  611     	.line	115, "BSP\app_tx.c"; 	CS1630_CE_High(); // 产生CE脉冲，开始发送
                                    1-  612     	MCALL	_CS1630_CE_High
     00C2 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  613     	.line	116, "BSP\app_tx.c"; 	delay_40us(); // 等待脉冲稳定
                                    1-  614     	MCALL	_delay_40us
     00C3 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  615     	.line	117, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 结束脉冲
                                    1-  616     	MCALL	_CS1630_CE_Low
     00C4 2rrr                      3-   65 m1      LCALL rom_address
     00C5                           1-  617     _02017_DS_:
                                    1-  618     	.line	121, "BSP\app_tx.c"; 	status = CS1630_read_byte(CS1630_BANK0_STATUS); // 读取状态寄存器
     00C5 2107                      1-  619     	MOVIA	0x07
                                    1-  620     	MCALL	_CS1630_read_byte
     00C6 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  621     	BANKSEL	r0x102B
     00C7 rrrr                      3-  109 m1      .banksel ram_address
     00C8 00rr                      1-  622     	MOVAR	r0x102B
                                    1-  623     	.line	122, "BSP\app_tx.c"; 	if ((TX_DS & status) || (MAX_RT & status)) // 检查发送完成或重传达到最大次数
     00C9 0Err                      1-  624     	BTRSC	r0x102B,5
                                    1-  625     	MGOTO	_02013_DS_
     00CA 3rrr                      3-   62 m1      LGOTO rom_address
     00CB 0Arr                      1-  626     	BTRSS	r0x102B,4
                                    1-  627     	MGOTO	_02017_DS_
     00CC 3rrr                      3-   62 m1      LGOTO rom_address
     00CD                           1-  628     _02013_DS_:
                                    1-  629     	.line	124, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, status); // 清除状态
                                    1-  630     	BANKSEL	r0x102B
     00CD rrrr                      3-  109 m1      .banksel ram_address
     00CE 01rr                      1-  631     	MOVR	r0x102B,W
     00CF 00rr                      1-  632     	MOVAR	STK00
     00D0 2107                      1-  633     	MOVIA	0x07
                                    1-  634     	MCALL	_CS1630_write_byte
     00D1 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  635     	.line	111, "BSP\app_tx.c"; 	for(mini_circle = 0; mini_circle < 3; mini_circle++)
                                    1-  636     	BANKSEL	r0x102A
     00D2 rrrr                      3-  109 m1      .banksel ram_address
     00D3 05rr                      1-  637     	INCR	r0x102A,F
                                    1-  638     ;;unsigned compare: left < lit(0x3=3), size=1
     00D4 2103                      1-  639     	MOVIA	0x03
     00D5 04rr                      1-  640     	SUBAR	r0x102A,W
     00D6 0803                      1-  641     	BTRSS	STATUS,0
                                    1-  642     	MGOTO	_02030_DS_
     00D7 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  643     	.line	107, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  644     	BANKSEL	r0x1029
     00D8 rrrr                      3-  109 m1      .banksel ram_address
     00D9 05rr                      1-  645     	INCR	r0x1029,F
                                    1-  646     ;;unsigned compare: left < lit(0x3=3), size=1
     00DA 2103                      1-  647     	MOVIA	0x03
     00DB 04rr                      1-  648     	SUBAR	r0x1029,W
     00DC 0803                      1-  649     	BTRSS	STATUS,0
                                    1-  650     	MGOTO	_02032_DS_
     00DD 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  651     	.line	131, "BSP\app_tx.c"; 	if(key_status_change == 1)
                                    1-  652     	BANKSEL	_key_status_change
     00DE rrrr                      3-  109 m1      .banksel ram_address
     00DF 01rr                      1-  653     	MOVR	_key_status_change,W
     00E0 2401                      1-  654     	XORIA	0x01
     00E1 0903                      1-  655     	BTRSS	STATUS,2
                                    1-  656     	MGOTO	_02036_DS_
     00E2 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  657     	.line	133, "BSP\app_tx.c"; 	key_status_change = 0;
     00E3 02rr                      1-  658     	CLRR	_key_status_change
                                    1-  659     	.line	134, "BSP\app_tx.c"; 	enter_interput_times++;
                                    1-  660     	BANKSEL	r0x1026
     00E4 rrrr                      3-  109 m1      .banksel ram_address
     00E5 05rr                      1-  661     	INCR	r0x1026,F
                                    1-  662     	.line	135, "BSP\app_tx.c"; 	if(enter_interput_times == 2)
     00E6 01rr                      1-  663     	MOVR	r0x1026,W
     00E7 2402                      1-  664     	XORIA	0x02
     00E8 0903                      1-  665     	BTRSS	STATUS,2
                                    1-  666     	MGOTO	_02036_DS_
     00E9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  667     	.line	137, "BSP\app_tx.c"; 	one_key_twice_dowm = 1;
     00EA 2101                      1-  668     	MOVIA	0x01
                                    1-  669     	BANKSEL	_one_key_twice_dowm
     00EB rrrr                      3-  109 m1      .banksel ram_address
     00EC 00rr                      1-  670     	MOVAR	_one_key_twice_dowm
                                    1-  671     	.line	139, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0d);
     00ED 210D                      1-  672     	MOVIA	0x0d
     00EE 00rr                      1-  673     	MOVAR	STK00
     00EF 2100                      1-  674     	MOVIA	0x00
                                    1-  675     	MCALL	_CS1630_write_byte
     00F0 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  676     	.line	140, "BSP\app_tx.c"; 	delay_ms(2);
     00F1 2102                      1-  677     	MOVIA	0x02
                                    1-  678     	MCALL	_delay_ms
     00F2 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  679     	.line	141, "BSP\app_tx.c"; 	return;
                                    1-  680     	MGOTO	_02037_DS_
     00F3 3rrr                      3-   62 m1      LGOTO rom_address
     00F4                           1-  681     _02036_DS_:
                                    1-  682     	.line	103, "BSP\app_tx.c"; 	for(great_circle = 0; great_circle < send_times; great_circle++)
                                    1-  683     	BANKSEL	r0x1028
     00F4 rrrr                      3-  109 m1      .banksel ram_address
     00F5 05rr                      1-  684     	INCR	r0x1028,F
                                    1-  685     	MGOTO	_02035_DS_
     00F6 3rrr                      3-   62 m1      LGOTO rom_address
     00F7                           1-  686     _02025_DS_:
                                    1-  687     	.line	147, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0d);
     00F7 210D                      1-  688     	MOVIA	0x0d
     00F8 00rr                      1-  689     	MOVAR	STK00
     00F9 2100                      1-  690     	MOVIA	0x00
                                    1-  691     	MCALL	_CS1630_write_byte
     00FA 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  692     	.line	148, "BSP\app_tx.c"; 	delay_ms(2);
     00FB 2102                      1-  693     	MOVIA	0x02
                                    1-  694     	MCALL	_delay_ms
     00FC 2rrr                      3-   65 m1      LCALL rom_address
     00FD                           1-  695     _02037_DS_:
                                    1-  696     	.line	149, "BSP\app_tx.c"; 	}
                                    1-  697     	RETURN	
     00FD 0010                      3-   39 m1      ret
                                    1-  698     ; exit point of _send_ble_packet
                                    1-  701     ;	code size estimation:
                                    1-  702     ;	  187+   62 =   249 instructions (  622 byte)
                                    1-  704     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\app_tx.s
002 ny8a054e.inc
003 common.inc
004 BSP\app_tx.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
