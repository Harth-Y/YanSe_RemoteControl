
                    Nyquest Technology Co., Ltd.

NYASM 2.42

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"BSP\app_tx.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_delay_40us
                                    1-   15     	extern	_delay_us
                                    1-   16     	extern	_delay_250ms
                                    1-   17     	extern	_delay_ms
                                    1-   18     	extern	_CS1630_Dump_RF_Register
                                    1-   19     	extern	_Enter_sleep
                                    1-   20     	extern	_CS1630_SendPack
                                    1-   21     	extern	_CS1630_wr_buffer
                                    1-   22     	extern	_CS1630_write_byte
                                    1-   23     	extern	_CS1630_read_byte
                                    1-   24     	extern	_CS1630_read_buffer
                                    1-   25     	extern	_CS1630_Bank_Switch
                                    1-   26     	extern	_CS1630_ModeSwitch
                                    1-   27     	extern	_CS1630_CE_Low
                                    1-   28     	extern	_CS1630_CE_High
                                    1-   29     	extern	_CS1630_Flush_Tx
                                    1-   30     	extern	_CS1630_Clear_All_Irq
                                    1-   31     	extern	_CS1630_Init
                                    1-   32     	extern	_CS1630_Soft_Rst
                                    1-   33     	extern	_SPI_ReadByte
                                    1-   34     	extern	_SPI_SendByte
                                    1-   35     	extern	_RF_softSPI_Init
                                    1-   36     	extern	_clear_ram
                                    1-   37     	extern	_multi_16b
                                    1-   38     	extern	_RF_Init
                                    1-   39     	extern	_RF_wr_cmd
                                    1-   40     	extern	_RF_write_byte
                                    1-   41     	extern	_RF_wr_buffer
                                    1-   42     	extern	_RF_Write_Ack_Payload
                                    1-   43     	extern	_RF_spi_wrd
                                    1-   44     	extern	_RF_Soft_Rst
                                    1-   45     	extern	_RF_SendPack
                                    1-   46     	extern	_RF_ReceivePack
                                    1-   47     	extern	_RF_Read_Status
                                    1-   48     	extern	_RF_read_byte
                                    1-   49     	extern	_RF_read_buffer
                                    1-   50     	extern	_RF_Operation
                                    1-   51     	extern	_RF_ModeSwitch
                                    1-   52     	extern	_RF_Get_RSSI
                                    1-   53     	extern	_RF_Get_Chip_ID
                                    1-   54     	extern	_RF_Flush_Tx
                                    1-   55     	extern	_RF_Flush_Rx
                                    1-   56     	extern	_RF_Configure_Reg
                                    1-   57     	extern	_RF_Clear_All_Irq
                                    1-   58     	extern	_RF_Change_Pwr
                                    1-   59     	extern	_RF_Change_CH
                                    1-   60     	extern	_RF_ChangeAddr_Reg
                                    1-   61     	extern	_RF_CE_Low
                                    1-   62     	extern	_RF_CE_High_Pulse
                                    1-   63     	extern	_RF_CE_High
                                    1-   64     	extern	_RF_Bank_Switch
                                    1-   65     	extern	_T0MD
                                    1-   66     	extern	_PCON1
                                    1-   67     	extern	_CMPCR
                                    1-   68     	extern	_BODCON
                                    1-   69     	extern	_PS0CV
                                    1-   70     	extern	_APHCON
                                    1-   71     	extern	_IOSTB
                                    1-   72     	extern	_IOSTA
                                    1-   73     	extern	_PWM5RH
                                    1-   74     	extern	_PWM5DUTY
                                    1-   75     	extern	_P5CR1
                                    1-   76     	extern	_PWM4DUTY
                                    1-   77     	extern	_P4CR1
                                    1-   78     	extern	_PS3CV
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_T3CR2
                                    1-   81     	extern	_T3CR1
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_OSCCR
                                    1-   84     	extern	_PWM2DUTY
                                    1-   85     	extern	_P2CR1
                                    1-   86     	extern	_TBHD
                                    1-   87     	extern	_TBHP
                                    1-   88     	extern	_IRCR
                                    1-   89     	extern	_BZ1CR
                                    1-   90     	extern	_PS1CV
                                    1-   91     	extern	_PWM1DUTY
                                    1-   92     	extern	_T1CR2
                                    1-   93     	extern	_T1CR1
                                    1-   94     	extern	_TMR1
                                    1-   95     	extern	_TM34RH
                                    1-   96     	extern	_TMRH
                                    1-   97     	extern	_PCHBUF
                                    1-   98     	extern	_STATUS
                                    1-   99     	extern	_PCL
                                    1-  100     	extern	_TMR0
                                    1-  101     	extern	_INTE2bits
                                    1-  102     	extern	_RFCbits
                                    1-  103     	extern	_INTEDGbits
                                    1-  104     	extern	_AWUCONbits
                                    1-  105     	extern	_INTFbits
                                    1-  106     	extern	_INTEbits
                                    1-  107     	extern	_BPHCONbits
                                    1-  108     	extern	_ABPLCONbits
                                    1-  109     	extern	_BWUCONbits
                                    1-  110     	extern	_PCONbits
                                    1-  111     	extern	_PORTBbits
                                    1-  112     	extern	_PORTAbits
                                    1-  113     	extern	__gptrget1
                                    1-  115     	extern PSAVE
                                    1-  116     	extern SSAVE
                                    1-  117     	extern WSAVE
                                    1-  118     	extern STK12
                                    1-  119     	extern ___STK12
                                    1-  120     	extern STK11
                                    1-  121     	extern ___STK11
                                    1-  122     	extern STK10
                                    1-  123     	extern ___STK10
                                    1-  124     	extern STK09
                                    1-  125     	extern ___STK09
                                    1-  126     	extern STK08
                                    1-  127     	extern ___STK08
                                    1-  128     	extern STK07
                                    1-  129     	extern ___STK07
                                    1-  130     	extern STK06
                                    1-  131     	extern ___STK06
                                    1-  132     	extern STK05
                                    1-  133     	extern ___STK05
                                    1-  134     	extern STK04
                                    1-  135     	extern ___STK04
                                    1-  136     	extern STK03
                                    1-  137     	extern ___STK03
                                    1-  138     	extern STK02
                                    1-  139     	extern ___STK02
                                    1-  140     	extern STK01
                                    1-  141     	extern ___STK01
                                    1-  142     	extern STK00
                                    1-  143     	extern ___STK00
                                    1-  144     ;--------------------------------------------------------
                                    1-  145     ; global declarations
                                    1-  146     ;--------------------------------------------------------
                                    1-  147     	extern	_INTE2
                                    1-  148     	extern	_RFC
                                    1-  149     	extern	_INTEDG
                                    1-  150     	extern	_AWUCON
                                    1-  151     	extern	_INTF
                                    1-  152     	extern	_INTE
                                    1-  153     	extern	_BPHCON
                                    1-  154     	extern	_ABPLCON
                                    1-  155     	extern	_BWUCON
                                    1-  156     	extern	_PCON
                                    1-  157     	extern	_PORTB
                                    1-  158     	extern	_PORTA
                                    1-  159     	extern	_send_ble_packet
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ; global definitions
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; absolute symbol definitions
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; compiler-defined variables
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1020:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1021:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1022:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1023:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1024:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1025:
                                    1-  187     	.res	1
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     ; initialized data
                                    1-  190     ;--------------------------------------------------------
                                    1-  192     .segment "idata"
     0000                           1-  193     _CS1630_Tx_Payload:
     0000 0002                      1-  196     	dw	0x02	; 2
     0001 0001                      1-  197     	dw	0x01	; 1
     0002 0006                      1-  198     	dw	0x06	; 6
     0003 0010                      1-  199     	dw	0x10	; 16
     0004 00FF                      1-  200     	dw	0xff	; 255
     0005 0054                      1-  201     	dw	0x54	; 84	'T'
     0006 0045                      1-  202     	dw	0x45	; 69	'E'
     0007 0000                      1-  203     	dw	0x00	; 0
     0008 0000                      1-  204     	dw	0x00	; 0
     0009 00BF                      1-  205     	dw	0xbf	; 191
     000A 00AA                      1-  206     	dw	0xaa	; 170
     000B 00FF                      1-  207     	dw	0xff	; 255
     000C 00FF                      1-  208     	dw	0xff	; 255
     000D 00FF                      1-  209     	dw	0xff	; 255
     000E 00FF                      1-  210     	dw	0xff	; 255
     000F 00FF                      1-  211     	dw	0xff	; 255
     0010 00FF                      1-  212     	dw	0xff	; 255
     0011 00FF                      1-  213     	dw	0xff	; 255
     0012 00FF                      1-  214     	dw	0xff	; 255
     0013 00FF                      1-  215     	dw	0xff	; 255
     0014 0000 0000 0000 0000 0000  1-  216     	dw	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
          0000 0000 0000 0000 0000 
          0000 0000                
                                    1-  219     .segment "code"
     0000                           1-  220     _channel_index:
     0000 2002                      1-  221     	retia 0x02	; 2
     0001 201A                      1-  222     	retia 0x1a	; 26
     0002 2050                      1-  223     	retia 0x50	; 80	'P'
                                    1-  224     ;--------------------------------------------------------
                                    1-  225     ; initialized absolute data
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ; overlayable items in internal ram 
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ;	udata_ovr
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; code
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; code_app_tx	code
                                    1-  235     ;***
                                    1-  236     ;  pBlock Stats: dbName = C
                                    1-  237     ;***
                                    1-  238     ;has an exit
                                    1-  239     ;functions called:
                                    1-  240     ;   _CS1630_CE_Low
                                    1-  241     ;   _CS1630_Flush_Tx
                                    1-  242     ;   _CS1630_Clear_All_Irq
                                    1-  243     ;   _CS1630_write_byte
                                    1-  244     ;   _delay_ms
                                    1-  245     ;   __gptrget1
                                    1-  246     ;   _CS1630_write_byte
                                    1-  247     ;   _CS1630_SendPack
                                    1-  248     ;   _CS1630_CE_High
                                    1-  249     ;   _delay_40us
                                    1-  250     ;   _CS1630_CE_Low
                                    1-  251     ;   _CS1630_read_byte
                                    1-  252     ;   _CS1630_write_byte
                                    1-  253     ;   __gptrget1
                                    1-  254     ;   _CS1630_write_byte
                                    1-  255     ;   _CS1630_SendPack
                                    1-  256     ;   _CS1630_CE_High
                                    1-  257     ;   _delay_40us
                                    1-  258     ;   _CS1630_CE_Low
                                    1-  259     ;   _CS1630_read_byte
                                    1-  260     ;   _CS1630_write_byte
                                    1-  261     ;   _CS1630_write_byte
                                    1-  262     ;   _delay_ms
                                    1-  263     ;   _CS1630_CE_Low
                                    1-  264     ;   _CS1630_Flush_Tx
                                    1-  265     ;   _CS1630_Clear_All_Irq
                                    1-  266     ;   _CS1630_write_byte
                                    1-  267     ;   _delay_ms
                                    1-  268     ;   __gptrget1
                                    1-  269     ;   _CS1630_write_byte
                                    1-  270     ;   _CS1630_SendPack
                                    1-  271     ;   _CS1630_CE_High
                                    1-  272     ;   _delay_40us
                                    1-  273     ;   _CS1630_CE_Low
                                    1-  274     ;   _CS1630_read_byte
                                    1-  275     ;   _CS1630_write_byte
                                    1-  276     ;   __gptrget1
                                    1-  277     ;   _CS1630_write_byte
                                    1-  278     ;   _CS1630_SendPack
                                    1-  279     ;   _CS1630_CE_High
                                    1-  280     ;   _delay_40us
                                    1-  281     ;   _CS1630_CE_Low
                                    1-  282     ;   _CS1630_read_byte
                                    1-  283     ;   _CS1630_write_byte
                                    1-  284     ;   _CS1630_write_byte
                                    1-  285     ;   _delay_ms
                                    1-  286     ;10 compiler assigned registers:
                                    1-  287     ;   r0x1020
                                    1-  288     ;   STK00
                                    1-  289     ;   r0x1021
                                    1-  290     ;   STK01
                                    1-  291     ;   r0x1022
                                    1-  292     ;   r0x1023
                                    1-  293     ;   r0x1024
                                    1-  294     ;   r0x1025
                                    1-  295     ;   STK03
                                    1-  296     ;   STK02
                                    1-  297     ;; Starting pCode block
                                    1-  298     .segment "code"; module=app_tx, function=_send_ble_packet
                                    1-  300     ;local variable name mapping:
     0000                           1-  308     _send_ble_packet:
                                    1-  309     ; 2 exit points
                                    1-  310     	.line	35, "BSP\app_tx.c"; 	void send_ble_packet(unsigned char code_value, unsigned char keydown_times, unsigned char s_data_num)
                                    1-  311     	BANKSEL	r0x1020
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1-  312     	MOVAR	r0x1020
     0002 01rr                      1-  313     	MOVR	STK00,W
                                    1-  314     	BANKSEL	r0x1021
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1-  315     	MOVAR	r0x1021
     0005 01rr                      1-  316     	MOVR	STK01,W
                                    1-  317     	BANKSEL	r0x1022
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1-  318     	MOVAR	r0x1022
                                    1-  319     	.line	37, "BSP\app_tx.c"; 	CLRWDT();
     0008 0002                      1-  320     	clrwdt
                                    1-  321     	.line	38, "BSP\app_tx.c"; 	PB4 = 1;
                                    1-  322     	BANKSEL	_PORTB
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 1Arr                      1-  323     	BSR	_PORTB,4
                                    1-  324     	.line	46, "BSP\app_tx.c"; 	CS1630_Tx_Payload[7] = s_data_num; // 序号，用于区分不同数据包
                                    1-  325     	BANKSEL	r0x1022
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1-  326     	MOVR	r0x1022,W
                                    1-  327     	BANKSEL	_CS1630_Tx_Payload
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1-  328     	MOVAR	(_CS1630_Tx_Payload + 7)
                                    1-  329     	.line	47, "BSP\app_tx.c"; 	CS1630_Tx_Payload[8] = code_value; // 码值，用于指示功能
                                    1-  330     	BANKSEL	r0x1020
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 01rr                      1-  331     	MOVR	r0x1020,W
                                    1-  332     	BANKSEL	_CS1630_Tx_Payload
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1-  333     	MOVAR	(_CS1630_Tx_Payload + 8)
                                    1-  334     	.line	50, "BSP\app_tx.c"; 	CS1630_CE_Low();
                                    1-  335     	MCALL	_CS1630_CE_Low
     0013 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  336     	.line	51, "BSP\app_tx.c"; 	CS1630_Flush_Tx();
                                    1-  337     	MCALL	_CS1630_Flush_Tx
     0014 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  338     	.line	52, "BSP\app_tx.c"; 	CS1630_Clear_All_Irq();
                                    1-  339     	MCALL	_CS1630_Clear_All_Irq
     0015 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  340     	.line	55, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x0e);
     0016 210E                      1-  341     	MOVIA	0x0e
     0017 00rr                      1-  342     	MOVAR	STK00
     0018 2100                      1-  343     	MOVIA	0x00
                                    1-  344     	MCALL	_CS1630_write_byte
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  345     	.line	56, "BSP\app_tx.c"; 	delay_ms(5);
     001A 2105                      1-  346     	MOVIA	0x05
                                    1-  347     	MCALL	_delay_ms
     001B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  348     	.line	57, "BSP\app_tx.c"; 	if(keydown_times)
                                    1-  349     	BANKSEL	r0x1021
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 01rr                      1-  350     	MOVR	r0x1021,W
     001E 0D03                      1-  351     	BTRSC	STATUS,2
                                    1-  352     	MGOTO	_02050_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  353     	.line	60, "BSP\app_tx.c"; 	for(k =0; k < 2; k++)
                                    1-  354     	BANKSEL	r0x1020
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 02rr                      1-  355     	CLRR	r0x1020
     0022                           1-  356     _02029_DS_:
                                    1-  357     	.line	62, "BSP\app_tx.c"; 	CLRWDT();
     0022 0002                      1-  358     	clrwdt
                                    1-  359     	.line	64, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  360     	BANKSEL	r0x1021
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 02rr                      1-  361     	CLRR	r0x1021
     0025                           1-  362     _02027_DS_:
                                    1-  363     	.line	66, "BSP\app_tx.c"; 	CLRWDT();
     0025 0002                      1-  364     	clrwdt
                                    1-  365     	.line	67, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_RF_CH, channel_index[idx]); // 设置射频频道
                                    1-  366     	BANKSEL	r0x1021
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 01rr                      1-  367     	MOVR	r0x1021,W
     0028 25rr                      1-  368     	ADDIA	(_channel_index + 0)
                                    1-  369     	BANKSEL	r0x1022
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 00rr                      1-  370     	MOVAR	r0x1022
     002B 21rr                      1-  371     	MOVIA	((_channel_index + 0) >> 8) & 0xff
     002C 2600                      1-  372     	ADCIA	0x00
                                    1-  373     	BANKSEL	r0x1023
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 00rr                      1-  374     	MOVAR	r0x1023
                                    1-  375     	BANKSEL	r0x1022
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 01rr                      1-  376     	MOVR	r0x1022,W
     0031 00rr                      1-  377     	MOVAR	STK01
                                    1-  378     	BANKSEL	r0x1023
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1-  379     	MOVR	r0x1023,W
     0034 00rr                      1-  380     	MOVAR	STK00
     0035 2180                      1-  381     	MOVIA	0x80
                                    1-  382     	MCALL	__gptrget1
     0036 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  383     	BANKSEL	r0x1024
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 00rr                      1-  384     	MOVAR	r0x1024
     0039 01rr                      1-  385     	MOVR	r0x1024,W
     003A 00rr                      1-  386     	MOVAR	STK00
     003B 2105                      1-  387     	MOVIA	0x05
                                    1-  388     	MCALL	_CS1630_write_byte
     003C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  389     	.line	68, "BSP\app_tx.c"; 	for(i = 0; i < 3; i++)
                                    1-  390     	BANKSEL	r0x1022
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 02rr                      1-  391     	CLRR	r0x1022
     003F                           1-  392     _02025_DS_:
                                    1-  393     	.line	70, "BSP\app_tx.c"; 	CS1630_SendPack(RF_W_TX_PAYLOAD, CS1630_Tx_Payload, 0x14); // 发送数据包
     003F 21rr                      1-  394     	MOVIA	(_CS1630_Tx_Payload + 0)
                                    1-  395     	BANKSEL	r0x1023
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 00rr                      1-  396     	MOVAR	r0x1023
                                    1-  397     	BANKSEL	r0x1024
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 02rr                      1-  398     	CLRR	r0x1024
                                    1-  399     	BANKSEL	r0x1025
     0044 rrrr                      3-  109 m1      .banksel ram_address
     0045 02rr                      1-  400     	CLRR	r0x1025
     0046 2114                      1-  401     	MOVIA	0x14
     0047 00rr                      1-  402     	MOVAR	STK03
                                    1-  403     	BANKSEL	r0x1023
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 01rr                      1-  404     	MOVR	r0x1023,W
     004A 00rr                      1-  405     	MOVAR	STK02
                                    1-  406     	BANKSEL	r0x1024
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1-  407     	MOVR	r0x1024,W
     004D 00rr                      1-  408     	MOVAR	STK01
                                    1-  409     	BANKSEL	r0x1025
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 01rr                      1-  410     	MOVR	r0x1025,W
     0050 00rr                      1-  411     	MOVAR	STK00
     0051 21A0                      1-  412     	MOVIA	0xa0
                                    1-  413     	MCALL	_CS1630_SendPack
     0052 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  414     	.line	71, "BSP\app_tx.c"; 	CS1630_CE_High(); // 产生CE脉冲，开始发送
                                    1-  415     	MCALL	_CS1630_CE_High
     0053 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  416     	.line	72, "BSP\app_tx.c"; 	delay_40us(); // 等待脉冲稳定
                                    1-  417     	MCALL	_delay_40us
     0054 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  418     	.line	73, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 结束脉冲
                                    1-  419     	MCALL	_CS1630_CE_Low
     0055 2rrr                      3-   65 m1      LCALL rom_address
     0056                           1-  420     _02009_DS_:
                                    1-  421     	.line	77, "BSP\app_tx.c"; 	status = CS1630_read_byte(CS1630_BANK0_STATUS); // 读取状态寄存器
     0056 2107                      1-  422     	MOVIA	0x07
                                    1-  423     	MCALL	_CS1630_read_byte
     0057 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  424     	BANKSEL	r0x1023
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 00rr                      1-  425     	MOVAR	r0x1023
                                    1-  426     	.line	78, "BSP\app_tx.c"; 	if ((TX_DS & status) || (MAX_RT & status)) // 检查发送完成或重传达到最大次数
     005A 0Err                      1-  427     	BTRSC	r0x1023,5
                                    1-  428     	MGOTO	_02005_DS_
     005B 3rrr                      3-   62 m1      LGOTO rom_address
     005C 0Arr                      1-  429     	BTRSS	r0x1023,4
                                    1-  430     	MGOTO	_02009_DS_
     005D 3rrr                      3-   62 m1      LGOTO rom_address
     005E                           1-  431     _02005_DS_:
                                    1-  432     	.line	80, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, status); // 清除状态
                                    1-  433     	BANKSEL	r0x1023
     005E rrrr                      3-  109 m1      .banksel ram_address
     005F 01rr                      1-  434     	MOVR	r0x1023,W
     0060 00rr                      1-  435     	MOVAR	STK00
     0061 2107                      1-  436     	MOVIA	0x07
                                    1-  437     	MCALL	_CS1630_write_byte
     0062 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  438     	.line	68, "BSP\app_tx.c"; 	for(i = 0; i < 3; i++)
                                    1-  439     	BANKSEL	r0x1022
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 05rr                      1-  440     	INCR	r0x1022,F
                                    1-  441     ;;unsigned compare: left < lit(0x3=3), size=1
     0065 2103                      1-  442     	MOVIA	0x03
     0066 04rr                      1-  443     	SUBAR	r0x1022,W
     0067 0803                      1-  444     	BTRSS	STATUS,0
                                    1-  445     	MGOTO	_02025_DS_
     0068 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  446     	.line	64, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  447     	BANKSEL	r0x1021
     0069 rrrr                      3-  109 m1      .banksel ram_address
     006A 05rr                      1-  448     	INCR	r0x1021,F
                                    1-  449     ;;unsigned compare: left < lit(0x3=3), size=1
     006B 2103                      1-  450     	MOVIA	0x03
     006C 04rr                      1-  451     	SUBAR	r0x1021,W
     006D 0803                      1-  452     	BTRSS	STATUS,0
                                    1-  453     	MGOTO	_02027_DS_
     006E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  454     	.line	60, "BSP\app_tx.c"; 	for(k =0; k < 2; k++)
                                    1-  455     	BANKSEL	r0x1020
     006F rrrr                      3-  109 m1      .banksel ram_address
     0070 05rr                      1-  456     	INCR	r0x1020,F
                                    1-  457     ;;unsigned compare: left < lit(0x2=2), size=1
     0071 2102                      1-  458     	MOVIA	0x02
     0072 04rr                      1-  459     	SUBAR	r0x1020,W
     0073 0803                      1-  460     	BTRSS	STATUS,0
                                    1-  461     	MGOTO	_02029_DS_
     0074 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  462     	MGOTO	_02024_DS_
     0075 3rrr                      3-   62 m1      LGOTO rom_address
     0076                           1-  463     _02050_DS_:
                                    1-  464     	.line	91, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  465     	BANKSEL	r0x1020
     0076 rrrr                      3-  109 m1      .banksel ram_address
     0077 02rr                      1-  466     	CLRR	r0x1020
     0078                           1-  467     _02033_DS_:
                                    1-  468     	.line	93, "BSP\app_tx.c"; 	CLRWDT();
     0078 0002                      1-  469     	clrwdt
                                    1-  470     	.line	94, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_RF_CH, channel_index[idx]); // 设置射频频道
                                    1-  471     	BANKSEL	r0x1020
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 01rr                      1-  472     	MOVR	r0x1020,W
     007B 25rr                      1-  473     	ADDIA	(_channel_index + 0)
                                    1-  474     	BANKSEL	r0x1021
     007C rrrr                      3-  109 m1      .banksel ram_address
     007D 00rr                      1-  475     	MOVAR	r0x1021
     007E 21rr                      1-  476     	MOVIA	((_channel_index + 0) >> 8) & 0xff
     007F 2600                      1-  477     	ADCIA	0x00
                                    1-  478     	BANKSEL	r0x1022
     0080 rrrr                      3-  109 m1      .banksel ram_address
     0081 00rr                      1-  479     	MOVAR	r0x1022
                                    1-  480     	BANKSEL	r0x1021
     0082 rrrr                      3-  109 m1      .banksel ram_address
     0083 01rr                      1-  481     	MOVR	r0x1021,W
     0084 00rr                      1-  482     	MOVAR	STK01
                                    1-  483     	BANKSEL	r0x1022
     0085 rrrr                      3-  109 m1      .banksel ram_address
     0086 01rr                      1-  484     	MOVR	r0x1022,W
     0087 00rr                      1-  485     	MOVAR	STK00
     0088 2180                      1-  486     	MOVIA	0x80
                                    1-  487     	MCALL	__gptrget1
     0089 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  488     	BANKSEL	r0x1023
     008A rrrr                      3-  109 m1      .banksel ram_address
     008B 00rr                      1-  489     	MOVAR	r0x1023
     008C 01rr                      1-  490     	MOVR	r0x1023,W
     008D 00rr                      1-  491     	MOVAR	STK00
     008E 2105                      1-  492     	MOVIA	0x05
                                    1-  493     	MCALL	_CS1630_write_byte
     008F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  494     	.line	95, "BSP\app_tx.c"; 	for(i = 0; i < 3; i++)
                                    1-  495     	BANKSEL	r0x1021
     0090 rrrr                      3-  109 m1      .banksel ram_address
     0091 02rr                      1-  496     	CLRR	r0x1021
     0092                           1-  497     _02031_DS_:
                                    1-  498     	.line	97, "BSP\app_tx.c"; 	CS1630_SendPack(RF_W_TX_PAYLOAD, CS1630_Tx_Payload, 0x14); // 发送数据包
     0092 21rr                      1-  499     	MOVIA	(_CS1630_Tx_Payload + 0)
                                    1-  500     	BANKSEL	r0x1022
     0093 rrrr                      3-  109 m1      .banksel ram_address
     0094 00rr                      1-  501     	MOVAR	r0x1022
                                    1-  502     	BANKSEL	r0x1023
     0095 rrrr                      3-  109 m1      .banksel ram_address
     0096 02rr                      1-  503     	CLRR	r0x1023
                                    1-  504     	BANKSEL	r0x1024
     0097 rrrr                      3-  109 m1      .banksel ram_address
     0098 02rr                      1-  505     	CLRR	r0x1024
     0099 2114                      1-  506     	MOVIA	0x14
     009A 00rr                      1-  507     	MOVAR	STK03
                                    1-  508     	BANKSEL	r0x1022
     009B rrrr                      3-  109 m1      .banksel ram_address
     009C 01rr                      1-  509     	MOVR	r0x1022,W
     009D 00rr                      1-  510     	MOVAR	STK02
                                    1-  511     	BANKSEL	r0x1023
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 01rr                      1-  512     	MOVR	r0x1023,W
     00A0 00rr                      1-  513     	MOVAR	STK01
                                    1-  514     	BANKSEL	r0x1024
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 01rr                      1-  515     	MOVR	r0x1024,W
     00A3 00rr                      1-  516     	MOVAR	STK00
     00A4 21A0                      1-  517     	MOVIA	0xa0
                                    1-  518     	MCALL	_CS1630_SendPack
     00A5 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  519     	.line	98, "BSP\app_tx.c"; 	CS1630_CE_High(); // 产生CE脉冲，开始发送
                                    1-  520     	MCALL	_CS1630_CE_High
     00A6 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  521     	.line	99, "BSP\app_tx.c"; 	delay_40us(); // 等待脉冲稳定
                                    1-  522     	MCALL	_delay_40us
     00A7 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  523     	.line	100, "BSP\app_tx.c"; 	CS1630_CE_Low(); // 结束脉冲
                                    1-  524     	MCALL	_CS1630_CE_Low
     00A8 2rrr                      3-   65 m1      LCALL rom_address
     00A9                           1-  525     _02018_DS_:
                                    1-  526     	.line	104, "BSP\app_tx.c"; 	status = CS1630_read_byte(CS1630_BANK0_STATUS); // 读取状态寄存器
     00A9 2107                      1-  527     	MOVIA	0x07
                                    1-  528     	MCALL	_CS1630_read_byte
     00AA 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  529     	BANKSEL	r0x1022
     00AB rrrr                      3-  109 m1      .banksel ram_address
     00AC 00rr                      1-  530     	MOVAR	r0x1022
                                    1-  531     	.line	105, "BSP\app_tx.c"; 	if ((TX_DS & status) || (MAX_RT & status)) // 检查发送完成或重传达到最大次数
     00AD 0Err                      1-  532     	BTRSC	r0x1022,5
                                    1-  533     	MGOTO	_02014_DS_
     00AE 3rrr                      3-   62 m1      LGOTO rom_address
     00AF 0Arr                      1-  534     	BTRSS	r0x1022,4
                                    1-  535     	MGOTO	_02018_DS_
     00B0 3rrr                      3-   62 m1      LGOTO rom_address
     00B1                           1-  536     _02014_DS_:
                                    1-  537     	.line	107, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_STATUS, status); // 清除状态
                                    1-  538     	BANKSEL	r0x1022
     00B1 rrrr                      3-  109 m1      .banksel ram_address
     00B2 01rr                      1-  539     	MOVR	r0x1022,W
     00B3 00rr                      1-  540     	MOVAR	STK00
     00B4 2107                      1-  541     	MOVIA	0x07
                                    1-  542     	MCALL	_CS1630_write_byte
     00B5 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  543     	.line	95, "BSP\app_tx.c"; 	for(i = 0; i < 3; i++)
                                    1-  544     	BANKSEL	r0x1021
     00B6 rrrr                      3-  109 m1      .banksel ram_address
     00B7 05rr                      1-  545     	INCR	r0x1021,F
                                    1-  546     ;;unsigned compare: left < lit(0x3=3), size=1
     00B8 2103                      1-  547     	MOVIA	0x03
     00B9 04rr                      1-  548     	SUBAR	r0x1021,W
     00BA 0803                      1-  549     	BTRSS	STATUS,0
                                    1-  550     	MGOTO	_02031_DS_
     00BB 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  551     	.line	91, "BSP\app_tx.c"; 	for(idx = 0; idx < 3; idx++)
                                    1-  552     	BANKSEL	r0x1020
     00BC rrrr                      3-  109 m1      .banksel ram_address
     00BD 05rr                      1-  553     	INCR	r0x1020,F
                                    1-  554     ;;unsigned compare: left < lit(0x3=3), size=1
     00BE 2103                      1-  555     	MOVIA	0x03
     00BF 04rr                      1-  556     	SUBAR	r0x1020,W
     00C0 0803                      1-  557     	BTRSS	STATUS,0
                                    1-  558     	MGOTO	_02033_DS_
     00C1 3rrr                      3-   62 m1      LGOTO rom_address
     00C2                           1-  559     _02024_DS_:
                                    1-  560     	.line	115, "BSP\app_tx.c"; 	CS1630_write_byte(CS1630_BANK0_CONFIG, 0x00);
     00C2 2100                      1-  561     	MOVIA	0x00
     00C3 00rr                      1-  562     	MOVAR	STK00
     00C4 2100                      1-  563     	MOVIA	0x00
                                    1-  564     	MCALL	_CS1630_write_byte
     00C5 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  565     	.line	116, "BSP\app_tx.c"; 	delay_ms(1);
     00C6 2101                      1-  566     	MOVIA	0x01
                                    1-  567     	MCALL	_delay_ms
     00C7 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  568     	.line	117, "BSP\app_tx.c"; 	PB4=0;
                                    1-  569     	BANKSEL	_PORTB
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 1Err                      1-  570     	BCR	_PORTB,4
                                    1-  571     	.line	118, "BSP\app_tx.c"; 	}
                                    1-  572     	RETURN	
     00CA 0010                      3-   39 m1      ret
                                    1-  573     ; exit point of _send_ble_packet
                                    1-  576     ;	code size estimation:
                                    1-  577     ;	  151+   48 =   199 instructions (  494 byte)
                                    1-  579     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/BSP\app_tx.s
002 ny8a054e.inc
003 common.inc
004 BSP\app_tx.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
